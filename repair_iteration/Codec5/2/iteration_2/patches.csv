bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  b  =  in[inPos++]  -  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  -  1;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
2	[BUG]  [BUGGY]  int  b  =  in[inPos++]  -  2;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  -  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  -  2;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
3	[BUG]  [BUGGY]  int  b  =  in[inPos++]  /  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  /  1;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
4	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  -  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  -  1;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
5	[BUG]  [BUGGY]  int  b  =  in[inPos++]  -  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  -  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  -  4;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
6	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  module);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail,  module);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
7	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail,  modulus);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
8	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  1);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
9	[BUG]  [BUGGY]  b  =  decodeBase64(in,  inPos);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(in,  inPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(in,  inPos);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
10	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail,  4);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
11	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail,  3);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
12	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  modules);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail,  modules);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail,  modules);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
13	[BUG]  [BUGGY]  b  =  decodeBase64(in,  inAvail);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(in,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(in,  inAvail);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
14	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  32);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  32);	  DecodeBase64.decode(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	318	None	replace
15	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  8);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  8);	  decodeBase64(in,    inPos,    10);    	non-compiled	[CE]  ';'  expected	220	None	replace
16	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  5);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  5);	  decodeBase64(in,    inPos,    10);    	non-compiled	[CE]  ';'  expected	220	None	replace
17	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  12;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  12;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  12;	  inPos    =(inPos    +    1)%    7;    	non-compiled	[CE]  ';'  expected	129	None	replace
18	[BUG]  [BUGGY]  inPos  +=  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  4;	  if(inPos    >=    inAvail)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
19	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  2;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  2;  }	  if(inPos    >=    inAvail)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
20	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  5;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  5;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  5;  }	  if(inPos    >=    inAvail)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
21	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  +=  4;  }	  if(inPos    >=    inAvail)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  6);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  6);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	185	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  +  3);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	185	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  5);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  5);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	185	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  3);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  +  3);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	185	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  3);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  *  3);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	185	None	replace
27	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  2;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  2;	  byte    b    =    in[inPos++]    /    1;    	non-compiled	[CE]  ';'  expected	151	None	replace
28	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  3;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  3;	  byte    b    =    in[inPos++]    /    1;    	non-compiled	[CE]  ';'  expected	151	None	replace
29	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  /  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  /  1;	  byte    b    =    in[inPos++]    /    1;    	non-compiled	[CE]  ';'  expected	151	None	replace
30	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  6;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  6;	  byte    b    =    in[inPos++]    /    1;    	non-compiled	[CE]  ';'  expected	151	None	replace
31	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  *  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  *  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  *  1;	  byte    b    =    in[inPos++]    /    1;    	non-compiled	[CE]  ';'  expected	151	None	replace
32	[BUG]  [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
33	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
34	[BUG]  [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
35	[BUG]  [BUGGY]  DecodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
36	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
37	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
38	[BUG]  [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
39	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.UTF8)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.UTF8)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.UTF8)  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
40	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
41	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
42	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
43	[BUG]  [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64  inPos  =  decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
44	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  *  4);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	187	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  4);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  +  4);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	187	None	replace
47	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  5);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  5);	  DecodeBase64.decode(in,    inPos,    4);    	non-compiled	[CE]  ';'  expected	173	None	replace
48	[BUG]  [BUGGY]  inPos  +=  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  Integer.MAX_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  Integer.MAX_VALUE;	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
49	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
50	[BUG]  [BUGGY]  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  Integer.MAX_VALUE)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
51	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
52	[BUG]  [BUGGY]  inPos  -=  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  -=  Integer.MAX_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  -=  Integer.MAX_VALUE;	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
53	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
54	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0]  +  1;	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
55	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[1];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[1];	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
56	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0]  +  4;	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
57	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[0];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[0];	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
58	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[0];	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
59	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  3;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0]  +  3;	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
60	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[2];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[2];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[2];	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
61	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  0  :  inPos  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  0  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  0  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
62	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  3  :  inPos  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  3  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  3  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
63	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inAvail  +  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inAvail  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  0  :  inAvail  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
64	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  0  :  inPos  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  0  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  0  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
65	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  0  :  inPos  +  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  0  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  0  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
66	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inPos  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  0  :  inPos  +  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  0  :  inPos  +  2;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
67	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  inPos  +  1;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  4  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
68	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  2);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  2);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
69	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  6);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  6);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
70	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  8);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  8);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
71	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  1);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
72	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  5);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  5);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
73	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  16);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  16);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
74	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  32);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  32);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	210	None	replace
75	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  4;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
76	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  3;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  3;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
77	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  8;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  8;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
78	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inPos  +=  inAvail;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
79	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  6;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
80	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  INVALID;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  INVALID;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  INVALID;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
81	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  10;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  10;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  10;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
82	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
83	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
84	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
85	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  6;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  6;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
86	[BUG]  [BUGGY]  byte  b  =  inAvail  +  7;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  7;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  7;	  byte    b    =    inAvail    +    7++;    	non-compiled	[CE]  ';'  expected	225	None	replace
87	[BUG]  [BUGGY]  byte  b  =  inAvail  +  5++;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  5++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  5++;	  byte    b    =    inAvail    +    7++;    	non-compiled	[CE]  ';'  expected	225	None	replace
88	[BUG]  [BUGGY]  byte  b  =  inAvail  +  1++;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  1++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  1++;	  byte    b    =    inAvail    +    7++;    	non-compiled	[CE]  ';'  expected	225	None	replace
89	[BUG]  [BUGGY]  byte  b  =  inAvail  +  2++;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  2++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  2++;	  byte    b    =    inAvail    +    7++;    	non-compiled	[CE]  ';'  expected	225	None	replace
90	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail  +  1);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
91	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inPos,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(x,  inPos,  inAvail);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
92	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  0);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  0);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  0);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
93	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(x,  inPos);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
94	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  4);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
95	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  x);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  x);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  x);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
96	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  3);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
97	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  0,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  0,  inAvail);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
98	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
99	[BUG]  [BUGGY]  DecodeBase64  in  =  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64  in  =  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64  in  =  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
100	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
101	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
102	[BUG]  [BUGGY]  ';'  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ';'  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
103	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1);	  System.arraycopy(in,    0,    inPos,    3);    	non-compiled	[CE]  ';'  expected	79	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0);	  System.arraycopy(in,    0,    inPos,    3);    	non-compiled	[CE]  ';'  expected	79	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  32);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  32);	  System.arraycopy(in,    0,    inPos,    3);    	non-compiled	[CE]  ';'  expected	79	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  3);	  System.arraycopy(in,    0,    inPos,    3);    	non-compiled	[CE]  ';'  expected	79	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  4);	  System.arraycopy(in,    0,    inPos,    3);    	non-compiled	[CE]  ';'  expected	79	None	replace
109	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  0);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  0);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  0);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
110	[BUG]  [BUGGY]  ((  Base64)modulus).decode(x,  inAvailil);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(x,  inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(x,  inAvailil);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
111	[BUG]  [BUGGY]  ((  Base64)modulus).decode(x,  inAvaililil);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(x,  inAvaililil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(x,  inAvaililil);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
112	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvailil  +  1);  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvailil  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvailil  +  1);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
113	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  4);  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  4);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
114	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  0,  inAvaililil);  [CE]  ';'  expected  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  0,  inAvaililil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  0,  inAvaililil);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
115	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  x);  [CE]  ';'  expected  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  x);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  x);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
116	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  3);  [CE]  ';'  expected  [FE]                                                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  3);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
117	[BUG]  [BUGGY]  ||(inPos  >=  inPos  -  1))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inPos  -  1))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inPos  -  1))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
118	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
119	[BUG]  [BUGGY]  ||(inPos  >=  inPos  &&  inAvail  <  =  127))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inPos  &&  inAvail  <  =  127))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inPos  &&  inAvail  <  =  127))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
120	[BUG]  [BUGGY]  ||(inPos  >=  inPos  +  1))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inPos  +  1))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inPos  +  1))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
121	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
122	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
123	[BUG]  [BUGGY]  ||(inPos  >=  inPos  &&  inAvail  <  =  16))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inPos  &&  inAvail  <  =  16))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inPos  &&  inAvail  <  =  16))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
124	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  0  :  inAvail;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
125	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  1  :  inPos;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  1  :  inPos;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
126	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  3  :  inPos;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  3  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  3  :  inPos;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
127	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  4  :  inPos;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  4  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  4  :  inPos;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
128	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  -1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  -1  :  inPos;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
129	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  10  :  inPos;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  10  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  10  :  inPos;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
130	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  0  :  1;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  0  :  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  0  :  1;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
131	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  8  :  inPos;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  8  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  8  :  inPos;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
132	[BUG]  [BUGGY]  DecodeBase64.decode(modulus,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(modulus,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(modulus,  inPos,  inAvail);	  DecodeBase64.decode(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	191	None	replace
133	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  module,  eof);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  module,  eof);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  module,  eof);	  DecodeBase64.decode(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	191	None	replace
134	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  3);	  DecodeBase64.decode(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	191	None	replace
135	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  module,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  module,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  module,  modulus);	  DecodeBase64.decode(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	191	None	replace
136	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  modules);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  modules);	  DecodeBase64.decode(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	191	None	replace
137	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  0,  module);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  0,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  0,  module);	  DecodeBase64.decode(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	191	None	replace
138	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  1  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  1  :  inPos;	  inPos    =(inPos    <    <    4)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	379	None	replace
139	[BUG]  [BUGGY]  inPos  =(inPos  <  <  3)?  0  :  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  3)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  3)?  0  :  inPos;	  inPos    =(inPos    <    <    4)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	379	None	replace
140	[BUG]  [BUGGY]  inPos  =(inPos  <  <  16)?  0  :  inPos;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  16)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  16)?  0  :  inPos;	  inPos    =(inPos    <    <    4)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	379	None	replace
141	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  3  :  inPos;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  3  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  3  :  inPos;	  inPos    =(inPos    <    <    4)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	379	None	replace
142	[BUG]  [BUGGY]  inPos  =(inPos  <  <  5)?  0  :  inPos;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  5)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  5)?  0  :  inPos;	  inPos    =(inPos    <    <    4)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	379	None	replace
143	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  0  :  inAvail;	  inPos    =(inPos    <    <    4)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	379	None	replace
144	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  4,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
145	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  4,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
146	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  1,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  5,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  0,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
150	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  1,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
151	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  2);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  2);	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
152	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  6);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  6);	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
153	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  3);	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
154	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  1);	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
155	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  5);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  5);	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
156	[BUG]  [BUGGY]  byte  b  =  inPos  +  4;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  4;	  byte    b    =    inAvail    +    4;    	non-compiled	[CE]  ';'  expected	89	None	replace
157	[BUG]  [BUGGY]  byte  b  =  inAvail  +  2;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  2;	  byte    b    =    inAvail    +    4;    	non-compiled	[CE]  ';'  expected	89	None	replace
158	[BUG]  [BUGGY]  byte  b  =  inAvail  +  5;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  5;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  5;	  byte    b    =    inAvail    +    4;    	non-compiled	[CE]  ';'  expected	89	None	replace
159	[BUG]  [BUGGY]  byte  b  =  inAvail  +  8;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  8;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  8;	  byte    b    =    inAvail    +    4;    	non-compiled	[CE]  ';'  expected	89	None	replace
160	[BUG]  [BUGGY]  byte  b  =  this.inAvail  +  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvail  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvail  +  4;	  byte    b    =    inAvail    +    4;    	non-compiled	[CE]  ';'  expected	89	None	replace
161	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  4);	  decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	321	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
164	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
165	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  ';'  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  ';'  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail);  ';'	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  eof  =  true;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail);  eof  =  true;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail);  eof  =  true;	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
170	[BUG]  [BUGGY]  inPos  +=  1;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  1;	  if(inPos    >=    inAvail)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
171	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  +=  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  +=  1;  }	  if(inPos    >=    inAvail)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  6,  inAvail  +  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  6,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  6,  inAvail  +  1);	  System.arraycopy(in,    0,    inPos,    6,    inAvail);    	non-compiled	[CE]  ';'  expected	183	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  8,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  8,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  8,  inAvail);	  System.arraycopy(in,    0,    inPos,    6,    inAvail);    	non-compiled	[CE]  ';'  expected	183	None	replace
174	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  module);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  module);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
175	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
176	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  modulus);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
177	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  1);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
178	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  0);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
179	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  PAD);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  PAD);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
180	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  3;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  3;  }	  if(inPos    >=    inAvail)    {    inPos    =    4;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
181	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  2;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  2;  }	  if(inPos    >=    inAvail)    {    inPos    =    4;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
182	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  4;  }	  if(inPos    >=    inAvail)    {    inPos    =    4;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
183	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  5;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  5;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  5;  }	  if(inPos    >=    inAvail)    {    inPos    =    4;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
184	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  4;  }	  if(inPos    >=    inAvail)    {    inPos    =    4;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
185	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos  +  1);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
186	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  inAvail  +  1);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
187	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  x);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  x);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
188	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  inAvail  +  1);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
189	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  inAvail);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
190	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  8;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  8;	  inPos    =(inPos    +    1)%    8;    	non-compiled	[CE]  ';'  expected	128	None	replace
191	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inAvail);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
192	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos  +  1);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
193	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inPos);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
194	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos++);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos++);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
195	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos  +  6);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos  +  6);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
196	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos  +  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos  +  3);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
197	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inAvail,  0,  inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inAvail,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inAvail,  0,  inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
198	[BUG]  [BUGGY]  ';'  expected  =  true;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  true;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  true;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
199	[BUG]  [BUGGY]  ';'  expected  =  inPos  +  inAvail;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  inPos  +  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  inPos  +  inAvail;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
200	[BUG]  [BUGGY]  ';'  expected  =  false;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  false;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  false;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
201	[BUG]  [BUGGY]  ';'  expected  =  inPos  +  inPos;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  inPos  +  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  inPos  +  inPos;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
202	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  3  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  3  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  3  +  1);	  DecodeBase64.decode(in,    inPos,    3);    	non-compiled	[CE]  ';'  expected	174	None	replace
203	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  4);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
204	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  3);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
205	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  0);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
206	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  1);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
207	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  2);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  2);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
208	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  8);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  8);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
209	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  10);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  10);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
210	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  6);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  6);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
211	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  32);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  32);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
212	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
213	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
214	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
215	[BUG]  [BUGGY]  if(inPos!=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos!=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos!=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
216	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
217	[BUG]  [BUGGY]  if(inPos  >  0)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >  0)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >  0)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
218	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  decodeBase64(inPos,  inAvail);  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
219	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  &  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inAvail++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  &  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
220	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inAvail++]  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inAvail++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inAvail++]  +  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
221	[BUG]  [BUGGY]  byte  b  =  inPos[inAvail++]  +  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[inAvail++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[inAvail++]  +  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
222	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  -  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inAvail++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  -  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
223	[BUG]  [BUGGY]  int  b  =  in[inAvail++]  +  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inAvail++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inAvail++]  +  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
224	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inAvail++]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  +  2;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
225	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  +  4;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inAvail++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  +  4;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
226	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
227	[BUG]  [BUGGY]  Integer  inPos  =  DecodeBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  DecodeBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  DecodeBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
228	[BUG]  [BUGGY]  Integer  inPos  =  DecodeBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  DecodeBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  DecodeBase64.decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
229	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
230	[BUG]  [BUGGY]  ';'  expected  =  Integer.parseInt(modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  Integer.parseInt(modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  Integer.parseInt(modulus);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
231	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos++);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos++);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
232	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inAvail  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inAvail  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  1  :  inAvail  +  1;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
233	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos  +  2;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos  +  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  1  :  inPos  +  2;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
234	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  1  :  inPos  +  1;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  1  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  1  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
235	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  2  :  inPos  +  1;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  2  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  2  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
236	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  1  :  inPos  +  1;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  1  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  1  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
237	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  1  :  inPos  +  1;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  1  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  1  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
238	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos  +  3;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  1  :  inPos  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  1  :  inPos  +  3;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
239	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  1);	  DecodeBase64.decode(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	193	None	replace
240	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  2);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  2);	  DecodeBase64.decode(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	193	None	replace
241	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  0,  modulus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  0,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  0,  modulus);	  DecodeBase64.decode(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	193	None	replace
242	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  6);	  DecodeBase64.decode(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	193	None	replace
243	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  8);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  8);	  DecodeBase64.decode(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	193	None	replace
244	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  4  +  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  4  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  4  +  1;	  byte    b    =    in[inPos++]    /    4;    	non-compiled	[CE]  ';'  expected	30	None	replace
245	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  4  +  3;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  4  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  4  +  3;	  byte    b    =    in[inPos++]    /    4;    	non-compiled	[CE]  ';'  expected	30	None	replace
246	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  8;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  8;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  8;	  byte    b    =    in[inPos++]    /    4;    	non-compiled	[CE]  ';'  expected	30	None	replace
247	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  4  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  4  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  4  +  2;	  byte    b    =    in[inPos++]    /    4;    	non-compiled	[CE]  ';'  expected	30	None	replace
248	[BUG]  [BUGGY]  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  module  ==  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
249	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
250	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
251	[BUG]  [BUGGY]  ';'  expected  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
252	[BUG]  [BUGGY]  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  module!=  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
253	[BUG]  [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
254	[BUG]  [BUGGY]  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
255	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail,  module);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
256	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail,  modulus);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
257	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
258	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail,  PAD);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
259	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail  +  1);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
260	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
261	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
262	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
263	[BUG]  [BUGGY]  byte  b  =  this.data[inAvailable++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[inAvailable++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inAvailable++];	  byte    b    =    data[inAvailable++];    	non-compiled	[CE]  ';'  expected	201	None	replace
264	[BUG]  [BUGGY]  int  b  =  data[inAvailable++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inAvailable++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inAvailable++];	  byte    b    =    data[inAvailable++];    	non-compiled	[CE]  ';'  expected	201	None	replace
265	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inAvailable++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inAvailable++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inAvailable++];	  byte    b    =    data[inAvailable++];    	non-compiled	[CE]  ';'  expected	201	None	replace
266	[BUG]  [BUGGY]  byte  b  =  data[inAvailable++]  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inAvailable++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvailable++]  +  1;	  byte    b    =    data[inAvailable++];    	non-compiled	[CE]  ';'  expected	201	None	replace
267	[BUG]  [BUGGY]  char  b  =  data[inAvailable++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  data[inAvailable++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  data[inAvailable++];	  byte    b    =    data[inAvailable++];    	non-compiled	[CE]  ';'  expected	201	None	replace
268	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  5);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  5);	  DecodeBase64.decode(inPos,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	271	None	replace
269	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  2);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  inAvail  +  2);	  DecodeBase64.decode(inPos,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	271	None	replace
270	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  7);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  7);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  7);	  DecodeBase64.decode(inPos,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	271	None	replace
271	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  8);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  8);	  DecodeBase64.decode(inPos,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	271	None	replace
272	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  4;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
273	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
274	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  10;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  10;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  10;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
275	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  8;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
276	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  3;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
277	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  INVALID_POP;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  INVALID_POP;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
278	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
279	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  PAD);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  PAD);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
280	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
281	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
282	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
283	[BUG]  [BUGGY]  NeighborDecodeBase64.decodeBase64(x,  inPos,  PAD);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecodeBase64.decodeBase64(x,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecodeBase64.decodeBase64(x,  inPos,  PAD);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
284	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  Base64.decodeBase64(x,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  Base64.decodeBase64(x,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  Base64.decodeBase64(x,  inPos,  PAD);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
285	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
286	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos++,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos++,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos++,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
287	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  5,  inAvail  +  1);	  System.arraycopy(in,    0,    inPos,    5,    inAvail);    	non-compiled	[CE]  ';'  expected	80	None	replace
288	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail  +  1);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
289	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  -  inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail  -  inPos);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
290	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inPos  +  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inPos  +  1);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
291	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inPos  +  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inPos  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inPos  +  6);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
292	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  -  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail  -  1);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
293	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail  +  4);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
294	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  0  :  inAvail;	  inPos    =(inPos    <    <    1)?    0    :    inAvail;    	non-compiled	[CE]  ';'  expected	106	None	replace
295	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  3  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  3  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  3  :  inAvail;	  inPos    =(inPos    <    <    1)?    0    :    inAvail;    	non-compiled	[CE]  ';'  expected	106	None	replace
296	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  0  :  inAvail;	  inPos    =(inPos    <    <    1)?    0    :    inAvail;    	non-compiled	[CE]  ';'  expected	106	None	replace
297	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  inAvail  +  1);	  DecodeBase64.decode(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	189	None	replace
298	[BUG]  [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64  inPos  =  decodeBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
299	[BUG]  [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
300	[BUG]  [BUGGY]  validateBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  validateBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	validateBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
301	[BUG]  [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inA  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inA  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inA	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
302	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[0]  +  1;	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
303	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[1];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[1];	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
304	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  4;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[0]  +  4;	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
305	[BUG]  [BUGGY]  int  b  =  DECODE_BACKSLASH[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_BACKSLASH[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_BACKSLASH[0];	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
306	[BUG]  [BUGGY]  char  b  =  DECODE_BACKSLASH[0];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_BACKSLASH[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_BACKSLASH[0];	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
307	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  &  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[0]  &  1;	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
308	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  3;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[0]  +  3;	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
309	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  4);	  DecodeBase64.decodeBase64(inPos,    inAvail,    inAvail);    	non-compiled	[CE]  ';'  expected	48	None	replace
310	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  3);	  DecodeBase64.decodeBase64(inPos,    inAvail,    inAvail);    	non-compiled	[CE]  ';'  expected	48	None	replace
311	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  inAvail,  modulus);	  DecodeBase64.decodeBase64(inPos,    inAvail,    inAvail);    	non-compiled	[CE]  ';'  expected	48	None	replace
312	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  10);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  10);	  DecodeBase64.decodeBase64(inPos,    inAvail,    inAvail);    	non-compiled	[CE]  ';'  expected	48	None	replace
313	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  modulus  +  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  modulus  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1,  modulus  +  1);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
314	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  module  +  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  module  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  module  +  1);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
315	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  modulus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1,  modulus);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
316	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos++,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos++,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos++,  inAvail  +  1);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
317	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  module);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1,  module);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
318	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  3);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  3);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
319	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail  +  1);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
320	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  6);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  6);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
321	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
322	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
323	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
324	[BUG]  [BUGGY]  decodeBase64(inPos,  inPos);  break;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inPos);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inPos);  break;	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
325	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos,  0,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
326	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
327	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  3);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
328	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
329	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  3;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  3;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    1;    	non-compiled	[CE]  ';'  expected	360	None	replace
330	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  4;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    1;    	non-compiled	[CE]  ';'  expected	360	None	replace
331	[BUG]  [BUGGY]  int  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  1;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    1;    	non-compiled	[CE]  ';'  expected	360	None	replace
332	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  2;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  2;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    1;    	non-compiled	[CE]  ';'  expected	360	None	replace
333	[BUG]  [BUGGY]  byte  b  =  out[inPos++]  &  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  out[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  out[inPos++]  &  1;	  byte    b    =    out[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	46	None	replace
334	[BUG]  [BUGGY]  int  b  =  out[inPos++]  +  1;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  out[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  out[inPos++]  +  1;	  byte    b    =    out[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	46	None	replace
335	[BUG]  [BUGGY]  byte  b  =  out[inPos++]  -  1;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  out[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  out[inPos++]  -  1;	  byte    b    =    out[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	46	None	replace
336	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inAvail,  0,  inPos  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inAvail,  0,  inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inAvail,  0,  inPos  +  1);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
337	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inAvail,  1,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inAvail,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inAvail,  1,  inPos);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
338	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inAvail,  0,  inPos  -  1);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inAvail,  0,  inPos  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inAvail,  0,  inPos  -  1);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
339	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  2);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  inAvail  +  2);	  System.arraycopy(in,    0,    inPos,    3,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	140	None	replace
340	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  3);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  inAvail  +  3);	  System.arraycopy(in,    0,    inPos,    3,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	140	None	replace
341	[BUG]  [BUGGY]  Integer  inPos  =(inPos  +  1)%  4;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =(inPos  +  1)%  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =(inPos  +  1)%  4;	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
342	[BUG]  [BUGGY]  (inPos  +  1)*  inPos  =(inPos  +  1)%  4;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inPos  =(inPos  +  1)%  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inPos  =(inPos  +  1)%  4;	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
343	[BUG]  [BUGGY]  decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos  +  1);	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
344	[BUG]  [BUGGY]  byte  b  =  inPos[1];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[1];	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
345	[BUG]  [BUGGY]  byte  b  =  inPos[0]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[0]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[0]  +  1;	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
346	[BUG]  [BUGGY]  byte  b  =  inAvail[0];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail[0];	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
347	[BUG]  [BUGGY]  int  b  =  inPos[0];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos[0];	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
348	[BUG]  [BUGGY]  byte  b  =  this.inPos[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inPos[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inPos[0];	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
349	[BUG]  [BUGGY]  byte  b  =  inAvailable[0];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvailable[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailable[0];	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
350	[BUG]  [BUGGY]  byte  b  =  inPos[0]  +  4;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[0]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[0]  +  4;	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
351	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  2  -  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  2  -  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  2  -  inAvail);	  DecodeBase64.decode(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	177	None	replace
352	[BUG]  [BUGGY]  byte  b  =  inPos  +  8;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  8;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  8;	  byte    b    =    inPos    +    8++;    	non-compiled	[CE]  ';'  expected	369	None	replace
353	[BUG]  [BUGGY]  byte  b  =  inPos  +  7++;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  7++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  7++;	  byte    b    =    inPos    +    8++;    	non-compiled	[CE]  ';'  expected	369	None	replace
354	[BUG]  [BUGGY]  byte  b  =  inPos  +  1++;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  1++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  1++;	  byte    b    =    inPos    +    8++;    	non-compiled	[CE]  ';'  expected	369	None	replace
355	[BUG]  [BUGGY]  byte  b  =  inPos  +  2++;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  2++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  2++;	  byte    b    =    inPos    +    8++;    	non-compiled	[CE]  ';'  expected	369	None	replace
356	[BUG]  [BUGGY]  byte  b  =  inPos  +  5++;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  5++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  5++;	  byte    b    =    inPos    +    8++;    	non-compiled	[CE]  ';'  expected	369	None	replace
357	[BUG]  [BUGGY]  byte  b  =  inAvail  +  inPos;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  inPos;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
358	[BUG]  [BUGGY]  int  b  =  inPos  +  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  inAvail;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
359	[BUG]  [BUGGY]  int  b  =  inAvail  +  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  4;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
360	[BUG]  [BUGGY]  char  b  =  inAvail  +  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  inAvail  +  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  inAvail  +  inPos;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
361	[BUG]  [BUGGY]  b  =  inPos  +  inAvail;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  b  =  inPos  +  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  inPos  +  inAvail;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
362	[BUG]  [BUGGY]  int  b  =  inAvail  +  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  1;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
363	[BUG]  [BUGGY]  int  b  =  inAvail  +  3;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  3;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
364	[BUG]  [BUGGY]  int  b  =  inAvail  +  8;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  8;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  8;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
365	[BUG]  [BUGGY]  int  b  =  inAvail  +  6;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  6;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
366	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  2);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	290	None	replace
367	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  6);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	290	None	replace
368	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  3);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	290	None	replace
369	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  5);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  5);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	290	None	replace
370	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  *  3);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  *  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  *  3);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	290	None	replace
371	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  8);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  8);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	290	None	replace
372	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  INVALID;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  INVALID;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  INVALID;  }	  if(inPos    >=    inAvail)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	133	None	replace
373	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
374	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
375	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
376	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
377	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
378	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in[inPos++];  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in[inPos++];  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in[inPos++];  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
379	[BUG]  [BUGGY]  if(inPos!=  in.length)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos!=  in.length)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos!=  in.length)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
380	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
381	[BUG]  [BUGGY]  DecodeBase64(in,  inPos,  PAD);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(in,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(in,  inPos,  PAD);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
382	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos++,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos++,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos++,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
383	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
384	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
385	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
386	[BUG]  [BUGGY]  inPos  =  inAvailable.length  -  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvailable.length  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvailable.length  -  1;	  inPos    =    in.length    -    1;    	non-compiled	[CE]  ';'  expected	36	None	replace
387	[BUG]  [BUGGY]  inPos  =  inAvail  -  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  -  1;	  inPos    =    in.length    -    1;    	non-compiled	[CE]  ';'  expected	36	None	replace
388	[BUG]  [BUGGY]  byte  b  =  this.decode[inPos++]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inPos++]  +  1;	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
389	[BUG]  [BUGGY]  int  b  =  this.decode[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.decode[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.decode[inPos++];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
390	[BUG]  [BUGGY]  byte  b  =  this.decode[inAvail  +  1];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[inAvail  +  1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inAvail  +  1];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
391	[BUG]  [BUGGY]  char  b  =  this.decode[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  this.decode[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.decode[inPos++];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
392	[BUG]  [BUGGY]  byte  b  =  this.decode[inAvail++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inAvail++];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
393	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(modulus,  inPos,  inAvail);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(modulus,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(modulus,  inPos,  inAvail);	  DecodeBase64.decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	143	None	replace
394	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  0,  modulus);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  0,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  0,  modulus);	  DecodeBase64.decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	143	None	replace
395	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  modules);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  modules);	  DecodeBase64.decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	143	None	replace
396	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  8);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  8);	  DecodeBase64.decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	143	None	replace
397	[BUG]  [BUGGY]  inPos  +=  7;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  7;	  if(inPos    >=    inAvail)    {    inPos    +=    7;    }    	non-compiled	[CE]  ';'  expected	380	None	replace
398	[BUG]  [BUGGY]  inPos  +=  6;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  6;	  if(inPos    >=    inAvail)    {    inPos    +=    7;    }    	non-compiled	[CE]  ';'  expected	380	None	replace
399	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  0,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
400	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
401	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  inPos,  0,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
402	[BUG]  [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inPos);  break;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inPos);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64  inPos  =  decodeBase64(inPos,  inPos);  break;	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
403	[BUG]  [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64  inPos  =  decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
404	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  1,  inPos);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  1,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
405	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  PAD);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  PAD);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
406	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  modulus);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  modulus);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
407	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  module);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  module);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
408	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  eof  =  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  eof  =  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  eof  =  decodeBase64(inPos,  inAvailable);  }	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
409	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  4);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  4);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
410	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  3);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  3);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
411	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
412	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  eof  =  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  eof  =  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  eof  =  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
413	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  32);  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  32);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
414	[BUG]  [BUGGY]  int  b  =  inPos  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  1;	  byte    b    =    inPos    +    1;    	non-compiled	[CE]  ';'  expected	226	None	replace
415	[BUG]  [BUGGY]  byte  b  =  inPos  +  3;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  3;	  byte    b    =    inPos    +    1;    	non-compiled	[CE]  ';'  expected	226	None	replace
416	[BUG]  [BUGGY]  byte  b  =  inPos  +  2;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  2;	  byte    b    =    inPos    +    1;    	non-compiled	[CE]  ';'  expected	226	None	replace
417	[BUG]  [BUGGY]  byte  b  =  this.inPos  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inPos  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inPos  +  1;	  byte    b    =    inPos    +    1;    	non-compiled	[CE]  ';'  expected	226	None	replace
418	[BUG]  [BUGGY]  byte  b  =  inPos  +  6;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  6;	  byte    b    =    inPos    +    1;    	non-compiled	[CE]  ';'  expected	226	None	replace
419	[BUG]  [BUGGY]  char  b  =  in[inPos++]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  +  1;	  int    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	83	None	replace
420	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  +  1;	  int    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	83	None	replace
421	[BUG]  [BUGGY]  int  b  =  in[inPos++]  %  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  %  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  %  1;	  int    b    =    in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	83	None	replace
422	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  6;  }	  if(inPos    >=    inPos)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	382	None	replace
423	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  3;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  3;  }	  if(inPos    >=    inPos)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	382	None	replace
424	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  8;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  8;  }	  if(inPos    >=    inPos)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	382	None	replace
425	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  2;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  2;  }	  if(inPos    >=    inPos)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	382	None	replace
426	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  7;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  7;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  7;  }	  if(inPos    >=    inPos)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	382	None	replace
427	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  5;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  5;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  5;  }	  if(inPos    >=    inPos)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	382	None	replace
428	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  2);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
429	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  3);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
430	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  1,  modulus);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
431	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  4);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
432	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos  +  1,  inAvail  +  1);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
433	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  6);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
434	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  *  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  *  1);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
435	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  -  1);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  -  1);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
436	[BUG]  [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64  inPos  =  decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64  inPos  =  decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
437	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
438	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
439	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
440	[BUG]  [BUGGY]  DecodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
441	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  0;  }	  if(inPos    ==    inAvail)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
442	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    ==    inAvail)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
443	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    ==    inAvail)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	137	None	replace
444	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
445	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
446	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
447	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
448	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
449	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
450	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvailable);	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
451	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
452	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  outPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  outPos);	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
453	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
454	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
455	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
456	[BUG]  [BUGGY]  byte  b  =  inAvailable++;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvailable++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailable++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
457	[BUG]  [BUGGY]  byte  b  =  inAvail++;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
458	[BUG]  [BUGGY]  int  b  =  inPos++;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
459	[BUG]  [BUGGY]  byte  b  =  this.inPos++;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inPos++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inPos++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
460	[BUG]  [BUGGY]  byte  b  =  inAvailage++;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvailage++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailage++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
461	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x);	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
462	[BUG]  [BUGGY]  DescodeBase64.decodeBase64(inPos,  x);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DescodeBase64.decodeBase64(inPos,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DescodeBase64.decodeBase64(inPos,  x);	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
463	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inAvail);	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
464	[BUG]  [BUGGY]  Base64.decodeBase64(inPos,  x);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Base64.decodeBase64(inPos,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Base64.decodeBase64(inPos,  x);	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
465	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inpos,  x);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inpos,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inpos,  x);	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
466	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inAvail,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inAvail,  inPos);	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
467	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  x);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  x);	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
468	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  3);	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
469	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  4);	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
470	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  32);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  32);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
471	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32,  PAD);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  32,  PAD);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
472	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32,  modulus);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  32,  modulus);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
473	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  16);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  16);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
474	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32  +  1);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  32  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  32  +  1);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
475	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  64);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  64);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  64);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
476	[BUG]  [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
477	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
478	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
479	[BUG]  [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  PAD)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  PAD)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  if(modulus  ==  PAD)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
480	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  3);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  3);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
481	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
482	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  4);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  4);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
483	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
484	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  PAD);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  PAD);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
485	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
486	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  1);  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  1);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
487	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  module);  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
488	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  PAD);  }  [CE]  ';'  expected  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  PAD);  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
489	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inPos,  inAvailil);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inPos,  inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(x,  inPos,  inAvailil);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
490	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  1);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  1);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
491	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  0,  inAvaililil);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  0,  inAvaililil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  0,  inAvaililil);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
492	[BUG]  [BUGGY]  inAvail  =  inPos  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  inAvail  =  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  =  inPos  +  1;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
493	[BUG]  [BUGGY]  (inPos  +  inPos)>  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  inPos)>  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  inPos)>  inAvail;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
494	[BUG]  [BUGGY]  (inPos  +  1)*  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inPos;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
495	[BUG]  [BUGGY]  inAvail  =  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inAvail  =  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  =  inPos;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
496	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inAvail);	  ((    Base64)modulus).decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	232	None	replace
497	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(x);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(x);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(x);	  ((    Base64)modulus).decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	232	None	replace
498	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos  +  1);	  ((    Base64)modulus).decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	232	None	replace
499	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
500	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
501	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
502	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
503	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  1)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  1)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  >=  1)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
504	[BUG]  [BUGGY]  DecodeBase64(inPos,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(inPos,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(inPos,  inPos  +  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
505	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  /  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  /  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  /  4;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
506	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  -  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  -  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  -  4;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
507	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  &  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  &  1;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
508	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  &  4;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  &  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  &  4;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
509	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  +  2;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
510	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  +  3;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  +  3;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
511	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  -  1);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
512	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  +  1);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
513	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  -  4);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
514	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  3);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  -  3);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
515	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE[inPos]);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE[inPos]);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE[inPos]);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
516	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  4);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  +  4);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
517	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  3);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  +  3);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
518	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  6);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  +  6);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
519	[BUG]  [BUGGY]  ||  inPos  ==  0)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  ==  0)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  ==  0)  {  inPos  =  inAvail;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
520	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
521	[BUG]  [BUGGY]  if(inPos  ==  1)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  1)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  1)  {  inPos  =  inAvail;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
522	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  1;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
523	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  1;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
524	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  4;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
525	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  4;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
526	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  10;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  10;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  10;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
527	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  2;	  byte    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	33	None	replace
528	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  6;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  6;	  byte    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	33	None	replace
529	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  1L;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  1L;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  1L;	  byte    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	33	None	replace
530	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  0xFF;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  0xFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  0xFF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
531	[BUG]  [BUGGY]  char  b  =  in[inPos++]  &  0xFF;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  &  0xFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  &  0xFF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
532	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xF;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0xF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
533	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  &  0xFF;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  &  0xFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  &  0xFF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
534	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0x7F;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0x7F;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0x7F;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
535	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0x7FF;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0x7FF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0x7FF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
536	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0x3f;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0x3f;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0x3f;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
537	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  1  :  inPos;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  1  :  inPos;	  inPos    =(inPos    <    <    2)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	111	None	replace
538	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  2);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  inAvail  +  2);	  System.arraycopy(in,    0,    inPos,    2,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	222	None	replace
539	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  inAvail  +  1,  modulus);	  System.arraycopy(in,    0,    inPos,    2,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	222	None	replace
540	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  inAvail  +  3);	  System.arraycopy(in,    0,    inPos,    2,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	222	None	replace
541	[BUG]  [BUGGY]  decodeBase64(inPos,  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  1);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
542	[BUG]  [BUGGY]  decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  3);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
543	[BUG]  [BUGGY]  decodeBase64(inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  0,  inAvail);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
544	[BUG]  [BUGGY]  decodeBase64(inPos,  2);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  2);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
545	[BUG]  [BUGGY]  decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  4);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
546	[BUG]  [BUGGY]  parseBase64(inPos,  0);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(inPos,  0);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
547	[BUG]  [BUGGY]  decodeBase64(inPos,  6);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  6);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
548	[BUG]  [BUGGY]  decodeBase64(inPos,  10);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  10);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
549	[BUG]  [BUGGY]  inPos  +=  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  Integer.MIN_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  Integer.MIN_VALUE;	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
550	[BUG]  [BUGGY]  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  Integer.MIN_VALUE)  {  inPos  +=  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
551	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
552	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  +=  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
553	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
554	[BUG]  [BUGGY]  inPos  -=  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  -=  Integer.MIN_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  -=  Integer.MIN_VALUE;	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
555	[BUG]  [BUGGY]  inPos  =  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MIN_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MIN_VALUE;	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
556	[BUG]  [BUGGY]  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  Integer.MIN_VALUE)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
557	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  1;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  1;	  inPos    =(inPos    +    1)%    6;    	non-compiled	[CE]  ';'  expected	123	None	replace
558	[BUG]  [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleus  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
559	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
560	[BUG]  [BUGGY]  ||  moduleis  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleis  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleis  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
561	[BUG]  [BUGGY]  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
562	[BUG]  [BUGGY]  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
563	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
564	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos  +  1,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos  +  1,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos  +  1,  4);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
565	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  3);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
566	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
567	[BUG]  [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  2)?  this.in[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
568	[BUG]  [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
569	[BUG]  [BUGGY]  byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
570	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  inPos[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
571	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  DECODE_TABLE[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  DECODE_TABLE[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  DECODE_TABLE[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
572	[BUG]  [BUGGY]  inPos  =  in.length  /  4;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  /  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  /  4;	  inPos    =    in.length    -    4;    	non-compiled	[CE]  ';'  expected	37	None	replace
573	[BUG]  [BUGGY]  inPos  =  in.length  -  7;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  -  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  7;	  inPos    =    in.length    -    4;    	non-compiled	[CE]  ';'  expected	37	None	replace
574	[BUG]  [BUGGY]  inPos  =  in.length  -  8;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  -  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  8;	  inPos    =    in.length    -    4;    	non-compiled	[CE]  ';'  expected	37	None	replace
575	[BUG]  [BUGGY]  decodeBase64(inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos  +  1,  inAvail);	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
576	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  base64.decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  base64.decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  base64.decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
577	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
578	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
579	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  inAvail,  modulus);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
580	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  moduleus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  moduleus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  moduleus);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
581	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modulus,  x);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modulus,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  modulus,  x);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
582	[BUG]  [BUGGY]  decodeBase64(modulus,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(modulus,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(modulus,  inPos,  inAvail);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
583	[BUG]  [BUGGY]  decodeBase64(modulus,  inPos,  inAvail,  in);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(modulus,  inPos,  inAvail,  in);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(modulus,  inPos,  inAvail,  in);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
584	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modulus,  0);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modulus,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  modulus,  0);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
585	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
586	[BUG]  [BUGGY]  ';'  expected  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
587	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
588	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
589	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  DECODE_TABLE.length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  DECODE_TABLE.length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  DECODE_TABLE.length))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
590	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
591	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  DECODE_TABLE.length))  {  throw  new  IllegalArgumentException( " ");  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  DECODE_TABLE.length))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  DECODE_TABLE.length))  {  throw  new  IllegalArgumentException( " ");	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
592	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  6))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  6))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  6))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
593	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
594	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  0,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  0,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  0,  modulus);	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
595	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  10);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  10);	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
596	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  32);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  32);	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
597	[BUG]  [BUGGY]  byte  b  =  this.data[0];  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[0];	  byte    b    =    data[0];    	non-compiled	[CE]  ';'  expected	301	None	replace
598	[BUG]  [BUGGY]  byte  b  =  data[1];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[1];	  byte    b    =    data[0];    	non-compiled	[CE]  ';'  expected	301	None	replace
599	[BUG]  [BUGGY]  byte  b  =  data[0]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[0]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[0]  +  1;	  byte    b    =    data[0];    	non-compiled	[CE]  ';'  expected	301	None	replace
600	[BUG]  [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
601	[BUG]  [BUGGY]  ';'  expected;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected;	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
602	[BUG]  [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
603	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
604	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
605	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
606	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  2);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  +  2);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	288	None	replace
607	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  2);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  *  2);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	288	None	replace
608	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
609	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
610	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
611	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  INVALID_POP;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
612	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  1;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
613	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  4;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
614	[BUG]  [BUGGY]  inPos  =  1;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  1;	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
615	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
616	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
617	[BUG]  [BUGGY]  ';'  expected  =  Integer.parseInt(inPos));  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  Integer.parseInt(inPos));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  Integer.parseInt(inPos));	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
618	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
619	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  PAD;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  PAD;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  PAD;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
620	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
621	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  inAvail);	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
622	[BUG]  [BUGGY]  byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
623	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  inPos[inPos++]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
624	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  1;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  1;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
625	[BUG]  [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
626	[BUG]  [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
627	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  =  0;  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
628	[BUG]  [BUGGY]  if(inPos  <  1)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  1)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  1)  {  inPos  =  1;  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
629	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
630	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
631	[BUG]  [BUGGY]  byte  b  =  this.in[0]  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[0]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[0]  +  1;	  byte    b    =    this.in[0];    	non-compiled	[CE]  ';'  expected	18	None	replace
632	[BUG]  [BUGGY]  byte  b  =  this.in[1];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[1];	  byte    b    =    this.in[0];    	non-compiled	[CE]  ';'  expected	18	None	replace
633	[BUG]  [BUGGY]  int  b  =  this.in[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[0];	  byte    b    =    this.in[0];    	non-compiled	[CE]  ';'  expected	18	None	replace
634	[BUG]  [BUGGY]  byte  b  =  this.in[0]  +  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[0]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[0]  +  4;	  byte    b    =    this.in[0];    	non-compiled	[CE]  ';'  expected	18	None	replace
635	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  eof);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  eof);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  eof);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
636	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  1);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
637	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  DECODE_TABLE);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  DECODE_TABLE);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  DECODE_TABLE);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
638	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  base64);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  base64);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  base64);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
639	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  0);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  0);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  0);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
640	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  DECODE_TABLE.length);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  DECODE_TABLE.length);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  DECODE_TABLE.length);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
641	[BUG]  [BUGGY]  b  =  decodeBase64(modulus  +  1);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus  +  1);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
642	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
643	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
644	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  return;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  return;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  inAvail  +  1,  inPos);  return;	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
645	[BUG]  [BUGGY]  byte[]  b  =  module.decodeBase64();  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  module.decodeBase64();  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  module.decodeBase64();	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
646	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  1);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
647	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  base64);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
648	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64.length);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64.length);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  base64.length);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
649	[BUG]  [BUGGY]  byte[]  b  =  modulus.decodeBase64();  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  modulus.decodeBase64();  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  modulus.decodeBase64();	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
650	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  outPos);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  outPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  outPos);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
651	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  4);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  4);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
652	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  3);  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  3);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
653	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
654	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  0);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  0);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
655	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
656	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
657	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
658	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
659	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
660	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
661	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
662	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
663	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  x);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  modulus,  x);	  decodeBase64(inPos,    inAvailable,    modulus);    	non-compiled	[CE]  ';'  expected	64	None	replace
664	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  moduleus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  moduleus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  moduleus);	  decodeBase64(inPos,    inAvailable,    modulus);    	non-compiled	[CE]  ';'  expected	64	None	replace
665	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  eof);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  eof);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  modulus,  eof);	  decodeBase64(inPos,    inAvailable,    modulus);    	non-compiled	[CE]  ';'  expected	64	None	replace
666	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  0);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  modulus,  0);	  decodeBase64(inPos,    inAvailable,    modulus);    	non-compiled	[CE]  ';'  expected	64	None	replace
667	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  modulus,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  modulus,  1);	  decodeBase64(inPos,    inAvailable,    modulus);    	non-compiled	[CE]  ';'  expected	64	None	replace
668	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  5);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  5);	  DecodeBase64.decode(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	194	None	replace
669	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  10);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  10);	  DecodeBase64.decode(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	194	None	replace
670	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
671	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
672	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
673	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
674	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  if(modulus  ==  Base64.UTF8)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  if(modulus  ==  Base64.UTF8)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  if(modulus  ==  Base64.UTF8)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
675	[BUG]  [BUGGY]  DecodeBase64.decode(modulus,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(modulus,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(modulus,  inPos  +  1,  inAvail);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
676	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  module);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  1,  module);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
677	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  4,  modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  4,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  4,  modulus);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
678	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  moduleus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  moduleus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  1,  moduleus);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
679	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  5,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  5,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  5,  modulus);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
680	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  modulus,  x);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  modulus,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  1,  modulus,  x);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
681	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  4);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  1,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  1,  4);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
682	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  3,  modulus);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  +  3,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  +  3,  modulus);	  DecodeBase64.decode(inPos,    inAvail    +    1,    modulus);    	non-compiled	[CE]  ';'  expected	347	None	replace
683	[BUG]  [BUGGY]  ||  inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
684	[BUG]  [BUGGY]  ||(inPos  <  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  <  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  <  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
685	[BUG]  [BUGGY]  ||  inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
686	[BUG]  [BUGGY]  ||(inPos  <  inAvail  &&  inAvail[inPos]  >=  PAD))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  <  inAvail  &&  inAvail[inPos]  >=  PAD))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  <  inAvail  &&  inAvail[inPos]  >=  PAD))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
687	[BUG]  [BUGGY]  ||(inPos  <  inAvail  &&  inAvail[inPos]  ==  PAD))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  <  inAvail  &&  inAvail[inPos]  ==  PAD))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  <  inAvail  &&  inAvail[inPos]  ==  PAD))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
688	[BUG]  [BUGGY]  ||  inPos  <  inAvail)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
689	[BUG]  [BUGGY]  inPos  +=  INVALID_POP;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  INVALID_POP;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  INVALID_POP;	  if(inPos    >=    inAvail)    {    inPos    +=    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
690	[BUG]  [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  INVALID_POP)  {  inPos  +=  4;  }	  if(inPos    >=    inAvail)    {    inPos    +=    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
691	[BUG]  [BUGGY]  inPos  +=  InVALID_POP;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  InVALID_POP;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  InVALID_POP;	  if(inPos    >=    inAvail)    {    inPos    +=    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
692	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  2);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  2);	  DecodeBase64.decodeBase64(inPos,    inPos,    4);    	non-compiled	[CE]  ';'  expected	387	None	replace
693	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  6);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  6);	  DecodeBase64.decodeBase64(inPos,    inPos,    4);    	non-compiled	[CE]  ';'  expected	387	None	replace
694	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  8);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  8);	  DecodeBase64.decodeBase64(inPos,    inPos,    4);    	non-compiled	[CE]  ';'  expected	387	None	replace
695	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  32);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  32);	  DecodeBase64.decodeBase64(inPos,    inPos,    4);    	non-compiled	[CE]  ';'  expected	387	None	replace
696	[BUG]  [BUGGY]  ';'  expected  =  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  Integer.MAX_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  Integer.MAX_VALUE;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
697	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  modulus);	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
698	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  modulus,  x);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  modulus,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  modulus,  x);	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
699	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  moduleus);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  moduleus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  moduleus);	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
700	[BUG]  [BUGGY]  byte  b  =  this.inAvail  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvail  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvail  +  1;	  byte    b    =    inAvail    +    1;    	non-compiled	[CE]  ';'  expected	90	None	replace
701	[BUG]  [BUGGY]  byte  b  =  decode(inAvail  +  1);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  decode(inAvail  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  decode(inAvail  +  1);	  byte    b    =    inAvail    +    1;    	non-compiled	[CE]  ';'  expected	90	None	replace
702	[BUG]  [BUGGY]  char  b  =  decodeBase64(modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decodeBase64(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decodeBase64(modulus);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
703	[BUG]  [BUGGY]  byte  b  =  decodeBase64(modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  decodeBase64(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  decodeBase64(modulus);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
704	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  1);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
705	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  outPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  outPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  outPos);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
706	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  0);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  0);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  0);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
707	[BUG]  [BUGGY]  int  b  =  module.decodeBase64();  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  module.decodeBase64();  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  module.decodeBase64();	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
708	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  base64.length);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  base64.length);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  base64.length);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
709	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  base64);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  base64);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  base64);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
710	[BUG]  [BUGGY]  inPos  =  inAvail  +  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  1;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
711	[BUG]  [BUGGY]  inPos  =  inPos  +  6;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  6;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
712	[BUG]  [BUGGY]  inPos  =  inAvail  +  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  4;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
713	[BUG]  [BUGGY]  inPos  =  inAvail  +  3;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  3;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
714	[BUG]  [BUGGY]  inPos  =  inPos  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  1;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
715	[BUG]  [BUGGY]  inPos  =  inAvail  +  2;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  2;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
716	[BUG]  [BUGGY]  inPos  =  inAvail  +  5;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  5;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
717	[BUG]  [BUGGY]  inPos  =  inAvail  +  8;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  8;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
718	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  2;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  2;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
719	[BUG]  [BUGGY]  char  b  =  in[inPos++]  &  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  &  1;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
720	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  3;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  3;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
721	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  4;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  4;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
722	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  &  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  &  1;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
723	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
724	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  0);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  0);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
725	[BUG]  [BUGGY]  decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
726	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
727	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
728	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
729	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  PAD);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
730	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  1);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
731	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  4);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
732	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  PAD);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  PAD);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
733	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  3);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
734	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  4);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
735	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  module);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
736	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  0,  inAvail);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
737	[BUG]  [BUGGY]  if(modulus  ==  PAD)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  PAD)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  PAD)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
738	[BUG]  [BUGGY]  if(modulus  ==  null)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  null)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  null)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
739	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  moduleus);  break;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  moduleus);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  moduleus);  break;	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
740	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  4);  break;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  4);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  4);  break;	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
741	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  0);  break;  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  0);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  0);  break;	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
742	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  3);  break;  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  3);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  3);  break;	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
743	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  2;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  +  2;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
744	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  &  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  &  1;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
745	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  /  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  /  1;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
746	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  3;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  +  3;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
747	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++]  +  1;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
748	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  -  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  -  1;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
749	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  +  1;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
750	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  -  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  -  1;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
751	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  -  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  -  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  -  4;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
752	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  +  4;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  +  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  +  4;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
753	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  /  2;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  /  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  /  2;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
754	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  +  3;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  +  3;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
755	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  /  4;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  /  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  /  4;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
756	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  1);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  1);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
757	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  2);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  2);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
758	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  0,  modulus);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  0,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  0,  modulus);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
759	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  10);  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  10);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
760	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  32);  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  32);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
761	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  6);  [CE]  ';'  expected  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  6);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
762	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  7);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  7);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  7);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	145	None	replace
763	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  8);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  8);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	145	None	replace
764	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  2  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  2  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  2  :  inPos;	  inPos    =(inPos    <    <    1)?    1    :    inPos;    	non-compiled	[CE]  ';'  expected	107	None	replace
765	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  1  :  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  1  :  inPos;	  inPos    =(inPos    <    <    1)?    1    :    inPos;    	non-compiled	[CE]  ';'  expected	107	None	replace
766	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  1  :  inPos;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  1)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  1  :  inPos;	  inPos    =(inPos    <    <    1)?    1    :    inPos;    	non-compiled	[CE]  ';'  expected	107	None	replace
767	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  1);	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
768	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  2);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  2);	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
769	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  6);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  6);	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
770	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  32);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  32);	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
771	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  2);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  2);	  byte[]    in    =    decodeBase64(inPos,    PAD);    	non-compiled	[CE]  ';'  expected	153	None	replace
772	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  1);	  byte[]    in    =    decodeBase64(inPos,    PAD);    	non-compiled	[CE]  ';'  expected	153	None	replace
773	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  6);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  6);	  byte[]    in    =    decodeBase64(inPos,    PAD);    	non-compiled	[CE]  ';'  expected	153	None	replace
774	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  8);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  8);	  byte[]    in    =    decodeBase64(inPos,    PAD);    	non-compiled	[CE]  ';'  expected	153	None	replace
775	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  -  3;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  -  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  -  3;	  byte    b    =    data[inPos++]    +    3;    	non-compiled	[CE]  ';'  expected	303	None	replace
776	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  /  3;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  /  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  /  3;	  byte    b    =    data[inPos++]    +    3;    	non-compiled	[CE]  ';'  expected	303	None	replace
777	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  &  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  &  1;	  byte    b    =    data[inPos++]    +    3;    	non-compiled	[CE]  ';'  expected	303	None	replace
778	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  &  3;  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  &  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  &  3;	  byte    b    =    data[inPos++]    +    3;    	non-compiled	[CE]  	303	None	replace
779	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  +  2;  [CE]  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  +  2;	  byte    b    =    data[inPos++]    +    3;    	non-compiled	[CE]  	303	None	replace
780	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  eof);  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  eof);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  eof);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
781	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  module);  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  module);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
782	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modulus);  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  modulus);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
783	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  x);  [CE]  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  x);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
784	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  modules);  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  modules);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
785	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modules);  [CE]  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  modules);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
786	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  null);  [CE]  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  null);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  null);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  	98	None	replace
787	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  3);  [CE]  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  3);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  	215	None	replace
788	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  4);  [CE]  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  4);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  	215	None	replace
789	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  1);  [CE]  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  1);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  	215	None	replace
790	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  2);  [CE]  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  2);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  	215	None	replace
791	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  10);  [CE]  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  10);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  	215	None	replace
792	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  inAvail,  module);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
793	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  8);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  8);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
794	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  6);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  6);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
795	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  -  4;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  -  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  -  4;	  byte    b    =    in[inPos++]    -    4;    	non-compiled	[CE]  ';'  expected	31	None	replace
796	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  3;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  -  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  3;	  byte    b    =    in[inPos++]    -    4;    	non-compiled	[CE]  ';'  expected	31	None	replace
797	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  6;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  -  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  6;	  byte    b    =    in[inPos++]    -    4;    	non-compiled	[CE]  ';'  expected	31	None	replace
798	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  2;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  -  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  2;	  byte    b    =    in[inPos++]    -    4;    	non-compiled	[CE]  ';'  expected	31	None	replace
799	[BUG]  [BUGGY]  char  b  =  inAvail[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  inAvail[inPos++];	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
800	[BUG]  [BUGGY]  byte  b  =  inAvail[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail[inPos++];	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
801	[BUG]  [BUGGY]  int  b  =  inAvail[inPos++]  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail[inPos++]  +  1;	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
802	[BUG]  [BUGGY]  byte[]  inAvail[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  inAvail[inPos++];	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
803	[BUG]  [BUGGY]  int  b  =  this.inAvail[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.inAvail[inPos++];	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
804	[BUG]  [BUGGY]  b  =  inAvail[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  b  =  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  inAvail[inPos++];	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
805	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
806	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
807	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  32);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos,  32);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
808	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos++,  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos++,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos++,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
809	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
810	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  DECODE_TABLE);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  DECODE_TABLE);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  DECODE_TABLE);	  decodeBase64(inPos,    inAvailable,    PAD);    	non-compiled	[CE]  ';'  expected	70	None	replace
811	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  0,  PAD);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  0,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  0,  PAD);	  decodeBase64(inPos,    inAvailable,    PAD);    	non-compiled	[CE]  ';'  expected	70	None	replace
812	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  8);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  8);	  decodeBase64(inPos,    inAvailable,    PAD);    	non-compiled	[CE]  ';'  expected	70	None	replace
813	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    return;    }    	non-compiled	[CE]  ';'  expected	372	None	replace
814	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  return;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  return;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    return;    }    	non-compiled	[CE]  ';'  expected	372	None	replace
815	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  return;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  return;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  return;	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    return;    }    	non-compiled	[CE]  ';'  expected	372	None	replace
816	[BUG]  [BUGGY]  ((  Base64)inPos).decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)inPos).decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)inPos).decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    return;    }    	non-compiled	[CE]  ';'  expected	372	None	replace
817	[BUG]  [BUGGY]  byte  b  =  in[5];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[5];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[5];	  byte    b    =    in[6];    	non-compiled	[CE]  ';'  expected	361	None	replace
818	[BUG]  [BUGGY]  byte  b  =  in[2];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[2];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[2];	  byte    b    =    in[6];    	non-compiled	[CE]  ';'  expected	361	None	replace
819	[BUG]  [BUGGY]  byte  b  =  in[3];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[3];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[3];	  byte    b    =    in[6];    	non-compiled	[CE]  ';'  expected	361	None	replace
820	[BUG]  [BUGGY]  byte  b  =  in[7];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[7];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[7];	  byte    b    =    in[6];    	non-compiled	[CE]  ';'  expected	361	None	replace
821	[BUG]  [BUGGY]  inPos  =  3;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  3;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
822	[BUG]  [BUGGY]  inPos  =  6;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  6;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
823	[BUG]  [BUGGY]  inPos  =  2;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  2;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
824	[BUG]  [BUGGY]  inPos  =  5;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  5;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
825	[BUG]  [BUGGY]  inPos  =  12;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  12;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  12;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
826	[BUG]  [BUGGY]  inPos  =  10;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  10;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  10;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
827	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  modulus);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
828	[BUG]  [BUGGY]  System.arraycopy(modulus,  0,  inPos,  3,  modulus);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(modulus,  0,  inPos,  3,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(modulus,  0,  inPos,  3,  modulus);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
829	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  modulus);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
830	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  modulus);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
831	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  5,  modulus);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
832	[BUG]  [BUGGY]  System.arraycopy(modulus,  0,  inPos,  3,  module);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(modulus,  0,  inPos,  3,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(modulus,  0,  inPos,  3,  module);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
833	[BUG]  [BUGGY]  byte  b  =  inAvail  +  DECODE_TABLE[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  DECODE_TABLE[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  DECODE_TABLE[inPos++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
834	[BUG]  [BUGGY]  int  b  =  inAvail  +  out[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  out[inPos++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
835	[BUG]  [BUGGY]  int  b  =  inPos  +  out[inPos++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  out[inPos++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
836	[BUG]  [BUGGY]  byte  b  =  inAvail  +  DECODE_TABLE.length[inPos++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  DECODE_TABLE.length[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  DECODE_TABLE.length[inPos++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
837	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
838	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
839	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
840	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
841	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
842	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
843	[BUG]  [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  module.decodeBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
844	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(module,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(module,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(module,  inPos,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
845	[BUG]  [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  module.decodeBase64(inPos,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
846	[BUG]  [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
847	[BUG]  [BUGGY]  byte[]  in  =  modulus.decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  modulus.decodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  modulus.decodeBase64(inPos,  inAvail,  module);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
848	[BUG]  [BUGGY]  inPos  =  in.length  /  3;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  /  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  /  3;	  inPos    =    in.length    -    3;    	non-compiled	[CE]  ';'  expected	39	None	replace
849	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
850	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
851	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
852	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
853	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
854	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
855	[BUG]  [BUGGY]  inAvail  +=  inPos  +  2;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  2;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
856	[BUG]  [BUGGY]  inAvail  +=  inPos  +  3;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  3;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
857	[BUG]  [BUGGY]  inAvail  +=  inPos  +  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  4;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
858	[BUG]  [BUGGY]  inAvail  +=  inPos  +  6;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  6;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
859	[BUG]  [BUGGY]  inAvail  +=  inPos  +  5;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  5;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
860	[BUG]  [BUGGY]  inAvail  +=  inPos  +  8;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  8;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
861	[BUG]  [BUGGY]  inAvail  +=  inPos  +  7;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  +  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  +  7;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
862	[BUG]  [BUGGY]  inAvail  +=  inPos  *  1;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  *  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  *  1;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
863	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  2;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  2;	  byte    b    =    in[inPos++]    +    2;    	non-compiled	[CE]  ';'  expected	35	None	replace
864	[BUG]  [BUGGY]  char  b  =  in[inPos++]  &  ';';  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  &  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  &  ';';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
865	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  &  ';';  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  &  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  &  ';';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
866	[BUG]  [BUGGY]  byte[]  in  =  in[inPos++]  &  ';';  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  in[inPos++]  &  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  in[inPos++]  &  ';';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
867	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  ';'  +  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  ';'  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  ';'  +  1;	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
868	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  ';';  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  ';';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
869	[BUG]  [BUGGY]  byte[]  inPos  =  in[inPos++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  inPos  =  in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  inPos  =  in[inPos++];	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
870	[BUG]  [BUGGY]  int  b  =  in[inPos++]  -  ';';  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  -  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  -  ';';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
871	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  ',';  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  ',';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  ',';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
872	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
873	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
874	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
875	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  7;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  7;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  7;  }	  if(inPos    >=    inAvail)    {    inPos    =    6;    }    	non-compiled	[CE]  ';'  expected	399	None	replace
876	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  8;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  8;  }	  if(inPos    >=    inAvail)    {    inPos    =    6;    }    	non-compiled	[CE]  ';'  expected	399	None	replace
877	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  4,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  4,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  4,  inAvail);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
878	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2,  inAvail  +  1);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  2,  inAvail  +  1);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
879	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  0,  inAvail);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
880	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  3);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  3);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
881	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  2);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
882	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos++,  4);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  inPos++,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  inPos++,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
883	[BUG]  [BUGGY]  eof  =  false;  break;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  eof  =  false;  break;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  false;  break;	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
884	[BUG]  [BUGGY]  if(b  ==  PAD)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(b  ==  PAD)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(b  ==  PAD)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
885	[BUG]  [BUGGY]  if(!Modifier.isStatic(modulus))  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!Modifier.isStatic(modulus))  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!Modifier.isStatic(modulus))  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
886	[BUG]  [BUGGY]  if(!modulus)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!modulus)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!modulus)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
887	[BUG]  [BUGGY]  if(!Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(!Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
888	[BUG]  [BUGGY]  if(!modulus.isEmpty())  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(!modulus.isEmpty())  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!modulus.isEmpty())  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
889	[BUG]  [BUGGY]  if(!Character.isJavaIdentifierPart(this))  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(!Character.isJavaIdentifierPart(this))  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!Character.isJavaIdentifierPart(this))  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
890	[BUG]  [BUGGY]  if(Modifier.isStatic(modulus))  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(Modifier.isStatic(modulus))  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(Modifier.isStatic(modulus))  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
891	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
892	[BUG]  [BUGGY]  NeighborDecodeBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecodeBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecodeBase64.decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
893	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
894	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  1,  modulus);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	142	None	replace
895	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  1);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos  +  1);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	142	None	replace
896	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  1);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	142	None	replace
897	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  -1  :  inAvail;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  -1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  -1  :  inAvail;	  inPos    =(inPos    <    <    1)?    -1    :    inPos;    	non-compiled	[CE]  ';'  expected	113	None	replace
898	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  -1  :  inPos  +  1;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  -1  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  -1  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    -1    :    inPos;    	non-compiled	[CE]  ';'  expected	113	None	replace
899	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  -1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  -1  :  inPos;	  inPos    =(inPos    <    <    1)?    -1    :    inPos;    	non-compiled	[CE]  ';'  expected	113	None	replace
900	[BUG]  [BUGGY]  int  b  =  this.out[inPos++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.out[inPos++];	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
901	[BUG]  [BUGGY]  byte  b  =  this.out[inPos++]  +  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.out[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.out[inPos++]  +  1;	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
902	[BUG]  [BUGGY]  byte  b  =  inPos[inPos++];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[inPos++];	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
903	[BUG]  [BUGGY]  char  b  =  this.out[inPos++];  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  this.out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.out[inPos++];	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
904	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  6  +  3;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  6  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  6  +  3;	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
905	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  8  +  3;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  8  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  8  +  3;	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
906	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  7  +  3;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  7  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  7  +  3;	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
907	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  2  +  3;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  2  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  2  +  3;	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
908	[BUG]  [BUGGY]  byte  b  =  inAvail  +  DECODE_TABLE[inPos++]  +  DECODE_TABLE;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  DECODE_TABLE[inPos++]  +  DECODE_TABLE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  DECODE_TABLE[inPos++]  +  DECODE_TABLE;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
909	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  /  inAvail;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  /  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  /  inAvail;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
910	[BUG]  [BUGGY]  byte  b  =  inAvail  +  [inPos++]  +  DECODE_TABLE;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  [inPos++]  +  DECODE_TABLE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  [inPos++]  +  DECODE_TABLE;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
911	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  -  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  -  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  -  inAvail;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
912	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  +  DECODE_TABLE;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  +  DECODE_TABLE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  +  DECODE_TABLE;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
913	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  +  DECODE_TABLE.length;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  +  DECODE_TABLE.length;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  +  DECODE_TABLE.length;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
914	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[4];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[4];	  byte    b    =    in[4];    	non-compiled	[CE]  ';'  expected	280	None	replace
915	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  -  1;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  -  1;	  byte    b    =    data[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	197	None	replace
916	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  /  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  /  1;	  byte    b    =    data[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	197	None	replace
917	[BUG]  [BUGGY]  int  b  =  data[inPos++]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  +  1;	  byte    b    =    data[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	197	None	replace
918	[BUG]  [BUGGY]  byte  b  =  3;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  3;	  byte    b    =    3[inPos++];    	non-compiled	[CE]  ';'  expected	239	None	replace
919	[BUG]  [BUGGY]  byte  b  =  32[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  32[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  32[inPos++];	  byte    b    =    3[inPos++];    	non-compiled	[CE]  ';'  expected	239	None	replace
920	[BUG]  [BUGGY]  byte  b  =  4[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  4[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  4[inPos++];	  byte    b    =    3[inPos++];    	non-compiled	[CE]  ';'  expected	239	None	replace
921	[BUG]  [BUGGY]  int  b  =  3[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  3[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  3[inPos++];	  byte    b    =    3[inPos++];    	non-compiled	[CE]  ';'  expected	239	None	replace
922	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos  +  1);	  byte[]    in    =    base64.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	158	None	replace
923	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inAvail);	  byte[]    in    =    base64.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	158	None	replace
924	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos++);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos++);	  byte[]    in    =    base64.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	158	None	replace
925	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  4096);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  4096);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  4096);	  byte[]    in    =    base64.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	158	None	replace
926	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  *  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	287	None	replace
927	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  2  -  1);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  2  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  *  2  -  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	287	None	replace
928	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  4  -  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  *  4  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  *  4  -  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	287	None	replace
929	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  -  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  inAvail  -  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	287	None	replace
930	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  -  1);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  inAvail  -  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	287	None	replace
931	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  inAvail);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
932	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  PAD);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  PAD);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
933	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  3);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
934	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  module);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  module);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
935	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  modulus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  modulus);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
936	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  4);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  4);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
937	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  inAvail  +  1);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
938	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  6  -  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  6  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  6  -  inPos);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    6);    	non-compiled	[CE]  ';'  expected	147	None	replace
939	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inAvail);	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
940	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos++);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos++);	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
941	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  6);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos  +  6);	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
942	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  3);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos  +  3);	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
943	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  4,  inPos);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
944	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  0);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  0);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
945	[BUG]  [BUGGY]  System.arraycopy(inPos,  inPos,  10,  inPos);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  inPos,  10,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  inPos,  10,  inPos);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
946	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  3;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  3;	  byte    b    =    in[inPos++]    %    1;    	non-compiled	[CE]  ';'  expected	309	None	replace
947	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  6;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  6;	  byte    b    =    in[inPos++]    %    1;    	non-compiled	[CE]  ';'  expected	309	None	replace
948	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  %  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  %  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  %  1;	  byte    b    =    in[inPos++]    %    1;    	non-compiled	[CE]  ';'  expected	309	None	replace
949	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  inPos  =  inPos  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
950	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE  +  1;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
951	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  inPos  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
952	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  2;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos  +  2;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
953	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  3;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos  +  3;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
954	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  6;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos  +  6;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
955	[BUG]  [BUGGY]  Integer  inPos  =  inPos  +  1;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  inPos  +  1;	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
956	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  +  1);	  System.arraycopy(inAvail,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	275	None	replace
957	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  1,  inAvail);	  System.arraycopy(inAvail,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	275	None	replace
958	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inAvail++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inAvail++];	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
959	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inAvail  +  1];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inAvail  +  1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inAvail  +  1];	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
960	[BUG]  [BUGGY]  int  b  =  INVALID_TABLE[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  INVALID_TABLE[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  INVALID_TABLE[inPos++];	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
961	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  +  4;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++]  +  4;	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
962	[BUG]  [BUGGY]  parseBase64(in,  inPos,  0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  0);	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
963	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  0,  inAvail);	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
964	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail,  PAD);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
965	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  1);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
966	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail,  module);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
967	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail,  4);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
968	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
969	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail,  3);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
970	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  4);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
971	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  *  4  -  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  *  4  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  *  4  -  1);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	258	None	replace
972	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  *  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  *  1);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	258	None	replace
973	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  inAvail  -  1);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  5,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  5,  inAvail  -  1);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	258	None	replace
974	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  6,  inAvail  -  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  6,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  6,  inAvail  -  1);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	258	None	replace
975	[BUG]  [BUGGY]  inPos  =  -1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  -1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  -1;	  inPos    =    0;    	non-compiled	[CE]  ';'  expected	131	None	replace
976	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  1);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
977	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  3);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
978	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  4);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
979	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  0,  inAvail);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
980	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  2);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  2);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
981	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  6);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  6);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
982	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
983	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  2);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
984	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvailable);	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
985	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  outPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  outPos);	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
986	[BUG]  [BUGGY]  DecodeBase64.decode(in,  in);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  in);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  in);	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
987	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  outAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  outAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  outAvail);	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
988	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
989	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
990	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
991	[BUG]  [BUGGY]  ||  inPos  >=  inAvail  ||  inPos  >=  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail  ||  inPos  >=  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail  ||  inPos  >=  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
992	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  PAD);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  PAD);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
993	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos  +  1);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
994	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos++);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos++);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
995	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  3);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
996	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  4);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
997	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  1);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  1);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
998	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inAvail);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inAvail);	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
999	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos  +  1];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos  +  1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos  +  1];	  byte    b    =    DECODE_TABLE[inAvail    +    1];    	non-compiled	[CE]  ';'  expected	75	None	replace
1000	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[10];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[10];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[10];	  byte    b    =    DECODE_TABLE[inAvail    +    1];    	non-compiled	[CE]  ';'  expected	75	None	replace
1001	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[3];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[3];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[3];	  byte    b    =    DECODE_TABLE[inAvail    +    1];    	non-compiled	[CE]  ';'  expected	75	None	replace
1002	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[modulus  +  1];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[modulus  +  1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[modulus  +  1];	  byte    b    =    DECODE_TABLE[inAvail    +    1];    	non-compiled	[CE]  ';'  expected	75	None	replace
1003	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1004	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1005	[BUG]  [BUGGY]  DecodeBase64(inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(inPos,  inAvail);  break;	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1006	[BUG]  [BUGGY]  if(inPos  <  0)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1007	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1008	[BUG]  [BUGGY]  byte  b  =  inPos  +  this.in[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  this.in[inPos++];	  byte    b    =    inAvail    +    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	329	None	replace
1009	[BUG]  [BUGGY]  byte  b  =  this.inPos  +  inAvail[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inPos  +  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inPos  +  inAvail[inPos++];	  byte    b    =    inAvail    +    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	329	None	replace
1010	[BUG]  [BUGGY]  byte  b  =  this.in  +  inAvail[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in  +  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in  +  inAvail[inPos++];	  byte    b    =    inAvail    +    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	329	None	replace
1011	[BUG]  [BUGGY]  int  b  =  inAvail  +  this.in[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  this.in[inPos++];	  byte    b    =    inAvail    +    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	329	None	replace
1012	[BUG]  [BUGGY]  byte  b  =  this.inAvail  +  inPos[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvail  +  inPos[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvail  +  inPos[inPos++];	  byte    b    =    inAvail    +    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	329	None	replace
1013	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
1014	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inPos  =  inAvail;  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
1015	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
1016	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1017	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1018	[BUG]  [BUGGY]  Integer  inPos  =  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  Integer.MAX_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  Integer.MAX_VALUE;	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1019	[BUG]  [BUGGY]  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1020	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  else  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  else  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  else  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1021	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  6  :  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  6  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  6  :  inPos;	  inPos    =(inPos    <    <    1)?    3    :    inPos;    	non-compiled	[CE]  ';'  expected	108	None	replace
1022	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  8  :  inPos;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  8  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  8  :  inPos;	  inPos    =(inPos    <    <    1)?    3    :    inPos;    	non-compiled	[CE]  ';'  expected	108	None	replace
1023	[BUG]  [BUGGY]  inPos  =(inPos  <  <  3)?  3  :  inPos;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  3)?  3  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  3)?  3  :  inPos;	  inPos    =(inPos    <    <    1)?    3    :    inPos;    	non-compiled	[CE]  ';'  expected	108	None	replace
1024	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inAvaililil++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inAvaililil++];	  byte    b    =    DECODE_TABLE[inAvailil++];    	non-compiled	[CE]  ';'  expected	76	None	replace
1025	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inAvaililil++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inAvaililil++];	  byte    b    =    DECODE_TABLE[inAvailil++];    	non-compiled	[CE]  ';'  expected	76	None	replace
1026	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inAvaililil++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inAvaililil++];	  byte    b    =    DECODE_TABLE[inAvailil++];    	non-compiled	[CE]  ';'  expected	76	None	replace
1027	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1028	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inAvail,  0,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inAvail,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inAvail,  0,  inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1029	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inPos++);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inPos++);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos,  inPos++);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1030	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  8;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  8;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  8;	  byte    b    =    in[inPos++]    &    3;    	non-compiled	[CE]  ';'  expected	333	None	replace
1031	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  5;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  5;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  5;	  byte    b    =    in[inPos++]    &    3;    	non-compiled	[CE]  ';'  expected	333	None	replace
1032	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  4  +  1;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  4  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  4  +  1;	  byte    b    =    in[inPos++]    %    4;    	non-compiled	[CE]  ';'  expected	34	None	replace
1033	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  4  +  3;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  4  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  4  +  3;	  byte    b    =    in[inPos++]    %    4;    	non-compiled	[CE]  ';'  expected	34	None	replace
1034	[BUG]  [BUGGY]  inPos  =  in.length  /  6;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  /  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  /  6;	  inPos    =    in.length    -    6;    	non-compiled	[CE]  ';'  expected	38	None	replace
1035	[BUG]  [BUGGY]  if(inPos!=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos!=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos!=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1036	[BUG]  [BUGGY]  ||  inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1037	[BUG]  [BUGGY]  ||  inPos  >=  in.length)  {  if(inPos  <  in.length)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  in.length)  {  if(inPos  <  in.length)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  in.length)  {  if(inPos  <  in.length)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1038	[BUG]  [BUGGY]  ||  inPos  >=  in.length)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  in.length)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  in.length)  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1039	[BUG]  [BUGGY]  ||  inPos  >=  in.length)  {  if(inPos  <  in.length)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  in.length)  {  if(inPos  <  in.length)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  in.length)  {  if(inPos  <  in.length)  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1040	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1041	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1042	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1043	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(in,  0,  inPos,  inAvail,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1044	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  *  1);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  *  1);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	276	None	replace
1045	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  *  2  -  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  *  2  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  *  2  -  1);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	276	None	replace
1046	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  3;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  3;	  inPos    =(inPos    +    1)%    3;    	non-compiled	[CE]  ';'  expected	125	None	replace
1047	[BUG]  [BUGGY]  Integer  inPos  =  Integer.parseInt(inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  Integer.parseInt(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  Integer.parseInt(inPos);	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1048	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1049	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1050	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1051	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1052	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos  +  1);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1053	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1054	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  4);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  4);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1055	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  3);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  3);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1056	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  6);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  6);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1057	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  1);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1058	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  8);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  8);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1059	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  PAD);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  PAD);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1060	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  2);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  2);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1061	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  5);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  5);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
1062	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  5);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  5);	  decodeBase64(inPos,    inAvailable,    4);    	non-compiled	[CE]  ';'  expected	242	None	replace
1063	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  module,  modulus);	  DecodeBase64.decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	53	None	replace
1064	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  eof);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  eof);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  module,  eof);	  DecodeBase64.decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	53	None	replace
1065	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  decode);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  decode);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  module,  decode);	  DecodeBase64.decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	53	None	replace
1066	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  modules);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  module,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  module,  modules);	  DecodeBase64.decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	53	None	replace
1067	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  PAD);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1068	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  1);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1069	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  4);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1070	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  3);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1071	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1072	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  module);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1073	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail,  4);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1074	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  PAD);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  PAD);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
1075	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  eof);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  eof);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  module,  eof);	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
1076	[BUG]  [BUGGY]  decodeBase64(modulus,  inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(modulus,  inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(modulus,  inPos,  inAvailable);	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
1077	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  module,  modulus);	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
1078	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  x);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  module,  x);	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
1079	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  null);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  null);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  module,  null);	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
1080	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inPos  =  0;  }	  if(inPos    >=    0)    {    inPos    =    0;    }    	non-compiled	[CE]  ';'  expected	255	None	replace
1081	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  0;  }	  if(inPos    >=    0)    {    inPos    =    0;    }    	non-compiled	[CE]  ';'  expected	255	None	replace
1082	[BUG]  [BUGGY]  Integer  inPos  =  in[inPos++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  in[inPos++];  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  in[inPos++];	  if(inPos    >=    0)    {    inPos    =    0;    }    	non-compiled	[CE]  ';'  expected	255	None	replace
1083	[BUG]  [BUGGY]  byte  b  =  inPos  +  data[inPos++];  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  data[inPos++];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
1084	[BUG]  [BUGGY]  byte  b  =  inPos  +  data[inAvail++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  data[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  data[inAvail++];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
1085	[BUG]  [BUGGY]  int  b  =  inAvail  +  data[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail  +  data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail  +  data[inPos++];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
1086	[BUG]  [BUGGY]  int  b  =  inPos  +  data[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  data[inPos++];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
1087	[BUG]  [BUGGY]  byte  b  =  inPos  +  data[0];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  data[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  data[0];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
1088	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  *  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  *  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  *  3);	  DecodeBase64.decode(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	196	None	replace
1089	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1090	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1091	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1092	[BUG]  [BUGGY]  System.arraycopy(modulus,  0,  inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(modulus,  0,  inPos,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(modulus,  0,  inPos,  inAvail  +  1,  modulus);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1093	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  module);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  module);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1094	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  modulus);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1095	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  module);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  module);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1096	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  module  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  module  +  1,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  module  +  1,  modulus);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1097	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
1098	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(inAvail);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1099	[BUG]  [BUGGY]  Integer  inPos  =  Integer.parseInt(inAvail);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  Integer.parseInt(inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  Integer.parseInt(inAvail);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1100	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(outPos);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(outPos);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1101	[BUG]  [BUGGY]  eof  =  Integer.parseInt(inPos);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  eof  =  Integer.parseInt(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  Integer.parseInt(inPos);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1102	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(inAvailable);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(inAvailable);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1103	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(inPos  +  1);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(inPos  +  1);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1104	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  /  4;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  /  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  /  4;	  byte    b    =    DECODE_TABLE[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	240	None	replace
1105	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  &  4;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  &  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  &  4;	  byte    b    =    DECODE_TABLE[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	240	None	replace
1106	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  *  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  *  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  *  4;	  byte    b    =    DECODE_TABLE[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	240	None	replace
1107	[BUG]  [BUGGY]  int  b  =  inPos[inAvail++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos[inAvail++];	  byte    b    =    inPos[inAvail++];    	non-compiled	[CE]  ';'  expected	203	None	replace
1108	[BUG]  [BUGGY]  byte  b  =  inPos[4];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[4];	  byte    b    =    inPos[inAvail++];    	non-compiled	[CE]  ';'  expected	203	None	replace
1109	[BUG]  [BUGGY]  byte  b  =  inPos[5++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[5++];	  byte    b    =    inPos[inAvail++];    	non-compiled	[CE]  ';'  expected	203	None	replace
1110	[BUG]  [BUGGY]  byte  b  =  inPos[3];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[3];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[3];	  byte    b    =    inPos[inAvail++];    	non-compiled	[CE]  ';'  expected	203	None	replace
1111	[BUG]  [BUGGY]  String  b  =  in[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  b  =  in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	String  b  =  in[inPos++];	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
1112	[BUG]  [BUGGY]  char  b  =  decode(inPos++]);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decode(inPos++]);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decode(inPos++]);	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
1113	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
1114	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
1115	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail  +  1);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
1116	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  -  inPos);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail  -  inPos);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
1117	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail  +  4);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
1118	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  3);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail  +  3);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
1119	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail  +  6);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
1120	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inAvail++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inAvail++];	  byte    b    =    DECODE_TABLE[inAvail++];    	non-compiled	[CE]  ';'  expected	202	None	replace
1121	[BUG]  [BUGGY]  inPos  =  in.length  /  2;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  /  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  /  2;	  inPos    =    in.length    -    2;    	non-compiled	[CE]  ';'  expected	41	None	replace
1122	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1123	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvailable  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvailable  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvailable  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1124	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvailementCount  >  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvailementCount  >  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvailementCount  >  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1125	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1126	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvailable  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvailable  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvailable  <  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1127	[BUG]  [BUGGY]  inPos  +=  8;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  8;	  if(inPos    >=    inAvail)    {    inPos    +=    8;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
1128	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  9;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  9;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  9;  }	  if(inPos    >=    inAvail)    {    inPos    +=    8;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
1129	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  2);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  2);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	260	None	replace
1130	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inAvail,  0);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inAvail,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inAvail,  0);	  DecodeBase64.decode(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	175	None	replace
1131	[BUG]  [BUGGY]  decodeBase64(inPos+inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos+inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos+inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
1132	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos+1);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  decodeBase64(inPos+1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  decodeBase64(inPos+1);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
1133	[BUG]  [BUGGY]  validateBase64(inPos+inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  validateBase64(inPos+inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	validateBase64(inPos+inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
1134	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  3);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1135	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  6);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1136	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  1);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1137	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  2);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1138	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  4);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1139	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  1,  modulus);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1140	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  5);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  5);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1141	[BUG]  [BUGGY]  decodeBase64(inPos  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos  +  1,  inAvail  +  1);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
1142	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1143	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1144	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvailable);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1145	[BUG]  [BUGGY]  int  b  =  inAvailable[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvailable[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvailable[inPos++];	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
1146	[BUG]  [BUGGY]  byte  b  =  inAvailable[inPos++]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvailable[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailable[inPos++]  +  1;	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
1147	[BUG]  [BUGGY]  byte  b  =  this.inAvailable[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvailable[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvailable[inPos++];	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
1148	[BUG]  [BUGGY]  byte  b  =  decode(inAvailable[inPos++]);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  decode(inAvailable[inPos++]);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  decode(inAvailable[inPos++]);	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
1149	[BUG]  [BUGGY]  char  b  =  inAvailable[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  inAvailable[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  inAvailable[inPos++];	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
1150	[BUG]  [BUGGY]  int  b  =  this.data[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.data[inPos++];	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
1151	[BUG]  [BUGGY]  byte  b  =  this.data[inPos++]  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inPos++]  +  1;	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
1152	[BUG]  [BUGGY]  char  b  =  this.data[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  this.data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.data[inPos++];	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
1153	[BUG]  [BUGGY]  final  byte  b  =  this.data[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  byte  b  =  this.data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	final  byte  b  =  this.data[inPos++];	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
1154	[BUG]  [BUGGY]  byte  b  =  this.data[inPos++]  +  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inPos++]  +  4;	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
1155	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  0;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  0;	  byte    b    =    in[inPos++]    &    4;    	non-compiled	[CE]  ';'  expected	32	None	replace
1156	[BUG]  [BUGGY]  inPos  =  inPos  +  in.length;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  in.length;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  in.length;	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1157	[BUG]  [BUGGY]  inPos  =  in.length  +  inAvail;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  +  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  +  inAvail;	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1158	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos  =  inPos  +  in.length;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos  =  inPos  +  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos  =  inPos  +  in.length;  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1159	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1160	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1161	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1162	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos  =  inPos  +  in.length;  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos  =  inPos  +  in.length;  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos  =  inPos  +  in.length;  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1163	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  inPos++;  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1164	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  decodeBase64(in[inPos++]);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  decodeBase64(in[inPos++]);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail  +  in.length;  }  else  {  decodeBase64(in[inPos++]);  }	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1165	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  +=  inAvail;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1166	[BUG]  [BUGGY]  if(inPos  <  4)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  4)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  4)  {  inPos  +=  4;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1167	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  +=  4;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1168	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  +=  6;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1169	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  +=  INVALID_POP;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1170	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  8;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  +=  8;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1171	[BUG]  [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  2)?  this.in[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1172	[BUG]  [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1173	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1174	[BUG]  [BUGGY]  byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  >=  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1175	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  DECODE_TABLE[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  DECODE_TABLE[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  DECODE_TABLE[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1176	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE  +  1;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1177	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1  +  1,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  1  +  1,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1178	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3  +  1,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3  +  1,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1179	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4  +  1,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  4  +  1,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1180	[BUG]  [BUGGY]  inPos  +=  3;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  3;	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
1181	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
1182	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  inPos  +=  inAvail;  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
1183	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
1184	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
1185	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
1186	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	395	None	replace
1187	[BUG]  [BUGGY]  ((  Base64)inPos).decodeBase64(inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)inPos).decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)inPos).decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	395	None	replace
1188	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  +  1,  modulus);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	182	None	replace
1189	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  6  +  1;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  6  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  6  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1190	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  3  +  1;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  3  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  3  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1191	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  2  +  1;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  2  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  2  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1192	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  7  +  1;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  7  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  7  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1193	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  8  +  1;  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  8  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  8  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1194	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  5  +  1;  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  5  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  5  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1195	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  16  +  1;  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  16  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  16  +  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
1196	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  /  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  /  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  /  4;	  byte    b    =    data[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	200	None	replace
1197	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  -  4;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  -  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  -  4;	  byte    b    =    data[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	200	None	replace
1198	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  &  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  &  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  &  4;	  byte    b    =    data[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	200	None	replace
1199	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  %  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  %  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  %  4;	  byte    b    =    data[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	200	None	replace
1200	[BUG]  [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1201	[BUG]  [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1202	[BUG]  [BUGGY]  if(inPos  <  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1203	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  3);  break;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  3);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  3);  break;	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1204	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  6);  break;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  6);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  6);  break;	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1205	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail  +  2);  break;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail  +  2);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail  +  2);  break;	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1206	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  1);  break;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  1);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  1);  break;	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1207	[BUG]  [BUGGY]  if(inPos  <  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1208	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable,  modulus);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvailable,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable,  modulus);	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1209	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable,  module);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvailable,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable,  module);	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1210	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1211	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable,  PAD);  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvailable,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable,  PAD);	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1212	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1213	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1214	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1215	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  inAvailable,  PAD);  }  [CE]  ';'  expected  [FE]                                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  inAvailable,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  inAvailable,  PAD);  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
1216	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1217	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1218	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	398	None	replace
1219	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  10;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  10;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  10;  }	  if(inPos    >=    0)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	398	None	replace
1220	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inPos  =  inPos;  }	  if(inPos    >=    0)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	398	None	replace
1221	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  *  2);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  *  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  *  2);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	277	None	replace
1222	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  4);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  +  4);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	277	None	replace
1223	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  -  2);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  -  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  -  2);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	277	None	replace
1224	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
1225	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
1226	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
1227	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  0,  PAD);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail,  0,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail,  0,  PAD);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	205	None	replace
1228	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail  +  4);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	292	None	replace
1229	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  7);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  7);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  7);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	292	None	replace
1230	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  base64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  base64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  base64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
1231	[BUG]  [BUGGY]  String  b  =  DECODE_TABLE[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  b  =  DECODE_TABLE[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	String  b  =  DECODE_TABLE[inPos++];	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
1232	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inPos++]  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inPos++]  +  1;	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
1233	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inAvail  +  1];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inAvail  +  1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inAvail  +  1];	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
1234	[BUG]  [BUGGY]  byte  b  =  DECODE_BASE64[0]  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BASE64[0]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BASE64[0]  +  1;	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
1235	[BUG]  [BUGGY]  byte  b  =  DECODE_BASE64[1];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BASE64[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BASE64[1];	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
1236	[BUG]  [BUGGY]  byte  b  =  DECODE_BASE64[0]  +  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BASE64[0]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BASE64[0]  +  4;	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
1237	[BUG]  [BUGGY]  char  b  =  DECODE_BASE64[0];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_BASE64[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_BASE64[0];	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
1238	[BUG]  [BUGGY]  int  b  =  DECODE_BASE64[0];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_BASE64[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_BASE64[0];	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
1239	[BUG]  [BUGGY]  byte  b  =  DECODE_BASE64[0]  +  3;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BASE64[0]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BASE64[0]  +  3;	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
1240	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  PAD;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  PAD;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  PAD;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
1241	[BUG]  [BUGGY]  byte  b  =(inPos  <  inAvail)?  this.in[inPos++]  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  inAvail)?  this.in[inPos++]  :  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  inAvail)?  this.in[inPos++]  :  inPos;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
1242	[BUG]  [BUGGY]  int  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
1243	[BUG]  [BUGGY]  byte  b  =(inPos  <  4)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  4)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  4)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
1244	[BUG]  [BUGGY]  byte  b  =(inPos  <  3)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  3)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  3)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
1245	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  INVALID;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  INVALID;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  INVALID;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
1246	[BUG]  [BUGGY]  byte  b  =  data[inAvaililil++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvaililil++];	  byte    b    =    data[inAvailil++];    	non-compiled	[CE]  ';'  expected	302	None	replace
1247	[BUG]  [BUGGY]  byte  b  =  this.data[inAvaililil++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inAvaililil++];	  byte    b    =    data[inAvailil++];    	non-compiled	[CE]  ';'  expected	302	None	replace
1248	[BUG]  [BUGGY]  int  b  =  data[inAvaililil++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inAvaililil++];	  byte    b    =    data[inAvailil++];    	non-compiled	[CE]  ';'  expected	302	None	replace
1249	[BUG]  [BUGGY]  char  b  =  data[inAvaililil++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  data[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  data[inAvaililil++];	  byte    b    =    data[inAvailil++];    	non-compiled	[CE]  ';'  expected	302	None	replace
1250	[BUG]  [BUGGY]  byte  b  =  data[inAvaililil++]  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inAvaililil++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvaililil++]  +  1;	  byte    b    =    data[inAvailil++];    	non-compiled	[CE]  ';'  expected	302	None	replace
1251	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  *  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  *  1);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1252	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos  -  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos  -  1);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1253	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  2);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  -  2);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1254	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  -  4);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1255	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  6);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  -  6);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1256	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  3);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail  -  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail  -  3);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1257	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  3  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  3  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  3  :  inPos;	  inPos    =(inPos    <    <    6)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	294	None	replace
1258	[BUG]  [BUGGY]  int  b  =  inPos  +  inAvail++;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  inAvail++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  inAvail++;	  byte    b    =    inPos    +    inAvail++;    	non-compiled	[CE]  ';'  expected	88	None	replace
1259	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	354	None	replace
1260	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	354	None	replace
1261	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  x,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  x,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  x,  modulus);	  DecodeBase64.decode(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	190	None	replace
1262	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  16);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  16);	  decodeBase64(inPos,    inAvail,    8);    	non-compiled	[CE]  ';'  expected	323	None	replace
1263	[BUG]  [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  2)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
1264	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  INVALID;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  INVALID;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  INVALID;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
1265	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  PAD;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  PAD;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  PAD;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
1266	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  PAD;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  PAD;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  inPos[inPos++]  :  PAD;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
1267	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(modulus,  inPos,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(modulus,  inPos,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(modulus,  inPos,  inAvail,  inPos);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1268	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  inAvail,  module);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1269	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(modulus,  x,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(modulus,  x,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(modulus,  x,  inAvail,  inPos);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1270	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module,  modulus);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module,  modulus);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1271	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  module);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  module);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1272	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module,  module);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  module,  module);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1273	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  x,  module);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  x,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  x,  module);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1274	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inAvail,  inPos);	  DecodeBase64.decodeBase64(inPos,    inAvail,    x);    	non-compiled	[CE]  ';'  expected	47	None	replace
1275	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  x,  modulus);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  x,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  x,  modulus);	  DecodeBase64.decodeBase64(inPos,    inAvail,    x);    	non-compiled	[CE]  ';'  expected	47	None	replace
1276	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail,  PAD);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1277	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  1);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1278	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1279	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail,  module);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1280	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail,  4);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1281	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail,  3);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1282	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1283	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1284	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos++);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos++);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos++);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1285	[BUG]  [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
1286	[BUG]  [BUGGY]  DecodeBase64.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.arraycopy(inPos,  0,  inPos,  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
1287	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  2)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  if(inPos  >=  2)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  if(inPos  >=  2)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
1288	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  2;  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  2;	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
1289	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  4  +  1;  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  4  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  4  +  1;	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
1290	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  6;  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  6;	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
1291	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  4  +  3;  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  4  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  4  +  3;	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
1292	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  1;  [CE]  ';'  expected  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  1;	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
1293	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  inAvail;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  4  :  inAvail;	  inPos    =(inPos    <    <    1)?    4    :    inPos;    	non-compiled	[CE]  ';'  expected	112	None	replace
1294	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  4  :  inPos;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  4  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  4  :  inPos;	  inPos    =(inPos    <    <    1)?    4    :    inPos;    	non-compiled	[CE]  ';'  expected	112	None	replace
1295	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
1296	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
1297	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
1298	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
1299	[BUG]  [BUGGY]  inPos  =  in.length  /  5;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  /  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  /  5;	  inPos    =    in.length    -    5;    	non-compiled	[CE]  ';'  expected	42	None	replace
1300	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module,  modulus);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
1301	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  eof);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  eof);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module,  eof);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
1302	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  modules);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module,  modules);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
1303	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  module);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module,  module);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
1304	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  x);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module,  x);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
1305	[BUG]  [BUGGY]  byte  b  =  in[0]  -  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  -  1;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
1306	[BUG]  [BUGGY]  byte  b  =  in[0]  /  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  /  1;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
1307	[BUG]  [BUGGY]  byte  b  =  in[0]  &  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  &  1;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
1308	[BUG]  [BUGGY]  byte  b  =  in[0]  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  +  2;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
1309	[BUG]  [BUGGY]  byte  b  =  in[0]  +  4;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  +  4;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
1310	[BUG]  [BUGGY]  byte  b  =  in[1]  +  1;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[1]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[1]  +  1;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
1311	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  PAD);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  PAD);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
1312	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos  +  1);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
1313	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos++);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos++);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
1314	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  3);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
1315	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  4096);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  4096);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  4096);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
1316	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  1);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  1);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
1317	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  1  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
1318	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  1  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
1319	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  1  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
1320	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  1  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
1321	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  2  :  inAvail;  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  2  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  2  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
1322	[BUG]  [BUGGY]  String  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  b  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	String  b  =  this.in[inPos++];	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	170	None	replace
1323	[BUG]  [BUGGY]  char  b  =  this.in[inPos++]  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  this.in[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.in[inPos++]  +  1;	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	170	None	replace
1324	[BUG]  [BUGGY]  Char  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Char  b  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Char  b  =  this.in[inPos++];	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	170	None	replace
1325	[BUG]  [BUGGY]  final  char  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  char  b  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	final  char  b  =  this.in[inPos++];	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	170	None	replace
1326	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
1327	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
1328	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  2);  break;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  2);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  2);  break;	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
1329	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  10);  break;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  10);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  10);  break;	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
1330	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  PAD,  eof);  break;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  PAD,  eof);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  PAD,  eof);  break;	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
1331	[BUG]  [BUGGY]  validateBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  validateBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	validateBase64(inPos,  inAvail  +  1);	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
1332	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  0,  inAvail);	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
1333	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4,  inAvail);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  4,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  4,  inAvail);	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
1334	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos++;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos++;  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1335	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1336	[BUG]  [BUGGY]  (inPos  >=  0)?  inPos  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  (inPos  >=  0)?  inPos  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  >=  0)?  inPos  :  inPos;	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1337	[BUG]  [BUGGY]  DecodeBase64(inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(inPos);	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1338	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  -  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  -  1;	  byte    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	150	None	replace
1339	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  PAD;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  PAD;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  PAD;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	358	None	replace
1340	[BUG]  [BUGGY]  int  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  (inPos++)?  DECODE_TABLE[inPos++]  :  inAvail;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	358	None	replace
1341	[BUG]  [BUGGY]  byte  b  =  (inPos++)?  DECODE_TABLE[0]  :  inAvail;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  (inPos++)?  DECODE_TABLE[0]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  (inPos++)?  DECODE_TABLE[0]  :  inAvail;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	358	None	replace
1342	[BUG]  [BUGGY]  ||  inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
1343	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
1344	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1345	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1346	[BUG]  [BUGGY]  NeighborDecodeBase64.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecodeBase64.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecodeBase64.decodeBase64(inPos,  inAvail  +  1);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1347	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1348	[BUG]  [BUGGY]  int  b  =  in[inPos++]  /  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  /  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  /  4;	  int    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	87	None	replace
1349	[BUG]  [BUGGY]  int  b  =  in[inPos++]  %  4;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  %  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  %  4;	  int    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	87	None	replace
1350	[BUG]  [BUGGY]  char  b  =  in[inPos++]  +  4;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  +  4;	  int    b    =    in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	87	None	replace
1351	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  1,  inAvail  +  1);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	206	None	replace
1352	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  +  1,  modulus);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	206	None	replace
1353	[BUG]  [BUGGY]  if(inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1354	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1355	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1356	[BUG]  [BUGGY]  Integer  inPos  =  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  Integer.MIN_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  Integer.MIN_VALUE;	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1357	[BUG]  [BUGGY]  ';'  expected  =  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  Integer.MIN_VALUE;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  Integer.MIN_VALUE;	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1358	[BUG]  [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1359	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  inAvail,  modulus);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	51	None	replace
1360	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  moduleus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  moduleus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  moduleus);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	51	None	replace
1361	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  moduleus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  moduleus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  moduleus);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	51	None	replace
1362	[BUG]  [BUGGY]  char  b  =  inAvail  +  inPos++;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  inAvail  +  inPos++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  inAvail  +  inPos++;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
1363	[BUG]  [BUGGY]  b  =  inPos  +  inAvail++;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  inPos  +  inAvail++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  inPos  +  inAvail++;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
1364	[BUG]  [BUGGY]  int  b  =  inPos  +  3;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  3;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
1365	[BUG]  [BUGGY]  int  b  =  inPos  +  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  4;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
1366	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  12;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  12;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  12;  }	  if(inPos    >=    inAvail)    {    inPos    =    10;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
1367	[BUG]  [BUGGY]  int  b  =  in[1];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[1];	  byte    b    =    in[1];    	non-compiled	[CE]  ';'  expected	17	None	replace
1368	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1369	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1370	[BUG]  [BUGGY]  _decodeBase64(inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos  +  1,  inAvail);	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1371	[BUG]  [BUGGY]  _decodeBase64(inPos,  PAD);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  PAD);	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1372	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1373	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1374	[BUG]  [BUGGY]  _decodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos  +  1);	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1375	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  16);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  16);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    5);    	non-compiled	[CE]  ';'  expected	262	None	replace
1376	[BUG]  [BUGGY]  byte  b  =  inPos  +  DECODE_TABLE[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  DECODE_TABLE[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  DECODE_TABLE[inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1377	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[inAvail++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[inAvail++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1378	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[0];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[0];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1379	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[4];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[4];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1380	[BUG]  [BUGGY]  byte  b  =  inPos  +  DECODE_TABLE.length[inPos++];  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  DECODE_TABLE.length[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  DECODE_TABLE.length[inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1381	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[5++];  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[5++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1382	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[10];  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[10];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[10];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1383	[BUG]  [BUGGY]  byte  b  =  this.inAvail  +  3;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvail  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvail  +  3;	  byte    b    =    inAvail    +    3;    	non-compiled	[CE]  ';'  expected	93	None	replace
1384	[BUG]  [BUGGY]  int  b  =  this.in[inAvail++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inAvail++];	  int    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	85	None	replace
1385	[BUG]  [BUGGY]  b  =  in[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  b  =  in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  in[inPos++];	  int    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	85	None	replace
1386	[BUG]  [BUGGY]  byte[inAvail++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[inAvail++];	  int    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	85	None	replace
1387	[BUG]  [BUGGY]  char  b  =  this.in[inAvail++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  this.in[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.in[inAvail++];	  byte    b    =    this.in[inAvail++];    	non-compiled	[CE]  ';'  expected	171	None	replace
1388	[BUG]  [BUGGY]  byte  b  =  in[0++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1389	[BUG]  [BUGGY]  byte  b  =  in[4++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[4++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[4++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1390	[BUG]  [BUGGY]  byte  b  =  in[6++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[6++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[6++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1391	[BUG]  [BUGGY]  byte  b  =  in[1++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[1++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[1++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1392	[BUG]  [BUGGY]  byte  b  =  in[3++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[3++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[3++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1393	[BUG]  [BUGGY]  byte  b  =  in[2++];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[2++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[2++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1394	[BUG]  [BUGGY]  byte  b  =  in[7++];  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[7++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[7++];	  byte    b    =    in[5++];    	non-compiled	[CE]  ';'  expected	300	None	replace
1395	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  3);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
1396	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  2);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  2);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
1397	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  4);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  4);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
1398	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  6);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  6);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
1399	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  1,  modulus);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
1400	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus  +  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus  +  1);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
1401	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  4;  }	  if(inPos    ==    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	256	None	replace
1402	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  INVALID_POP;  }	  if(inPos    ==    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	256	None	replace
1403	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  3,  inAvail  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  3,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  3,  inAvail  +  1);	  System.arraycopy(inAvail,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	299	None	replace
1404	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  5,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  5,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  5,  inAvail);	  System.arraycopy(inAvail,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	299	None	replace
1405	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  4);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  4);	  System.arraycopy(inAvail,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	299	None	replace
1406	[BUG]  [BUGGY]  String  b  =  in[inAvail++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  b  =  in[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	String  b  =  in[inAvail++];	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
1407	[BUG]  [BUGGY]  char  b  =  inPos[inAvail++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  inPos[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  inPos[inAvail++];	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
1408	[BUG]  [BUGGY]  char  b  =  decode(inAvail++]);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decode(inAvail++]);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decode(inAvail++]);	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
1409	[BUG]  [BUGGY]  char  b  =  decode(inAvail++];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decode(inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decode(inAvail++];	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
1410	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  32);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  32);	  decodeBase64(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	268	None	replace
1411	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
1412	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
1413	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
1414	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  6);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  6);	  System.arraycopy(in,    0,    inPos,    4);    	non-compiled	[CE]  ';'  expected	81	None	replace
1415	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  1);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1416	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  4);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  4);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1417	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  0,  inPos);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  0,  inPos);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1418	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  3);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  3);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1419	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  6);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1420	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  -  inPos);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  -  inPos);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1421	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  2);  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  2);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1422	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  *  1);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  *  1);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
1423	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  2);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  -  2);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
1424	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  4);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  -  4);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
1425	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  6);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  -  6);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
1426	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  -  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  -  3);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
1427	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  -  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos  -  1);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
1428	[BUG]  [BUGGY]  ((  Base64)modulus).decode(x,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(x,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(x,  inAvail);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1429	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvail  +  1);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1430	[BUG]  [BUGGY]  ((  Base64)modulus).decode(x,  inPos);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(x,  inPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(x,  inPos);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1431	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  0,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  0,  inAvail);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1432	[BUG]  [BUGGY]  parseBase64(in,  inPos,  3);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  3);	  decodeBase64(in,    inPos,    3);    	non-compiled	[CE]  ';'  expected	213	None	replace
1433	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1434	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  PAD);	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1435	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1436	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
1437	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
1438	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
1439	[BUG]  [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
1440	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
1441	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  5);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  5);	  byte[]    in    =    decodeBase64(inPos,    3);    	non-compiled	[CE]  ';'  expected	155	None	replace
1442	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  INVALID;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  INVALID;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  INVALID;  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	138	None	replace
1443	[BUG]  [BUGGY]  byte[]  in  =  modulus.decodeBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  modulus.decodeBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  modulus.decodeBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1444	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1445	[BUG]  [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  module.decodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1446	[BUG]  [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1447	[BUG]  [BUGGY]  byte[]  in  =  moduleus.decodeBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleus.decodeBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleus.decodeBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1448	[BUG]  [BUGGY]  byte[]  in  =  modulusBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  modulusBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  modulusBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1449	[BUG]  [BUGGY]  byte[]  in  =  moduleus.decodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleus.decodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleus.decodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1450	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  0xff;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1451	[BUG]  [BUGGY]  char  b  =  in[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[inPos++]  &  0xff;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1452	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  &  0xff;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1453	[BUG]  [BUGGY]  byte[]  in  =  in[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  in[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  in[inPos++]  &  0xff;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1454	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xff  +  1;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0xff  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xff  +  1;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1455	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0x7f;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0x7f;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0x7f;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1456	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1457	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1458	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1459	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  4;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1460	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  1;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1461	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  3;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  3;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1462	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.toHexString(inPos);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  Integer.toHexString(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  Integer.toHexString(inPos);  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1463	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inPos  =  INVALID_POP;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
1464	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  eof);  break;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  eof);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  eof);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1465	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  break;  }	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1466	[BUG]  [BUGGY]  decodeBase64(modulus,  inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(modulus,  inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(modulus,  inPos,  inAvail);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1467	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modulus);  break;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modulus);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  modulus);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1468	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  module);  break;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  module);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  module);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1469	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module.length);  break;  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module.length);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module.length);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1470	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  modules);  break;  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  modules);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  modules);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1471	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modules);  break;  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  modules);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  modules);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1472	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvailable,  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvailable,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvailable,  4);	  DecodeBase64.decodeBase64(inPos,    x,    4);    	non-compiled	[CE]  ';'  expected	286	None	replace
1473	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  2);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  2);	  DecodeBase64.decodeBase64(inPos,    x,    4);    	non-compiled	[CE]  ';'  expected	286	None	replace
1474	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  4,  4);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  4,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  4,  4);	  DecodeBase64.decodeBase64(inPos,    x,    4);    	non-compiled	[CE]  ';'  expected	286	None	replace
1475	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  6);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  6);	  DecodeBase64.decodeBase64(inPos,    x,    4);    	non-compiled	[CE]  ';'  expected	286	None	replace
1476	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  1)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  0  :  inAvail;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1477	[BUG]  [BUGGY]  inPos  =(inPos  >>  1)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >>  1)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >>  1)?  0  :  inAvail;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1478	[BUG]  [BUGGY]  inPos  =(inPos  ==  1)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  ==  1)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  ==  1)?  0  :  inAvail;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1479	[BUG]  [BUGGY]  inPos  =(inPos  >=  0)?  0  :  inPos;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  0)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  0)?  0  :  inPos;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1480	[BUG]  [BUGGY]  inPos  =(inPos  >>  1)?  1  :  inPos;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >>  1)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >>  1)?  1  :  inPos;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1481	[BUG]  [BUGGY]  inPos  =(inPos  <  1)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  1)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  1)?  0  :  inAvail;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1482	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  1)?  -1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  -1  :  inPos;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1483	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  3  :  inPos;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  1)?  3  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  3  :  inPos;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1484	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inAvail;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inAvail;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1485	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  4;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1486	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  10;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  10;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  10;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1487	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  3;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  3;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1488	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  1;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  1;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1489	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inAvail  +=  inPos;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1490	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  8;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  8;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1491	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  PAD;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  PAD;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  PAD;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1492	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvailable,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvailable,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvailable,  3);	  DecodeBase64.decodeBase64(inPos,    x,    3);    	non-compiled	[CE]  ';'  expected	285	None	replace
1493	[BUG]  [BUGGY]  char  b  =  out[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  out[inPos++];	  int    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	44	None	replace
1494	[BUG]  [BUGGY]  int  b  =  out[inAvail++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  out[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  out[inAvail++];	  int    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	44	None	replace
1495	[BUG]  [BUGGY]  int  b  =  out[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  out[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  out[inPos++]  &  0xff;	  int    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	44	None	replace
1496	[BUG]  [BUGGY]  int  b  =  output[inPos++];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  output[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  output[inPos++];	  int    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	44	None	replace
1497	[BUG]  [BUGGY]  parseBase64(in,  inPos,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  4);	  decodeBase64(in,    inPos,    4);    	non-compiled	[CE]  ';'  expected	214	None	replace
1498	[BUG]  [BUGGY]  inPos  +=  10;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  10;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  10;	  if(inPos    >=    inAvail)    {    inPos    +=    10;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
1499	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  1;  }	  if(inPos    >=    0)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	253	None	replace
1500	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  2;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  2;  }	  if(inPos    >=    0)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	253	None	replace
1501	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  5;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  5;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  5;  }	  if(inPos    >=    0)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	253	None	replace
1502	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  3;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  3;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	381	None	replace
1503	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  6;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	381	None	replace
1504	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  2;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  2;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  2;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	381	None	replace
1505	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  8;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  8;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	381	None	replace
1506	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  5;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  5;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  5;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	381	None	replace
1507	[BUG]  [BUGGY]  if(inPos  >=  2)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  inPos  +=  4;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	381	None	replace
1508	[BUG]  [BUGGY]  inPos  =  INVALID_POP;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  INVALID_POP;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  INVALID_POP;	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1509	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  InVALID_POP;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  InVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  InVALID_POP;  }	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1510	[BUG]  [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  =  InVALID_POP;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  =  InVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  INVALID_POP)  {  inPos  =  InVALID_POP;  }	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1511	[BUG]  [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)*  inAvail)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)*  inAvail)  {  inPos  =  INVALID_POP;  }	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1512	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  INVALID_POP;  }	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1513	[BUG]  [BUGGY]  inPos  =  InVALID_POP;  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  InVALID_POP;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  InVALID_POP;	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1514	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inAvail);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1515	[BUG]  [BUGGY]  ((  Base64)modulus).decode(x);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(x);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(x);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1516	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inAvailable);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inAvailable);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inAvailable);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1517	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBytes(inPos);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBytes(inPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBytes(inPos);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1518	[BUG]  [BUGGY]  ((  Base64)modulus).decodeByte(inPos);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeByte(inPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeByte(inPos);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1519	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos  +  1);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos  +  1);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1520	[BUG]  [BUGGY]  ((  Base64)modulus).decodeAll(inPos);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeAll(inPos);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeAll(inPos);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1521	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBytes(inAvail);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBytes(inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBytes(inAvail);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
1522	[BUG]  [BUGGY]  char  b  =  in[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[0];	  int    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
1523	[BUG]  [BUGGY]  int  b  =  in[0]  &  0xFFFF;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[0]  &  0xFFFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[0]  &  0xFFFF;	  int    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
1524	[BUG]  [BUGGY]  int  b  =  in[0]  &  0xff;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[0]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[0]  &  0xff;	  int    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
1525	[BUG]  [BUGGY]  byte[]  inPos  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  inPos  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  inPos  =  this.in[inPos++];	  int    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	84	None	replace
1526	[BUG]  [BUGGY]  byte[]  in  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.in[inPos++];	  int    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	84	None	replace
1527	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
1528	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
1529	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
1530	[BUG]  [BUGGY]  NeighborDecodeBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecodeBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecodeBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
1531	[BUG]  [BUGGY]  parseBase64(in,  inPos,  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  1);	  decodeBase64(in,    inPos,    1);    	non-compiled	[CE]  ';'  expected	217	None	replace
1532	[BUG]  [BUGGY]  ';'  expected  =  Modifier.isStatic(modulus)?  module  :  Base64.DEFAULT;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  Modifier.isStatic(modulus)?  module  :  Base64.DEFAULT;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  Modifier.isStatic(modulus)?  module  :  Base64.DEFAULT;	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    break;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
1533	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  outPos);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
1534	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvailable);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
1535	[BUG]  [BUGGY]  byte[]  in  =  Base64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  Base64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  Base64.decodeBase64(inPos,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
1536	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  outPos);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
1537	[BUG]  [BUGGY]  ||  inPos  <  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
1538	[BUG]  [BUGGY]  ||  inPos  <  inAvail  ||  inPos  >  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail  ||  inPos  >  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail  ||  inPos  >  0)  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
1539	[BUG]  [BUGGY]  ||  inPos  <  inAvail  ||  inPos  >  64)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail  ||  inPos  >  64)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail  ||  inPos  >  64)  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
1540	[BUG]  [BUGGY]  ||  inPos  <  inAvail  ||  inPos  >  16)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail  ||  inPos  >  16)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail  ||  inPos  >  16)  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
1541	[BUG]  [BUGGY]  char  b  =  data[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  data[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  data[inPos++];	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1542	[BUG]  [BUGGY]  int  b  =  data[inAvail++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inAvail++];	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1543	[BUG]  [BUGGY]  int  b  =  data[inPos++]  +  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  +  4;	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1544	[BUG]  [BUGGY]  int  b  =  data[inPos++]  *  4;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  *  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  *  4;	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1545	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1546	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1547	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1548	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1549	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1550	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  in  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  in  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  in	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1551	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail));  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail));  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail));  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1552	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  6,  inAvail  +  6);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  6,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  6,  inAvail  +  6);	  DecodeBase64.decode(inPos,    inAvail    +    6);    	non-compiled	[CE]  ';'  expected	270	None	replace
1553	[BUG]  [BUGGY]  ||  module  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  module  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  module  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1554	[BUG]  [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1555	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1556	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  module  =  base64.decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  module  =  base64.decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  module  =  base64.decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1557	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  System.arraycopy(inPos,  0,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  System.arraycopy(inPos,  0,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  System.arraycopy(inPos,  0,  inAvail,  module);  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1558	[BUG]  [BUGGY]  if(Modifier.isStatic(modulus)||  Modifier.isStatic(modulus))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(Modifier.isStatic(modulus)||  Modifier.isStatic(modulus))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(Modifier.isStatic(modulus)||  Modifier.isStatic(modulus))  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1559	[BUG]  [BUGGY]  if(!Modifier.isStatic(modulus))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!Modifier.isStatic(modulus))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!Modifier.isStatic(modulus))  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1560	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1561	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail);  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1562	[BUG]  [BUGGY]  if(Modifier.isStatic(modulus)||  Modifier.isStatic(modulus))  {  eof  =  true;  }  else  {  decodeBase64(modulus);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(Modifier.isStatic(modulus)||  Modifier.isStatic(modulus))  {  eof  =  true;  }  else  {  decodeBase64(modulus);  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(Modifier.isStatic(modulus)||  Modifier.isStatic(modulus))  {  eof  =  true;  }  else  {  decodeBase64(modulus);  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1563	[BUG]  [BUGGY]  if(!modulus.isEmpty())  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!modulus.isEmpty())  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!modulus.isEmpty())  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1564	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail));  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail));  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(decodeBase64(b,  inPos,  inAvail));  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1565	[BUG]  [BUGGY]  parseBase64(in,  inPos,  2);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  2);	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
1566	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos  +  1);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
1567	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos++);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos++);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
1568	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  32);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  32);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
1569	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(modulus);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(modulus);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
1570	[BUG]  [BUGGY]  char  b  =(char)Math.floor(modulus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(char)Math.floor(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(char)Math.floor(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1571	[BUG]  [BUGGY]  byte  b  =(byte)Math.floor(modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(byte)Math.floor(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(byte)Math.floor(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1572	[BUG]  [BUGGY]  int  b  =(int)Module.floor(modulus);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Module.floor(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Module.floor(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1573	[BUG]  [BUGGY]  int  b  =(int)Math.ceil(modulus);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Math.ceil(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.ceil(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1574	[BUG]  [BUGGY]  int  b  =(int)Math.log(modulus);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Math.log(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.log(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1575	[BUG]  [BUGGY]  int  b  =(int)Math.rint(modulus);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Math.rint(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.rint(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1576	[BUG]  [BUGGY]  int  b  =(int)modulus.length;  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)modulus.length;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)modulus.length;	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1577	[BUG]  [BUGGY]  int  b  =(int)Math.floor(modulus  +  1);  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Math.floor(modulus  +  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.floor(modulus  +  1);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
1578	[BUG]  [BUGGY]  inAvail  +=  6;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  6;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1579	[BUG]  [BUGGY]  inAvail  +=  7;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  7;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1580	[BUG]  [BUGGY]  inAvail  +=  3;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  3;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1581	[BUG]  [BUGGY]  inAvail  +=  8;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  8;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1582	[BUG]  [BUGGY]  inAvail  +=  5;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  5;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1583	[BUG]  [BUGGY]  inAvail  +=  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  2;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1584	[BUG]  [BUGGY]  inAvail  +=  12;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  12;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  12;	  inAvail    +=    4;    	non-compiled	[CE]  ';'  expected	163	None	replace
1585	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  inPos;  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1586	[BUG]  [BUGGY]  if(inPos  ==  inPos)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inPos)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inPos)  {  inPos  =  inPos;  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1587	[BUG]  [BUGGY]  if(inPos  <  inPos)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inPos)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inPos)  {  inPos  =  inPos;  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1588	[BUG]  [BUGGY]  decode  =  Base64.getDefault();  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  decode  =  Base64.getDefault();  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decode  =  Base64.getDefault();	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1589	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  -  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  -  1);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1590	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  5);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0,  inAvail  +  5);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
1591	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  modulus);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	51	None	replace
1592	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  4);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	51	None	replace
1593	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  3);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	51	None	replace
1594	[BUG]  [BUGGY]  byte[]  in  =  modulusDecodeBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  modulusDecodeBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  modulusDecodeBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1595	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inAvail,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inAvail,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inAvail,  inPos);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1596	[BUG]  [BUGGY]  byte[]  in  =  moduleDecodeBase64(inPos,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleDecodeBase64(inPos,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleDecodeBase64(inPos,  inAvail,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
1597	[BUG]  [BUGGY]  byte  b  =  4;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  4;	  byte    b    =    inPos    +    1;    	non-compiled	[CE]  ';'  expected	226	None	replace
1598	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  0);	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
1599	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  0);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  0);	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
1600	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  4);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  inAvail  +  4);	  DecodeBase64.decode(inPos,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	269	None	replace
1601	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1602	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1603	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1604	[BUG]  [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1605	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1606	[BUG]  [BUGGY]  DecodeBase64.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1607	[BUG]  [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
1608	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  outPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos  +  1,  outPos);	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
1609	[BUG]  [BUGGY]  DescodeBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DescodeBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DescodeBase64.decodeBase64(inPos,  inAvail);	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
1610	[BUG]  [BUGGY]  Base64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Base64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Base64.decodeBase64(inPos,  inAvail);	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
1611	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  outPos  +  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  outPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  outPos  +  1);	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
1612	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  -  1);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  1,  inAvail  -  1);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	276	None	replace
1613	[BUG]  [BUGGY]  DecodeBase64(modulus,  inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(modulus,  inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(modulus,  inPos,  inAvail);  break;	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
1614	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  int  b  =  inAvail[inPos++];  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  int  b  =  inAvail[inPos++];  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  int  b  =  inAvail[inPos++];  }	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
1615	[BUG]  [BUGGY]  b  =  inAvail[inPos++]  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  b  =  inAvail[inPos++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  inAvail[inPos++]  +  1;	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
1616	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  4,  inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1617	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1618	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1619	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
1620	[BUG]  [BUGGY]  int  b  =  data[0];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[0];	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1621	[BUG]  [BUGGY]  int  b  =  data[inPos++]  -  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  -  1;	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1622	[BUG]  [BUGGY]  int  b  =  data[inPos++]  &  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  &  1;	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
1623	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  7;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  7;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  7;	  byte    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	33	None	replace
1624	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
1625	[BUG]  [BUGGY]  inPos  =(inPos  +  1)?  -1  :  inAvail;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)?  -1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)?  -1  :  inAvail;	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
1626	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
1627	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
1628	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  modulus);  break;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  modulus);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  modulus);  break;	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
1629	[BUG]  [BUGGY]  byte  b  =  3[inAvaililil++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  3[inAvaililil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  3[inAvaililil++];	  byte    b    =    DECODE_TABLE[inAvailil++];    	non-compiled	[CE]  ';'  expected	76	None	replace
1630	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[64];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[64];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[64];	  byte    b    =    DECODE_TABLE[inAvailil++];    	non-compiled	[CE]  ';'  expected	76	None	replace
1631	[BUG]  [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  1;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  1)?  4  :  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  1)?  4  :  1;	  inPos    =(inPos    <    <    1)?    4    :    inPos;    	non-compiled	[CE]  ';'  expected	112	None	replace
1632	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  2);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  2);	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
1633	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[1];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[1];	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
1634	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inAvailil++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inAvailil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inAvailil++];	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
1635	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inPos++]  +  2;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inPos++]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inPos++]  +  2;	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
1636	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  4);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
1637	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  false);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  false);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  false);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
1638	[BUG]  [BUGGY]  b  =  decodeBase64(0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(0);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(0);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
1639	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  3);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
1640	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
1641	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
1642	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
1643	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
1644	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
1645	[BUG]  [BUGGY]  ||  inPos  <  inAvail)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail)  {  inPos  =  inPos;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
1646	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  10,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  10,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  10,  inAvail);	  System.arraycopy(in,    0,    inPos,    6,    inAvail);    	non-compiled	[CE]  ';'  expected	183	None	replace
1647	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
1648	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
1649	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
1650	[BUG]  [BUGGY]  Decoder.getInstance().decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Decoder.getInstance().decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Decoder.getInstance().decodeBase64(inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
1651	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos  -  inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos  -  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
1652	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
1653	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  INVALID_POP;  }	  if(inPos    >=    0)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	398	None	replace
1654	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvailable,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable,  4);	  decodeBase64(inPos,    inAvailable,    4);    	non-compiled	[CE]  ';'  expected	242	None	replace
1655	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  16);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  16);	  decodeBase64(inPos,    inAvailable,    4);    	non-compiled	[CE]  ';'  expected	242	None	replace
1656	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  modules);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail,  modules);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
1657	[BUG]  [BUGGY]  byte  b  =  data[inAvaililil++]  +  4;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inAvaililil++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvaililil++]  +  4;	  byte    b    =    data[inAvailil++];    	non-compiled	[CE]  ';'  expected	302	None	replace
1658	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  PAD);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos,  PAD);	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
1659	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
1660	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
1661	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  inAvail,  modulus);	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
1662	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(decodeBase64(in,  inPos,  inAvail,  modulus);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(decodeBase64(in,  inPos,  inAvail,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(decodeBase64(in,  inPos,  inAvail,  modulus);  }	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
1663	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(in,  inPos,  x,  inAvail,  modulus);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(in,  inPos,  x,  inAvail,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(in,  inPos,  x,  inAvail,  modulus);  }	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
1664	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  4);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  4);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	146	None	replace
1665	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  5,  inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1666	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  3,  inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1667	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1668	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1669	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1670	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1671	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1672	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1673	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1674	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1675	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1676	[BUG]  [BUGGY]  this.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	this.decodeBase64(inPos,  inAvail);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1677	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1678	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1679	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1680	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  inAvail;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  inAvail;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  +=  inAvail;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
1681	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  2;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[0]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[0]  +  2;	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
1682	[BUG]  [BUGGY]  byte  b  =  DECODE_BACKSLASH[2];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BACKSLASH[2];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BACKSLASH[2];	  byte    b    =    DECODE_BACKSLASH[0];    	non-compiled	[CE]  ';'  expected	279	None	replace
1683	[BUG]  [BUGGY]  inPos  =(inPos  >=  0)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  0)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  0)?  0  :  inAvail;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1684	[BUG]  [BUGGY]  inPos  =(inPos  >  1)?  0  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >  1)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >  1)?  0  :  inPos;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
1685	[BUG]  [BUGGY]  ((  Base64)in).decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)in).decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)in).decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
1686	[BUG]  [BUGGY]  DecodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
1687	[BUG]  [BUGGY]  DecodeBase64Input  in  =  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64Input  in  =  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64Input  in  =  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
1688	[BUG]  [BUGGY]  (inPos  +  1)  {  inPos  =  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)  {  inPos  =  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)  {  inPos  =  INVALID_POP;  }	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1689	[BUG]  [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  INVALID_POP)  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    inPos    =    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1690	[BUG]  [BUGGY]  inPos  =(inPos  <  <  3)?  1  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  3)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  3)?  1  :  inPos;	  inPos    =(inPos    <    <    1)?    1    :    inPos;    	non-compiled	[CE]  ';'  expected	107	None	replace
1691	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    ==    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	256	None	replace
1692	[BUG]  [BUGGY]  byte  b  =  this.in  +  inPos[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in  +  inPos[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in  +  inPos[inPos++];	  byte    b    =    inAvail    +    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	329	None	replace
1693	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  6);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  6);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1694	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvail  +  4);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1695	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  +  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvail  +  6);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1696	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  -  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvail  -  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvail  -  1);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
1697	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  4);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
1698	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  3);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
1699	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  6);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
1700	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  2);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  2);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
1701	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  5);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  5);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  5);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
1702	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  10);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  10);	  decodeBase64(in,    inPos,    10);    	non-compiled	[CE]  ';'  expected	220	None	replace
1703	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  +  6;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  +  6;	  byte    b    =    data[inPos++]    +    3;    	non-compiled	[CE]  ';'  expected	303	None	replace
1704	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
1705	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
1706	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
1707	[BUG]  [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoder.getInstance().decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
1708	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  8;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  8;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  8;	  byte    b    =    in[inPos++]    %    1;    	non-compiled	[CE]  ';'  expected	309	None	replace
1709	[BUG]  [BUGGY]  int  b  =  out[0];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  out[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  out[0];	  int    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	44	None	replace
1710	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail);  break;	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1711	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1712	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  System.arraycopy(inPos,  0,  inAvail,  module);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  System.arraycopy(inPos,  0,  inAvail,  module);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  System.arraycopy(inPos,  0,  inAvail,  module);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1713	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  0,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  0,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  0,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1714	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  builder.decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  builder.decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  builder.decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
1715	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  inPos,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
1716	[BUG]  [BUGGY]  DecodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
1717	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  32);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  inPos,  32);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
1718	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  4);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  inPos,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
1719	[BUG]  [BUGGY]  DefinedBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DefinedBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DefinedBase64.decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1720	[BUG]  [BUGGY]  DefinedBase64.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DefinedBase64.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DefinedBase64.decodeBase64(inPos,  inAvail  +  1);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1721	[BUG]  [BUGGY]  NegateBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NegateBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NegateBase64.decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1722	[BUG]  [BUGGY]  Preconditions.checkState(inPos  >=  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(inPos  >=  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Preconditions.checkState(inPos  >=  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1723	[BUG]  [BUGGY]  NegateBase64.decodeBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NegateBase64.decodeBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NegateBase64.decodeBase64(inPos,  inAvail  +  1);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
1724	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECDE_TABLE.length  -  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECDE_TABLE.length  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECDE_TABLE.length  -  1);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
1725	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length)+  1;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length)+  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length)+  1;	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
1726	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  16);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  16);	  DecodeBase64.decode(in,    inPos,    3);    	non-compiled	[CE]  ';'  expected	174	None	replace
1727	[BUG]  [BUGGY]  int  b  =  inAvailable[inPos++]  -  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvailable[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvailable[inPos++]  -  1;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
1728	[BUG]  [BUGGY]  int  b  =  in[inPos++]  -  1  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  -  1  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  -  1  +  1;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
1729	[BUG]  [BUGGY]  int  b  =  in[inPos++]  -  3;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  -  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  -  3;	  int    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	365	None	replace
1730	[BUG]  [BUGGY]  byte  b  =  outPos  +  inPos[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  outPos  +  inPos[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  outPos  +  inPos[inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1731	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[7++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[7++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[7++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1732	[BUG]  [BUGGY]  byte  b  =  inPos  +  out[6++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  out[6++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  out[6++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
1733	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  2);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  2);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
1734	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  3);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
1735	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  6);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  x,  inAvail  +  6);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
1736	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail,  4);	  decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	321	None	replace
1737	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE  +  1;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
1738	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MIN_VALUE);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MIN_VALUE);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MIN_VALUE);	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
1739	[BUG]  [BUGGY]  byte  b  =(inPos  <  0)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  0)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  0)?  this.in[inPos++]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
1740	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[0]  :  Integer.MIN_VALUE;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[0]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[0]  :  Integer.MIN_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MIN_VALUE;    	non-compiled	[CE]  ';'  expected	238	None	replace
1741	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1742	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1743	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1744	[BUG]  [BUGGY]  Preconditions.checkState(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Preconditions.checkState(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1745	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1746	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1747	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1748	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >>  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >>  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >>  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1749	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
1750	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail  -  1,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  inAvail  -  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  inAvail  -  1,  inPos);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
1751	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
1752	[BUG]  [BUGGY]  if(inPos  >  0)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >  0)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >  0)  {  inPos  =  0;  }	  inPos    =    0;    	non-compiled	[CE]  ';'  expected	131	None	replace
1753	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos,  inAvail);  return;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos,  inAvail);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos,  inAvail);  return;  }	  inPos    =    0;    	non-compiled	[CE]  ';'  expected	131	None	replace
1754	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos,  inAvail);  }	  inPos    =    0;    	non-compiled	[CE]  ';'  expected	131	None	replace
1755	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  0;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  inPos    =    0;    	non-compiled	[CE]  ';'  expected	131	None	replace
1756	[BUG]  [BUGGY]  inPos  =  inAvail  +  in.length  -  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  in.length  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  in.length  -  1;	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1757	[BUG]  [BUGGY]  inPos  =  inAvail  +  7;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  7;	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
1758	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  1xff;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  1xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  1xff;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1759	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xc0;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0xc0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xc0;	  int    b    =    in[inPos++]    &    0xff;    	non-compiled	[CE]  ';'  expected	86	None	replace
1760	[BUG]  [BUGGY]  NeighborDecoder.getInstance().decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoder.getInstance().decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoder.getInstance().decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
1761	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  0);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(in,  inPos,  0);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
1762	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
1763	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  0,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  0,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(in,  0,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
1764	[BUG]  [BUGGY]  NeighborDecoderIntrospector  <  Base64>  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoderIntrospector  <  Base64>  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoderIntrospector  <  Base64>  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
1765	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  inAvail  +  3);	  DecodeBase64.decode(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	196	None	replace
1766	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1767	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail)  <  =  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail)  <  =  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail)  <  =  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
1768	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1769	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1770	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  5,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1771	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1772	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1773	[BUG]  [BUGGY]  byte  b  =  inPos  +  9++;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  9++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  9++;	  byte    b    =    inPos    +    8++;    	non-compiled	[CE]  ';'  expected	369	None	replace
1774	[BUG]  [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoder.getInstance().decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
1775	[BUG]  [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inPos);  break;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inPos);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoder.getInstance().decodeBase64(inPos,  inPos);  break;	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
1776	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1777	[BUG]  [BUGGY]  if(inPos  ==  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1778	[BUG]  [BUGGY]  if(inPos  <  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1779	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  2)%  4;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  2)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  2)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1780	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  0,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  0,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  0,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
1781	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  0);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  0);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
1782	[BUG]  [BUGGY]  DefinedBase64.decodeBase64(x,  inPos,  PAD);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DefinedBase64.decodeBase64(x,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DefinedBase64.decodeBase64(x,  inPos,  PAD);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
1783	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
1784	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  outPos,  inAvail);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  outPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  outPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
1785	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD_TABLE);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD_TABLE);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  PAD_TABLE);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
1786	[BUG]  [BUGGY]  byte  b  =  3  [Integer.MAX_VALUE++];  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  3  [Integer.MAX_VALUE++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  3  [Integer.MAX_VALUE++];	  byte    b    =    3[inPos++];    	non-compiled	[CE]  ';'  expected	239	None	replace
1787	[BUG]  [BUGGY]  byte  b  =  2[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  2[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  2[inPos++];	  byte    b    =    3[inPos++];    	non-compiled	[CE]  ';'  expected	239	None	replace
1788	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable  +  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable  +  1);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
1789	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  8);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  8);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
1790	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  2,  inAvail);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
1791	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2,  inAvail  +  1);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  2,  inAvail  +  1);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
1792	[BUG]  [BUGGY]  byte  b  =  this.data[inPos++]  +  3;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[inPos++]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inPos++]  +  3;	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
1793	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  3,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  3,  inAvail);	  System.arraycopy(inAvail,    0,    inPos,    3,    inAvail);    	non-compiled	[CE]  ';'  expected	299	None	replace
1794	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  6);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  6);	  decodeBase64(in,    inPos,    6);    	non-compiled	[CE]  ';'  expected	221	None	replace
1795	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  -  1);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  inAvail  -  1);	  DecodeBase64.decode(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	195	None	replace
1796	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvailable,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable,  3);	  decodeBase64(inPos,    inAvailable,    3);    	non-compiled	[CE]  ';'  expected	243	None	replace
1797	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  0  :  inPos  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  1)?  0  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  0  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
1798	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  4);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
1799	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  3);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
1800	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  outPos);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
1801	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  2);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
1802	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  inAvail  +  6);	  byte[]    in    =    super.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	211	None	replace
1803	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1804	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
1805	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
1806	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
1807	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
1808	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  1))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
1809	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  2))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  2))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  2))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
1810	[BUG]  [BUGGY]  byte  b  =  inPos  +  this.out[inPos++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  this.out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  this.out[inPos++];	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
1811	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.out[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.out[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.out[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
1812	[BUG]  [BUGGY]  byte  b  =  this.out[0];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.out[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.out[0];	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
1813	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.out[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.out[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.out[inPos++]  :  inAvail;	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
1814	[BUG]  [BUGGY]  byte  b  =  inAvailable[inPos++]  +  4;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvailable[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailable[inPos++]  +  4;	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
1815	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  3);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1816	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  4);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1817	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  2);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1818	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64(inPos,  inAvail  +  6);	  byte[]    in    =    this.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	344	None	replace
1819	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_reportUnsupportedOperation();	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1820	[BUG]  [BUGGY]  _decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  4);	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1821	[BUG]  [BUGGY]  _decodeBase64(inPos,  3);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  3);	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1822	[BUG]  [BUGGY]  _decodeBase64(inPos,  40);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  40);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  40);	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
1823	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  /  1  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  /  1  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  /  1  +  1;	  byte    b    =    in[inPos++]    /    1;    	non-compiled	[CE]  ';'  expected	151	None	replace
1824	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  =  1;  }	  if(inPos    >=    0)    {    inPos    =    0;    }    	non-compiled	[CE]  ';'  expected	255	None	replace
1825	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
1826	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
1827	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(0);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(0);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
1828	[BUG]  [BUGGY]  byte  b  =  data[inAvailable++]  +  4;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inAvailable++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inAvailable++]  +  4;	  byte    b    =    data[inAvailable++];    	non-compiled	[CE]  ';'  expected	201	None	replace
1829	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1830	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inAvail);  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1831	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos  +  1);  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1832	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(inPos  +  3);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(inPos  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(inPos  +  3);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
1833	[BUG]  [BUGGY]  byte  b  =  outPos  +  inAvail[inPos++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  outPos  +  inAvail[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  outPos  +  inAvail[inPos++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
1834	[BUG]  [BUGGY]  byte  b  =  inAvail  +  out[0];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  out[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  out[0];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
1835	[BUG]  [BUGGY]  byte  b  =  inAvail  +  out[5++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  out[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  out[5++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
1836	[BUG]  [BUGGY]  byte  b  =  inAvail  +  out[4];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  out[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  out[4];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
1837	[BUG]  [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MAX_VALUE);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MAX_VALUE);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1?  this.in[inPos++]  :  Integer.MAX_VALUE);	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1838	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[0]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[0]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[0]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
1839	[BUG]  [BUGGY]  this.decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	this.decodeBase64(inPos,  inAvailable);	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
1840	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
1841	[BUG]  [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoder.getInstance().decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
1842	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
1843	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
1844	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  4);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
1845	[BUG]  [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecoder.getInstance().decodeBase64(inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecoder.getInstance().decodeBase64(inPos,  inAvail);  break;	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
1846	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  3);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  3);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
1847	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  2);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  2);	  System.arraycopy(in,    0,    inPos,    2);    	non-compiled	[CE]  ';'  expected	223	None	replace
1848	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2  -  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2  -  inPos);	  System.arraycopy(in,    0,    inPos,    2);    	non-compiled	[CE]  ';'  expected	223	None	replace
1849	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[0]  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[0]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[0]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
1850	[BUG]  [BUGGY]  byte  b  =(inPos  >  1)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  >  1)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  >  1)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
1851	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1852	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1853	[BUG]  [BUGGY]  ((  byte[])inAvail)>  inPos)  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)>  inPos)  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)>  inPos)  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1854	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1855	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE)))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE)))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE)))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1856	[BUG]  [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)&&(inPos  >=  0))  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1857	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  decode  =  Base64.getDefault();  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  decode  =  Base64.getDefault();  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  decode  =  Base64.getDefault();	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1858	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  -  3;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  -  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  -  3;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
1859	[BUG]  [BUGGY]  inPos  =  Integer.MAX_VALUE  +  6;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.MAX_VALUE  +  6;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.MAX_VALUE  +  6;	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
1860	[BUG]  [BUGGY]  if(!modulus)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(!modulus)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!modulus)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1861	[BUG]  [BUGGY]  if(Modifier.isStatic(modulus))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(Modifier.isStatic(modulus))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(Modifier.isStatic(modulus))  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1862	[BUG]  [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.BASE64)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1863	[BUG]  [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.VAR)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1864	[BUG]  [BUGGY]  if(modulus  ==  Base64.NAME)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NAME)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NAME)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1865	[BUG]  [BUGGY]  if(modulus  ==  Base64.VERSION)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.VERSION)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.VERSION)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1866	[BUG]  [BUGGY]  if(b  ==  PAD)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(b  ==  PAD)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(b  ==  PAD)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
1867	[BUG]  [BUGGY]  if(modulus  ==  Base64.UNINITIALIZED)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.UNINITIALIZED)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.UNINITIALIZED)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1868	[BUG]  [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.BASE64)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1869	[BUG]  [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.VAR)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1870	[BUG]  [BUGGY]  if(modulus  ==  Base64.EMPTY)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.EMPTY)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.EMPTY)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1871	[BUG]  [BUGGY]  if(modulus  ==  Base64.NAME)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NAME)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NAME)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1872	[BUG]  [BUGGY]  if(modulus  ==  Base64.NONE)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NONE)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NONE)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1873	[BUG]  [BUGGY]  if(modulus  ==  Base64.VERSION)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.VERSION)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.VERSION)  {  eof  =  false;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
1874	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1875	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1876	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  outPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  outPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  outPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1877	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
1878	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  INVALID;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  INVALID;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  INVALID;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	358	None	replace
1879	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  7;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  7;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  7;  }	  if(inPos    >=    inAvail)    {    inPos    +=    7;    }    	non-compiled	[CE]  ';'  expected	380	None	replace
1880	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  +=  7;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  +=  7;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  +=  7;  }	  if(inPos    >=    inAvail)    {    inPos    +=    7;    }    	non-compiled	[CE]  ';'  expected	380	None	replace
1881	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  3);	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1882	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  4);	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1883	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  2);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  2);	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1884	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  6);	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
1885	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  9);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail  +  9);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail  +  9);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    5);    	non-compiled	[CE]  ';'  expected	262	None	replace
1886	[BUG]  [BUGGY]  ((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
1887	[BUG]  [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
1888	[BUG]  [BUGGY]  ((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
1889	[BUG]  [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  inAvail))  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  inAvail))  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)&&(inPos  >=  inAvail))  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
1890	[BUG]  [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
1891	[BUG]  [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  decodeBase64();  }  [CE]  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  decodeBase64();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)&&(inPos  >=  0))  {  decodeBase64();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  	349	None	replace
1892	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  decodeBase64(inPos);  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	352	None	replace
1893	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
1894	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
1895	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
1896	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
1897	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
1898	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1899	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1900	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1901	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  decodeBase64(inPos);  }  [CE]  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  	168	None	replace
1902	[BUG]  [BUGGY]  NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>(inPos,  inPos);  [CE]  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>(inPos,  inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  	168	None	replace
1903	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  0);  [CE]  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  0);	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  	49	None	replace
1904	[BUG]  [BUGGY]  if(inPos  >=  4)  {  inPos  +=  4;  }  [CE]  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  4)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  4)  {  inPos  +=  4;  }	  if(inPos    >=    inAvail)    {    inPos    +=    4;    }    	non-compiled	[CE]  	2	None	replace
1905	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  +=  4;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  +=  4;  }	  if(inPos    >=    inAvail)    {    inPos    +=    4;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
1906	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  &  4  +  1;  [CE]  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  &  4  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  &  4  +  1;	  byte    b    =    in[inPos++]    &    4;    	non-compiled	[CE]  	32	None	replace
1907	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  5,  inPos);  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  5,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  5,  inPos);	  System.arraycopy(in,    0,    inPos,    5,    inAvail);    	non-compiled	[CE]  	80	None	replace
1908	[BUG]  [BUGGY]  if(inPos  ==  1)  {  inPos  +=  4;  }  [CE]  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  1)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  1)  {  inPos  +=  4;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  	381	None	replace
1909	[BUG]  [BUGGY]  if(inPos  <  1)  {  inPos  +=  4;  }  [CE]  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  1)  {  inPos  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  1)  {  inPos  +=  4;  }	  if(inPos    >=    1)    {    inPos    +=    4;    }    	non-compiled	[CE]  	381	None	replace
1910	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  32);  [CE]  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  32);	  DecodeBase64.decode(inPos,    inAvail,    PAD);    	non-compiled	[CE]  	192	None	replace
1911	[BUG]  [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MAX_VALUE;	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  	170	None	replace
1912	[BUG]  [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [CE]  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(inPos  <  1)?  this.in[inPos++]  :  Integer.MIN_VALUE;	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  	170	None	replace
1913	[BUG]  [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail;	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  	170	None	replace
1914	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  +  2);  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  +  2);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    +    2);    	non-compiled	[CE]  	277	None	replace
1915	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  %  4  +  2;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  %  4  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  %  4  +  2;	  byte    b    =    in[inPos++]    %    4;    	non-compiled	[CE]  ';'  expected	34	None	replace
1916	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	363	None	replace
1917	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
1918	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
1919	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
1920	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1921	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1922	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1923	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1924	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1925	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1926	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
1927	[BUG]  [BUGGY]  byte  b  =  data[inPos++]  %  1;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[inPos++]  %  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[inPos++]  %  1;	  byte    b    =    data[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	197	None	replace
1928	[BUG]  [BUGGY]  DefinedBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DefinedBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DefinedBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1929	[BUG]  [BUGGY]  NeighborDecodeBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborDecodeBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborDecodeBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1930	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1931	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1932	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1933	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  0;  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1934	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
1935	[BUG]  [BUGGY]  byte  b  =  PAD  +  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  PAD  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  PAD  +  1;	  byte    b    =    inAvail    +    1;    	non-compiled	[CE]  ';'  expected	90	None	replace
1936	[BUG]  [BUGGY]  byte  b  =  3  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  3  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  3  +  1;	  byte    b    =    inAvail    +    1;    	non-compiled	[CE]  ';'  expected	90	None	replace
1937	[BUG]  [BUGGY]  byte  b  =  base64  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  base64  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  base64  +  1;	  byte    b    =    inAvail    +    1;    	non-compiled	[CE]  ';'  expected	90	None	replace
1938	[BUG]  [BUGGY]  byte  b  =  4  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  4  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  4  +  1;	  byte    b    =    inAvail    +    1;    	non-compiled	[CE]  ';'  expected	90	None	replace
1939	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xFF  +  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0xFF  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xFF  +  1;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
1940	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  0xC0;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  0xC0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  0xC0;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
1941	[BUG]  [BUGGY]  int  b  =  in[0]  &  0xFF;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[0]  &  0xFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[0]  &  0xFF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
1942	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  *  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  *  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  *  1);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	206	None	replace
1943	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  1  :  inPos  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  1  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  1  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    1    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
1944	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1945	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1946	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  8;  }  else  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1947	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1948	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  Integer.MAX_VALUE);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  Integer.MAX_VALUE);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  Integer.MAX_VALUE);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1949	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  Integer.MIN_VALUE);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  Integer.MIN_VALUE);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  Integer.MIN_VALUE);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1950	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos++);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos++);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos,  inPos++);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
1951	[BUG]  [BUGGY]  System.arraycopy(modulus,  0,  inPos,  3,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(modulus,  0,  inPos,  3,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(modulus,  0,  inPos,  3,  inAvail);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
1952	[BUG]  [BUGGY]  (inPos  +  1)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
1953	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
1954	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  9);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  9);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  9);	  DecodeBase64.decode(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	190	None	replace
1955	[BUG]  [BUGGY]  decodeBase64(inPos  +  1,  inAvail  +  1);  break;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos  +  1,  inAvail  +  1);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos  +  1,  inAvail  +  1);  break;	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1956	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail  +  1);  break;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail  +  1);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail  +  1);  break;	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
1957	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1958	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  PAD);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  PAD);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1959	[BUG]  [BUGGY]  DecodeBase64(decodeBase64(inPos,  inAvailable));  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(decodeBase64(inPos,  inAvailable));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(decodeBase64(inPos,  inAvailable));	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1960	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1961	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail,  3);	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
1962	[BUG]  [BUGGY]  char  b  =  in[1];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[1];	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
1963	[BUG]  [BUGGY]  char  b  =  in[5++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[5++];	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
1964	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1965	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  inPos;  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1966	[BUG]  [BUGGY]  if(inPos  >  0)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >  0)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >  0)  {  inPos  =  inPos;  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1967	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
1968	[BUG]  [BUGGY]  byte  b  =  data[0].length;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[0].length;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[0].length;	  byte    b    =    data[0];    	non-compiled	[CE]  ';'  expected	301	None	replace
1969	[BUG]  [BUGGY]  DecodeBase64(decodeBase64(inPos,  inAvail));  break;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(decodeBase64(inPos,  inAvail));  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(decodeBase64(inPos,  inAvail));  break;	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1970	[BUG]  [BUGGY]  ((  Base64)inPos).decodeBase64(inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)inPos).decodeBase64(inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)inPos).decodeBase64(inPos,  inAvail);  break;	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1971	[BUG]  [BUGGY]  if(inPos  <  0)  {  decodeBase64(inPos,  0);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  decodeBase64(inPos,  0);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  decodeBase64(inPos,  0);  break;  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
1972	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1973	[BUG]  [BUGGY]  ((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)>  inPos)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1974	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inPos  <  inAvail))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inPos  <  inAvail))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inPos  <  inAvail))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1975	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1976	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1977	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1978	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MIN_VALUE))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MIN_VALUE))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MIN_VALUE))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1979	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE)))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE)))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  Integer.MAX_VALUE)))  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1980	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  if(modulus  ==  Base64.DEFAULT)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1981	[BUG]  [BUGGY]  byte  b  =  inPos[6++];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[6++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[6++];	  byte    b    =    inPos[inAvail++];    	non-compiled	[CE]  ';'  expected	203	None	replace
1982	[BUG]  [BUGGY]  byte  b  =  inPos[7];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[7];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[7];	  byte    b    =    inPos[inAvail++];    	non-compiled	[CE]  ';'  expected	203	None	replace
1983	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1984	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos  +  1);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos  +  1);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1985	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos  +  1);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos  +  1);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1986	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos  +  inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos  +  inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos  +  inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1987	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  return;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1988	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos  +  inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos  +  inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos  +  inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
1989	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
1990	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
1991	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
1992	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
1993	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  32);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  32);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
1994	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  16);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  16);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
1995	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail  +  4);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
1996	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail  +  6);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
1997	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  -  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  -  1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail  -  1);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
1998	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  -inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  -inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  -inAvail);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
1999	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2000	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2001	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2002	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2003	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2004	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  DecodeBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  DecodeBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  1))  {  DecodeBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2005	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  DecodeBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  DecodeBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  DecodeBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2006	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  1))  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
2007	[BUG]  [BUGGY]  inPos  =(inPos  >=  1)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  1)?  1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  1)?  1  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
2008	[BUG]  [BUGGY]  inPos  =(inPos  <  <  3)?  1  :  inAvail;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  3)?  1  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  3)?  1  :  inAvail;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
2009	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[0]  :  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[0]  :  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[0]  :  1;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    1;    	non-compiled	[CE]  ';'  expected	360	None	replace
2010	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2011	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2012	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2013	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2014	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  outAvail  +  1);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  outAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  outAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2015	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  6;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  +  6;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
2016	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  *  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  *  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  *  1;	  byte    b    =    DECODE_TABLE[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	73	None	replace
2017	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  8);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  8);	  System.arraycopy(in,    0,    inPos,    3);    	non-compiled	[CE]  ';'  expected	79	None	replace
2018	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.parseInt(inAvail);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	138	None	replace
2019	[BUG]  [BUGGY]  byte  b  =  inAvail  +  data[0];  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  data[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  data[0];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
2020	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
2021	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
2022	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
2023	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  Base64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  Base64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  Base64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
2024	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2025	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2026	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  in.length)  {  inPos  =  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2027	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2028	[BUG]  [BUGGY]  byte  b  =  this.decode[inAvailil++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[inAvailil++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inAvailil++];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
2029	[BUG]  [BUGGY]  byte  b  =  this.decode[0];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[0];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
2030	[BUG]  [BUGGY]  byte  b  =  this.decode[inPos++]  +  4;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inPos++]  +  4;	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
2031	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  16);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  16);	  DecodeBase64.decode(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	193	None	replace
2032	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  -  1);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos  +  1,  inAvail  -  1);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
2033	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos++,  inAvail  -  1);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos++,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos++,  inAvail  -  1);	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
2034	[BUG]  [BUGGY]  byte  b  =  inAvail  +;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
2035	[BUG]  [BUGGY]  byte  b  =(inAvail  +  1)%  4;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inAvail  +  1)%  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inAvail  +  1)%  4;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
2036	[BUG]  [BUGGY]  byte  b  =  inAvail  +++;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
2037	[BUG]  [BUGGY]  byte  b  =  inAvail[inPos++]  +  DECODE_TABLE;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail[inPos++]  +  DECODE_TABLE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail[inPos++]  +  DECODE_TABLE;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
2038	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  inAvail;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0]  +  inAvail;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
2039	[BUG]  [BUGGY]  byte  b  =  inPos  +  DECODE_TABLE[inPos++]  +  inAvail;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  DECODE_TABLE[inPos++]  +  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  DECODE_TABLE[inPos++]  +  inAvail;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
2040	[BUG]  [BUGGY]  byte  b  =  this.decodeBase64[0];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decodeBase64[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decodeBase64[0];	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
2041	[BUG]  [BUGGY]  byte  b  =  DECODE_BASE64[2];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_BASE64[2];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_BASE64[2];	  byte    b    =    DECODE_BASE64[0];    	non-compiled	[CE]  ';'  expected	19	None	replace
2042	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[0]  :  inAvail;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[0]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[0]  :  inAvail;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
2043	[BUG]  [BUGGY]  byte  b  =(inPos  >  this.inPos)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  >  this.inPos)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  >  this.inPos)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
2044	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  inAvail  +  1;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
2045	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  1;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
2046	[BUG]  [BUGGY]  if(inPos  >=  6)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  6)  {  inPos  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  6)  {  inPos  +=  6;  }	  if(inPos    >=    inAvail)    {    inPos    +=    6;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
2047	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  inAvail  +  1);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
2048	[BUG]  [BUGGY]  _decodeBase64(in,  0,  inAvail);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  0,  inAvail);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
2049	[BUG]  [BUGGY]  _decodeBase64(in,  inPos,  inAvail,  module);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(in,  inPos,  inAvail,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(in,  inPos,  inAvail,  module);	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
2050	[BUG]  [BUGGY]  int  b  =  outPos[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  outPos[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  outPos[0];	  int    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
2051	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  4  -  1;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  4  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  4  -  1;	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
2052	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  +=  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
2053	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  inPos  +=  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
2054	[BUG]  [BUGGY]  inPos  =(inPos  +  1)%  16;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)%  16;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)%  16;	  inPos    =(inPos    +    1)%    8;    	non-compiled	[CE]  ';'  expected	128	None	replace
2055	[BUG]  [BUGGY]  DecodeBase64(decodeBase64(inPos,  inAvail));  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64(decodeBase64(inPos,  inAvail));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64(decodeBase64(inPos,  inAvail));	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
2056	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
2057	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  0);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  0);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
2058	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
2059	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
2060	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
2061	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
2062	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2063	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2064	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2065	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2066	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2067	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2068	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2069	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2070	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2071	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  System.arraycopy(inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2072	[BUG]  [BUGGY]  if(inPos  >  0)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >  0)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >  0)  {  inAvail  +=  inPos;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
2073	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inAvail  +=  inAvail;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inAvail  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inAvail  +=  inAvail;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
2074	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2075	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2076	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  System.arraycopy(in,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  System.arraycopy(in,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  System.arraycopy(in,  0,  inPos,  4,  inPos);  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2077	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  return;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  return;  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2078	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  4);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  inAvail  +  4);	  System.arraycopy(in,    0,    inPos,    3,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	140	None	replace
2079	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inPos  -  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inPos  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inPos  -  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	287	None	replace
2080	[BUG]  [BUGGY]  if(inPos  >=  3)  {  inPos  +=  3;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  3)  {  inPos  +=  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  3)  {  inPos  +=  3;  }	  if(inPos    >=    inAvail)    {    inPos    +=    3;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
2081	[BUG]  [BUGGY]  byte  b  =  this.inAvail  +  6;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvail  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvail  +  6;	  byte    b    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	92	None	replace
2082	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  6);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  inAvail  +  6);	  DecodeBase64.decode(inPos,    inAvail    +    6);    	non-compiled	[CE]  ';'  expected	270	None	replace
2083	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  3);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  -  3);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	185	None	replace
2084	[BUG]  [BUGGY]  int  b  =  decodeBase64(0);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(0);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(0);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
2085	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  4);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
2086	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  3);	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
2087	[BUG]  [BUGGY]  byte  b  =  in[8];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[8];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[8];	  byte    b    =    in[6];    	non-compiled	[CE]  ';'  expected	361	None	replace
2088	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  -  4);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	187	None	replace
2089	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  8);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  +  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  +  8);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	187	None	replace
2090	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inPos  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
2091	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  inPos  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
2092	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  inPos  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
2093	[BUG]  [BUGGY]  (inPos  +  1)  {  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)  {  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)  {  inPos  =  inPos  +  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
2094	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  +  6;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  +  6;	  byte    b    =    this.in[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	169	None	replace
2095	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  inAvail);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
2096	[BUG]  [BUGGY]  byte  b  =  this.inAvail  +  3++;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.inAvail  +  3++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.inAvail  +  3++;	  byte    b    =    inAvail    +    3++;    	non-compiled	[CE]  ';'  expected	91	None	replace
2097	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[modules.length  +  1];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[modules.length  +  1];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[modules.length  +  1];	  byte    b    =    DECODE_TABLE[inAvail    +    1];    	non-compiled	[CE]  ';'  expected	75	None	replace
2098	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  0))  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  0))  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  0))  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
2099	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  0))  {  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  0))  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  0))  {  decodeBase64(inPos);	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
2100	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  6))  {  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  6))  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  6))  {  decodeBase64(inPos);	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
2101	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  1))  {  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  1))  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  1))  {  decodeBase64(inPos);	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
2102	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  1))  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvailable  <  =  1))  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvailable  <  =  1))  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
2103	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  +=  inAvail;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
2104	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  +=  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  +=  1;  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
2105	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  +=  Integer.toHexString(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  +=  Integer.toHexString(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  +=  Integer.toHexString(inPos);  }	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
2106	[BUG]  [BUGGY]  inPos  =(inPos  <  <  8)?  0  :  inPos;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  8)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  8)?  0  :  inPos;	  inPos    =(inPos    <    <    2)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	111	None	replace
2107	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  3);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos  +  1,  inAvail  +  3);	  DecodeBase64.decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	145	None	replace
2108	[BUG]  [BUGGY]  b  =  in[inPos++]  &  ';';  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  in[inPos++]  &  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  in[inPos++]  &  ';';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
2109	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  '0';  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  '0';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  '0';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
2110	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  outPos);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
2111	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  outPos  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  outPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  outPos  +  1);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
2112	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inPos);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
2113	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2114	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2115	[BUG]  [BUGGY]  byte  b  =  in[0]  %  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  %  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  %  1;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
2116	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2117	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2118	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2119	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2120	[BUG]  [BUGGY]  Integer  inPos  =  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  inPos  =  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Integer  inPos  =  decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	395	None	replace
2121	[BUG]  [BUGGY]  Preconditions.checkState(inPos  <  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(inPos  <  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Preconditions.checkState(inPos  <  inAvail);	  if(inPos    >=    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	395	None	replace
2122	[BUG]  [BUGGY]  ((  Base64)inPos).decode(inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)inPos).decode(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)inPos).decode(inPos);	  if(inPos    >=    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	395	None	replace
2123	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  16);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  16);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  16);	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
2124	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  1  +  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  -  1  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  1  +  1;	  byte    b    =    in[inPos++]    -    1;    	non-compiled	[CE]  ';'  expected	150	None	replace
2125	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  INVALID_POP;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  INVALID_POP;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  INVALID_POP;  }	  if(inPos    >=    inAvail)    {    inPos    +=    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
2126	[BUG]  [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  INVALID_POP)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  INVALID_POP)  {  inPos  +=  inAvail;  }	  if(inPos    >=    inAvail)    {    inPos    +=    INVALID_POP;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
2127	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2128	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2129	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  module,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  module,  0);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2130	[BUG]  [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modules);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(in,  inPos,  inAvail,  modules);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(in,  inPos,  inAvail,  modules);	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2131	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  System.arraycopy(in,  0,  inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  System.arraycopy(in,  0,  inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  System.arraycopy(in,  0,  inPos,  inAvail,  module);  }	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2132	[BUG]  [BUGGY]  char  b  =(inPos  <  1)?  inPos  +  1  :  in[inPos++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(inPos  <  1)?  inPos  +  1  :  in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(inPos  <  1)?  inPos  +  1  :  in[inPos++];	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
2133	[BUG]  [BUGGY]  char  b  =(inPos  <  1)?  inPos++:  in[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(inPos  <  1)?  inPos++:  in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(inPos  <  1)?  inPos++:  in[inPos++];	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
2134	[BUG]  [BUGGY]  char  b  =  decode[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decode[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decode[inPos++];	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
2135	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  inAvail  +  1);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
2136	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  PAD);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  PAD);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
2137	[BUG]  [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.DEFAULT))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.DEFAULT))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.DEFAULT))  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2138	[BUG]  [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.BASE64_VALUE))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.BASE64_VALUE))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.BASE64_VALUE))  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2139	[BUG]  [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.VERSION_CODES[0]))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.VERSION_CODES[0]))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.VERSION_CODES[0]))  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2140	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2141	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  0,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  0,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  0,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
2142	[BUG]  [BUGGY]  inPos  =(inPos  <  <  2)?  3  :  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  2)?  3  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  2)?  3  :  inPos;	  inPos    =(inPos    <    <    1)?    3    :    inPos;    	non-compiled	[CE]  ';'  expected	108	None	replace
2143	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  4);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  2,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  2,  inAvail  +  4);	  System.arraycopy(in,    0,    inPos,    2,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	222	None	replace
2144	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos  +  1,  inAvail);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
2145	[BUG]  [BUGGY]  byte[]  in  =  base64(inPos  +  1);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64(inPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64(inPos  +  1);	  byte[]    in    =    decodeBase64(inPos    +    1);    	non-compiled	[CE]  ';'  expected	154	None	replace
2146	[BUG]  [BUGGY]  inPos  =  inAvail  +  9;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvail  +  9;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvail  +  9;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
2147	[BUG]  [BUGGY]  if(eof  ==  PAD)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(eof  ==  PAD)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(eof  ==  PAD)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
2148	[BUG]  [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.VAR)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
2149	[BUG]  [BUGGY]  if(modulus  ==  Base64.NAME)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NAME)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NAME)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
2150	[BUG]  [BUGGY]  if(inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
2151	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
2152	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  -  1);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  1,  inAvail  -  1);	  System.arraycopy(inAvail,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	275	None	replace
2153	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  7);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  7);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  7);	  DecodeBase64.decode(in,    inPos,    6);    	non-compiled	[CE]  ';'  expected	181	None	replace
2154	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2155	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2156	[BUG]  [BUGGY]  ((  Base64)inPos).decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)inPos).decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)inPos).decodeBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2157	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvailable)  {  decodeBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2158	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  %  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  %  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  %  4;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
2159	[BUG]  [BUGGY]  _decodeBase64(inPos,  0);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  0);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
2160	[BUG]  [BUGGY]  ensureCapacity(inPos,  0);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	ensureCapacity(inPos,  0);	  decodeBase64(inPos,    0);    	non-compiled	[CE]  ';'  expected	244	None	replace
2161	[BUG]  [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
2162	[BUG]  [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64Chars);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64Chars);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64Chars);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
2163	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  -inAvailil);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  -inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  -inAvailil);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
2164	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvailil  +  4);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  inAvailil  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  inAvailil  +  4);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
2165	[BUG]  [BUGGY]  int  b  =  this.inAvail  +  inPos;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.inAvail  +  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.inAvail  +  inPos;	  int    b    =    inAvail    +    inPos;    	non-compiled	[CE]  ';'  expected	229	None	replace
2166	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  6;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  6;  }	  if(inPos    >=    inAvail)    {    inPos    =    6;    }    	non-compiled	[CE]  ';'  expected	399	None	replace
2167	[BUG]  [BUGGY]  if(inPos  >=  6)  {  inPos  =  6;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  6)  {  inPos  =  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  6)  {  inPos  =  6;  }	  if(inPos    >=    inAvail)    {    inPos    =    6;    }    	non-compiled	[CE]  ';'  expected	399	None	replace
2168	[BUG]  [BUGGY]  System.arraycopy(in,  0,  outPos,  0,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  outPos,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  outPos,  0,  inAvail);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
2169	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  outPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  outPos);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
2170	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail);  eof  =  true;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail);  eof  =  true;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail);  eof  =  true;	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
2171	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2172	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2173	[BUG]  [BUGGY]  Preconditions.checkState(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Preconditions.checkState(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2174	[BUG]  [BUGGY]  DefinedBase64.decode(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DefinedBase64.decode(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DefinedBase64.decode(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2175	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2176	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail  +  3);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2177	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inPos  -  1);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inPos  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inPos  -  1);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2178	[BUG]  [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  6);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  0,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  0,  inAvail  +  6);	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2179	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail  +  3);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
2180	[BUG]  [BUGGY]  _decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  outPos);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
2181	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail  +  4);	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
2182	[BUG]  [BUGGY]  byte  b  =  inPos[2];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[2];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[2];	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
2183	[BUG]  [BUGGY]  byte  b  =  inPos[0]  &  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[0]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[0]  &  1;	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
2184	[BUG]  [BUGGY]  byte  b  =  inPos[0]  -  1;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos[0]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos[0]  -  1;	  byte    b    =    inPos[0];    	non-compiled	[CE]  ';'  expected	278	None	replace
2185	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2186	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2187	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2188	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2189	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable  +  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable  +  1);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2190	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  outAvailable);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  outAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  outAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2191	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  8,  inAvail  -  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  8,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  8,  inAvail  -  1);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	258	None	replace
2192	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2193	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2194	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2195	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2196	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  DecodeBase64.decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2197	[BUG]  [BUGGY]  byte  b  =  this.in[inAvail++]  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inAvail++]  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inAvail++]  +  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
2198	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  /  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inAvail++]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  /  1;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
2199	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  4);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos  +  4);	  ((    Base64)modulus).decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	232	None	replace
2200	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  6);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos  +  6);	  ((    Base64)modulus).decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	232	None	replace
2201	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  2);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  2);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
2202	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  4);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
2203	[BUG]  [BUGGY]  float  b  =  in[inAvail++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  float  b  =  in[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	float  b  =  in[inAvail++];	  int    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	85	None	replace
2204	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  -1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  -1  :  inPos;	  inPos    =(inPos    <    <    1)?    -1    :    inPos;    	non-compiled	[CE]  ';'  expected	113	None	replace
2205	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  -1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  -1  :  inPos;	  inPos    =(inPos    <    <    1)?    -1    :    inPos;    	non-compiled	[CE]  ';'  expected	113	None	replace
2206	[BUG]  [BUGGY]  inPos  =(inPos  <  <  3)?  -1  :  inPos;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  3)?  -1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  3)?  -1  :  inPos;	  inPos    =(inPos    <    <    1)?    -1    :    inPos;    	non-compiled	[CE]  ';'  expected	113	None	replace
2207	[BUG]  [BUGGY]  int  b  =  inPos  +  6++;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  6++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  6++;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
2208	[BUG]  [BUGGY]  int  b  =  inPos  +  3++;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  3++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  3++;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
2209	[BUG]  [BUGGY]  int  b  =  inPos  +  4++;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  4++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  4++;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
2210	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  3);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
2211	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  4);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  4);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
2212	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos,  inAvail  +  6);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
2213	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvail,  PAD);  break;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvail,  PAD);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvail,  PAD);  break;	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
2214	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
2215	[BUG]  [BUGGY]  if(!modulus)  {  _decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(!modulus)  {  _decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!modulus)  {  _decodeBase64(inPos,  inAvail);  break;  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
2216	[BUG]  [BUGGY]  _decodeBase64(inPos,  PAD);  break;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  PAD);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  PAD);  break;	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
2217	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2218	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2219	[BUG]  [BUGGY]  if(inPos  ==  0)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2220	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  8);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  8);	  decodeBase64(inPos,    inAvail,    8);    	non-compiled	[CE]  ';'  expected	323	None	replace
2221	[BUG]  [BUGGY]  if(inPos  >  0)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >  0)  {  inPos  +=  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >  0)  {  inPos  +=  1;  }	  if(inPos    >=    0)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	253	None	replace
2222	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2223	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPo  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPo  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPo	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2224	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inP  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inP  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inP	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2225	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  in  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  in  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  in	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2226	[BUG]  [BUGGY]  inAvail  +=  inPos  -  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inAvail  +=  inPos  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvail  +=  inPos  -  1;	  inAvail    +=    inPos    +    1;    	non-compiled	[CE]  ';'  expected	316	None	replace
2227	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  2);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  0,  inAvail  -  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  0,  inAvail  -  2);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	288	None	replace
2228	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2229	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  8);  break;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  8);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  8);  break;	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2230	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  6);  break;  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  6);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  6);  break;	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2231	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  32);  break;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  32);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  32);  break;	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2232	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2233	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2234	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2235	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2236	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos+inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos+inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  decodeBase64(inPos+inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2237	[BUG]  [BUGGY]  NeighborIntrospector  <  Base64>  inAvail  =  decodeBase64(inPos+inPos);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborIntrospector  <  Base64>  inAvail  =  decodeBase64(inPos+inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborIntrospector  <  Base64>  inAvail  =  decodeBase64(inPos+inPos);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2238	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  0;  }	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
2239	[BUG]  [BUGGY]  if(inPos  >=  2)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
2240	[BUG]  [BUGGY]  (inPos  +  1)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  (inPos  +  1)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	(inPos  +  1)  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    inPos    =    1;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
2241	[BUG]  [BUGGY]  Preconditions.checkState(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Preconditions.checkState(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
2242	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  inPos  =  0;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
2243	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
2244	[BUG]  [BUGGY]  Preconditions.checkState(inPos  >=  inAvail);  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(inPos  >=  inAvail);  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	Preconditions.checkState(inPos  >=  inAvail);  decodeBase64(inPos);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
2245	[BUG]  [BUGGY]  byte  b  =  this.in[5++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[5++];	  byte    b    =    this.in[inAvail++];    	non-compiled	[CE]  ';'  expected	171	None	replace
2246	[BUG]  [BUGGY]  byte  b  =  this.in[4];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[4];	  byte    b    =    this.in[inAvail++];    	non-compiled	[CE]  ';'  expected	171	None	replace
2247	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4  +  3;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4  +  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4  +  3;  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2248	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4;  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2249	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  inPos  =(inPos  +  3);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  inPos  =(inPos  +  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  inPos  =(inPos  +  3);  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2250	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4  +  1;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  inPos  =(inPos  +  1)%  4  +  1;  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2251	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2252	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  1,  inAvail  +  1);  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2253	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  3);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  3);  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2254	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
2255	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
2256	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
2257	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
2258	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
2259	[BUG]  [BUGGY]  float  b  =(float)Math.floor(modulus);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  float  b  =(float)Math.floor(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	float  b  =(float)Math.floor(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
2260	[BUG]  [BUGGY]  b  =(int)Math.floor(modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  b  =(int)Math.floor(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =(int)Math.floor(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
2261	[BUG]  [BUGGY]  int  b  =(int)Math.floor(modulus  +  4);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Math.floor(modulus  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.floor(modulus  +  4);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
2262	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(0,  0,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(0,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(0,  0,  inAvail);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
2263	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(0,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(0,  inPos);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
2264	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  4);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(in,  inPos  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(in,  inPos  +  4);	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
2265	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  0);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  0);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
2266	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  0,  inPos);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  0,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  0,  inPos);	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
2267	[BUG]  [BUGGY]  if(inPos  >=  8)  {  inPos  +=  8;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  8)  {  inPos  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  8)  {  inPos  +=  8;  }	  if(inPos    >=    inAvail)    {    inPos    +=    8;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
2268	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2269	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2270	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2271	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2272	[BUG]  [BUGGY]  NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>(inPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>(inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2273	[BUG]  [BUGGY]  ||  inPos  >=  0  ||  inAvail  >  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0  ||  inAvail  >  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0  ||  inAvail  >  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2274	[BUG]  [BUGGY]  NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>();  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>();  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborIntrospector  <  Base64>  eof  =  new  NeighborIntrospector  <  Base64>();	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2275	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2276	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
2277	[BUG]  [BUGGY]  if(inPos  >=  2)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
2278	[BUG]  [BUGGY]  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
2279	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  1,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  1,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
2280	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  2,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  2,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
2281	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  6,  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  6,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  6,  inPos);	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
2282	[BUG]  [BUGGY]  inPos  =  7;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  7;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
2283	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  2;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[0]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0]  +  2;	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
2284	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  40);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  40);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  40);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
2285	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64Bytes(inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64Bytes(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64Bytes(inPos);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
2286	[BUG]  [BUGGY]  inPos  =(inPos  <  <  6)?  4  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  6)?  4  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  6)?  4  :  inPos;	  inPos    =(inPos    <    <    6)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	294	None	replace
2287	[BUG]  [BUGGY]  inPos  =(inPos  >=  6)?  0  :  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  6)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  6)?  0  :  inPos;	  inPos    =(inPos    <    <    6)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	294	None	replace
2288	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  0,  inAvail);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  0,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  0,  inAvail);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
2289	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(modulus,  inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(modulus,  inPos,  inAvail  +  1);	  byte[]    in    =    decodeBase64(modulus,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	343	None	replace
2290	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2291	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2292	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2293	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2294	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2295	[BUG]  [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.DEFAULT))  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.DEFAULT))  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.DEFAULT))  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
2296	[BUG]  [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.BASE64_VALUE))  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.BASE64_VALUE))  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.BASE64_VALUE))  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
2297	[BUG]  [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.VERSION_CODES_OVER))  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.VERSION_CODES_OVER))  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(modulus  ==  Base64.DEFAULT  &&  module!=  Base64.VERSION_CODES_OVER))  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
2298	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inAvailil);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(x,  inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(x,  inAvailil);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
2299	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  -inAvailil);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  -inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  -inAvailil);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
2300	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  x,  inAvailil);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  x,  inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  x,  inAvailil);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
2301	[BUG]  [BUGGY]  _decodeBase64(inPos,  inAvailable  +  1);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  _decodeBase64(inPos,  inAvailable  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	_decodeBase64(inPos,  inAvailable  +  1);	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
2302	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  *  4);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  inAvail  *  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  inAvail  *  4);	  byte[]    in    =    decodeBase64(inPos,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	292	None	replace
2303	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  -  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++]  -  1;	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
2304	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2305	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inP  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inP  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inP	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2306	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPo  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPo  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPo	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2307	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2308	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  in  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  in  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  in	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2309	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2310	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2311	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2312	[BUG]  [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2313	[BUG]  [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2314	[BUG]  [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  modulus);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2315	[BUG]  [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus!=  Base64.DEFAULT)  {  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2316	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
2317	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  =  inAvail;  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
2318	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  Integer.parseInt(inPos);  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
2319	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  40);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  40);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  40);	  byte[]    in    =    base64.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	158	None	replace
2320	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos  +  3);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(inPos  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(inPos  +  3);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
2321	[BUG]  [BUGGY]  NeighborInteger  inPos  =  decodeBase64(inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborInteger  inPos  =  decodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborInteger  inPos  =  decodeBase64(inPos);	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2322	[BUG]  [BUGGY]  ||  inPos  <  inAvail)  {  inPos  =  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  <  inAvail)  {  inPos  =  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  <  inAvail)  {  inPos  =  inPos;	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2323	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  0);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvailable,  module,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvailable,  module,  0);	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
2324	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos  +  4);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos  +  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos  +  4);	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
2325	[BUG]  [BUGGY]  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  modulus  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    break;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
2326	[BUG]  [BUGGY]  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  moduleum  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    break;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
2327	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  moduleum  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    break;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
2328	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(0);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(0);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
2329	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  base64);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos++,  base64);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos++,  base64);	  byte[]    in    =    decodeBase64(inPos++);    	non-compiled	[CE]  ';'  expected	156	None	replace
2330	[BUG]  [BUGGY]  byte  b  =  out[inPos++]  +  4;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  out[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  out[inPos++]  +  4;	  byte    b    =    out[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	46	None	replace
2331	[BUG]  [BUGGY]  byte  b  =  out[inPos++]  +  2;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  out[inPos++]  +  2;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  out[inPos++]  +  2;	  byte    b    =    out[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	46	None	replace
2332	[BUG]  [BUGGY]  byte  b  =  out[inPos++]  /  1;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  out[inPos++]  /  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  out[inPos++]  /  1;	  byte    b    =    out[inPos++]    +    1;    	non-compiled	[CE]  ';'  expected	46	None	replace
2333	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  5);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  inAvail  +  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  inAvail  +  5);	  DecodeBase64.decode(in,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	317	None	replace
2334	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  outPos  +  1);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  outPos  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  outPos  +  1);	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2335	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  1,  outPos);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  1,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  1,  outPos);	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2336	[BUG]  [BUGGY]  angleInteger  inPos  =(inPos  +  1)%  4;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  angleInteger  inPos  =(inPos  +  1)%  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	angleInteger  inPos  =(inPos  +  1)%  4;	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	328	None	replace
2337	[BUG]  [BUGGY]  NeighborInteger  inPos  =(NeighborInteger)inPos;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborInteger  inPos  =(NeighborInteger)inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	NeighborInteger  inPos  =(NeighborInteger)inPos;	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	328	None	replace
2338	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	328	None	replace
2339	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	328	None	replace
2340	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
2341	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
2342	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
2343	[BUG]  [BUGGY]  if(inPos  ==  0)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
2344	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(0);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(0);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
2345	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
2346	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  -  1);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  0,  inAvail  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  0,  inAvail  -  1);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
2347	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  6;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  6;	  int    b    =    in[inPos++]    &    1;    	non-compiled	[CE]  ';'  expected	230	None	replace
2348	[BUG]  [BUGGY]  decodeBase64(inPos,  inAvail,  module,  0);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  decodeBase64(inPos,  inAvail,  module,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	decodeBase64(inPos,  inAvail,  module,  0);	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	98	None	replace
2349	[BUG]  [BUGGY]  ((  Base64)modulus).decode(0,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(0,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(0,  inAvail);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
2350	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos  +  4);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos  +  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos  +  4);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
2351	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  +=  inAvail;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
2352	[BUG]  [BUGGY]  if(inPos  >  0)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >  0)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >  0)  {  inPos  +=  inAvail;  }	  if(inPos    >=    0)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	250	None	replace
2353	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2354	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2355	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2356	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  1))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  1))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2357	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  0))  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2358	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2359	[BUG]  [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  inAvail  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2360	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  5);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  5);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  5);	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2361	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  0);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail,  0);	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
2362	[BUG]  [BUGGY]  ||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
2363	[BUG]  [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  2))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  >=  0  &&  inAvail  <  =  2))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  >=  0  &&  inAvail  <  =  2))  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
2364	[BUG]  [BUGGY]  ||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
2365	[BUG]  [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)>  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
2366	[BUG]  [BUGGY]  ||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  ||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||(inPos  <  0  &&  inAvail  >  0))  {  decodeBase64(inPos,  inAvail);	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
2367	[BUG]  [BUGGY]  byte  b  =  in[inPos++]  -  4  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inPos++]  -  4  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inPos++]  -  4  +  1;	  byte    b    =    in[inPos++]    -    4;    	non-compiled	[CE]  ';'  expected	31	None	replace
2368	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2369	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2370	[BUG]  [BUGGY]  inPos  +=  inAvail  +  1;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  inAvail  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  inAvail  +  1;	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2371	[BUG]  [BUGGY]  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  b  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  this.in[inPos++];	  int    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	84	None	replace
2372	[BUG]  [BUGGY]  float  b  =  this.in[inPos++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  float  b  =  this.in[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	float  b  =  this.in[inPos++];	  int    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	84	None	replace
2373	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  +  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  +  4;	  int    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	84	None	replace
2374	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2375	[BUG]  [BUGGY]  if(inPos  >=  4)  {  inPos  =  4;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  4)  {  inPos  =  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  4)  {  inPos  =  4;  }	  if(inPos    >=    inAvail)    {    inPos    =    4;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
2376	[BUG]  [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inPos,  0,  inPos,  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inPos,  0,  inPos,  1);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
2377	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
2378	[BUG]  [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  SecuritySystem.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	SecuritySystem.arraycopy(inPos,  0,  inPos  +  1,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
2379	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
2380	[BUG]  [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
2381	[BUG]  [BUGGY]  char  b  =  this.decodeBase64(inPos++);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  this.decodeBase64(inPos++);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  this.decodeBase64(inPos++);	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
2382	[BUG]  [BUGGY]  char  b  =  DECODE_TABLE[inPos++]  *  4;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  DECODE_TABLE[inPos++]  *  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  DECODE_TABLE[inPos++]  *  4;	  char    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	77	None	replace
2383	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(in,    inPos,    1);    	non-compiled	[CE]  ';'  expected	217	None	replace
2384	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }	  decodeBase64(in,    inPos,    1);    	non-compiled	[CE]  ';'  expected	217	None	replace
2385	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  System.arraycopy(in,  inPos,  3);  }	  decodeBase64(in,    inPos,    1);    	non-compiled	[CE]  ';'  expected	217	None	replace
2386	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  System.arraycopy(in,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  System.arraycopy(in,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  1);  }  else  {  System.arraycopy(in,  inPos,  4);  }	  decodeBase64(in,    inPos,    1);    	non-compiled	[CE]  ';'  expected	217	None	replace
2387	[BUG]  [BUGGY]  int  b  =  inPos  +  6;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inPos  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inPos  +  6;	  int    b    =    inAvail    +    inPos++;    	non-compiled	[CE]  ';'  expected	228	None	replace
2388	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  else  {  decodeBase64(inPos,  inAvail  -  1);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  else  {  decodeBase64(inPos,  inAvail  -  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  else  {  decodeBase64(inPos,  inAvail  -  1);  }	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
2389	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
2390	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	259	None	replace
2391	[BUG]  [BUGGY]  byte[]  in  =  builder.decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  builder.decodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  builder.decodeBase64(inPos,  outPos);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
2392	[BUG]  [BUGGY]  byte[]  in  =  builder().decodeBase64(inPos,  outPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  builder().decodeBase64(inPos,  outPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  builder().decodeBase64(inPos,  outPos);	  byte[]    in    =    decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	289	None	replace
2393	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2394	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos,  inAvailable  +  1);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2395	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos  +  1,  inAvailable);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos  +  1,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  decodeBase64(inPos  +  1,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	362	None	replace
2396	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
2397	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
2398	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decode(in,    inPos);    	non-compiled	[CE]  ';'  expected	188	None	replace
2399	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  4);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  4);  }	  decodeBase64(inPos,    inAvailable,    4);    	non-compiled	[CE]  ';'  expected	242	None	replace
2400	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  4);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  4);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  4);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvailable,    4);    	non-compiled	[CE]  ';'  expected	242	None	replace
2401	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	353	None	replace
2402	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
2403	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
2404	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  +=  inAvail;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
2405	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length  +  1;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length  +  1;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	357	None	replace
2406	[BUG]  [BUGGY]  byte  b  =  in[inAvail++]  +  3;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[inAvail++]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[inAvail++]  +  3;	  byte    b    =    in[inAvail++]    +    1;    	non-compiled	[CE]  ';'  expected	342	None	replace
2407	[BUG]  [BUGGY]  byte  b  =  this.in[6];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[6];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[6];	  byte    b    =    in[6];    	non-compiled	[CE]  ';'  expected	361	None	replace
2408	[BUG]  [BUGGY]  char  b  =  decodeBase64(inPos++);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decodeBase64(inPos++);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decodeBase64(inPos++);	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
2409	[BUG]  [BUGGY]  char  b  =  decodeBase64(inPos++,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decodeBase64(inPos++,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decodeBase64(inPos++,  inAvail);	  char    b    =    in[inPos++];    	non-compiled	[CE]  ';'  expected	82	None	replace
2410	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
2411	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
2412	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
2413	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
2414	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
2415	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	340	None	replace
2416	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  inPos  =  inPos  +  3;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  inPos  =  inPos  +  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  inPos  =  inPos  +  3;  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2417	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2418	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  decodeBase64(inPos  +  1);  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2419	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  3;  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }	  inPos    =(inPos    +    1)%    4    +    3;    	non-compiled	[CE]  ';'  expected	265	None	replace
2420	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  4;  }  else  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  4;  }  else  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  4;  }  else  {  inAvail  +=  4;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2421	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  8;  }  else  {  inAvail  +=  8;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  8;  }  else  {  inAvail  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  8;  }  else  {  inAvail  +=  8;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2422	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  3;  }  else  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  3;  }  else  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  3;  }  else  {  inAvail  +=  4;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2423	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  4;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2424	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  6;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  6;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2425	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  inAvail  +=  4;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
2426	[BUG]  [BUGGY]  inPos  =(inPos  ==  1)?  0  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  ==  1)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  ==  1)?  0  :  inPos;	  inPos    =(inPos    >=    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	293	None	replace
2427	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
2428	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
2429	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
2430	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length  +  1;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length  +  1;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length  +  1;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail,    inPos);    }    	non-compiled	[CE]  ';'  expected	306	None	replace
2431	[BUG]  [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
2432	[BUG]  [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos++;  }	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
2433	[BUG]  [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  =  inPos;  }	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
2434	[BUG]  [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  inPos  +=  inAvail;  }	  inPos    =    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	132	None	replace
2435	[BUG]  [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64Char(modulus));  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64Char(modulus));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleBase64(inPos,  inAvail,  decodeBase64Char(modulus));	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
2436	[BUG]  [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail,  decodeBase64Char(modulus));  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  module.decodeBase64(inPos,  inAvail,  decodeBase64Char(modulus));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  module.decodeBase64(inPos,  inAvail,  decodeBase64Char(modulus));	  byte[]    in    =    decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	207	None	replace
2437	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  1xFF;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  1xFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  1xFF;	  int    b    =    in[inPos++]    &    0xFF;    	non-compiled	[CE]  ';'  expected	364	None	replace
2438	[BUG]  [BUGGY]  if(inPos  >=  2)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
2439	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
2440	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  Integer.MAX_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
2441	[BUG]  [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  Integer.MAX_VALUE)  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  Integer.MAX_VALUE)  {  inPos  +=  inAvail;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	251	None	replace
2442	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  4);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  4);  }	  DecodeBase64.decodeBase64(inPos,    inAvail    +    4);    	non-compiled	[CE]  ';'  expected	146	None	replace
2443	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2444	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2445	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2446	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decodeBase64(x,    inPos);    	non-compiled	[CE]  ';'  expected	281	None	replace
2447	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    8);    	non-compiled	[CE]  ';'  expected	323	None	replace
2448	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }	  decodeBase64(inPos,    inAvail,    8);    	non-compiled	[CE]  ';'  expected	323	None	replace
2449	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  8);  }  else  {  throw  new  IllegalStateException( " ");  }	  decodeBase64(inPos,    inAvail,    8);    	non-compiled	[CE]  ';'  expected	323	None	replace
2450	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
2451	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
2452	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
2453	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
2454	[BUG]  [BUGGY]  parseBase64(in,  inPos,  10);  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  10);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  10);	  decodeBase64(in,    inPos,    10);    	non-compiled	[CE]  ';'  expected	220	None	replace
2455	[BUG]  [BUGGY]  inPos  =(inPos  >=  2)?  0  :  inPos;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  >=  2)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  >=  2)?  0  :  inPos;	  inPos    =(inPos    <    <    2)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	111	None	replace
2456	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvail  +  1,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvail  +  1,  modulus);	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
2457	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  eof  =  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  eof    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	101	None	replace
2458	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
2459	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
2460	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
2461	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	376	None	replace
2462	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2463	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2464	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2465	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  inPos++;  }	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2466	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  0,  inAvail);  }  else  {  System.arraycopy(in,  inPos,  inPos,  inAvail);  }	  DecodeBase64.decode(in,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	319	None	replace
2467	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(in,  inPos,  1);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(in,  inPos,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(in,  inPos,  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
2468	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
2469	[BUG]  [BUGGY]  int  inAvail  =  decodeBase64(in,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  inAvail  =  decodeBase64(in,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  inAvail  =  decodeBase64(in,  inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
2470	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(in,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
2471	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	335	None	replace
2472	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2473	[BUG]  [BUGGY]  if(inPos  ==  PAD)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  PAD)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  PAD)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2474	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }	  if(inPos    ==    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2475	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  4);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  4);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  4);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	321	None	replace
2476	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  4);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  4);  }	  decodeBase64(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	321	None	replace
2477	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos  +  1);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.parseInt(inPos  +  1);  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.parseInt(inPos);    }    	non-compiled	[CE]  ';'  expected	117	None	replace
2478	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
2479	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
2480	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
2481	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	371	None	replace
2482	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64Input(inPos);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64Input(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64Input(inPos);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
2483	[BUG]  [BUGGY]  byte[]  in  =  super.decode(inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decode(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decode(inPos);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
2484	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64Instance(inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64Instance(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64Instance(inPos);	  byte[]    in    =    super.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	235	None	replace
2485	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeEmpty(inPos);  }  else  {  decodeEmpty(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeEmpty(inPos);  }  else  {  decodeEmpty(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeEmpty(inPos);  }  else  {  decodeEmpty(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	351	None	replace
2486	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2487	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos  +  1);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2488	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos++);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos++);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos++);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	345	None	replace
2489	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2490	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2491	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2492	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  =  inPos;  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2493	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2494	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2495	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    <    inAvail)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	396	None	replace
2496	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }	  inPos    =(inPos    +    1)%    7;    	non-compiled	[CE]  ';'  expected	129	None	replace
2497	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  else  {  decodeBase64(inPos  +  1);  }	  inPos    =(inPos    +    1)%    7;    	non-compiled	[CE]  ';'  expected	129	None	replace
2498	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  7;  }  else  {  decodeBase64(inPos);  }	  inPos    =(inPos    +    1)%    7;    	non-compiled	[CE]  ';'  expected	129	None	replace
2499	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
2500	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
2501	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
2502	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
2503	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID_PARSER);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID_PARSER);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID_PARSER);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	336	None	replace
2504	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  base64.getModule());  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  base64.getModule());  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  base64.getModule());	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
2505	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  base64.decodeBase64());  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  base64.decodeBase64());  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  base64.decodeBase64());	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
2506	[BUG]  [BUGGY]  b  =  decodeBase64(modulus,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(modulus,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(modulus,  inAvail);	  b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	390	None	replace
2507	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
2508	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
2509	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  0);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  0);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  0);	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
2510	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  else  {  decodeBase64(x,  inPos,  inAvail);  }	  DecodeBase64.decodeBase64(x,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	49	None	replace
2511	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
2512	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
2513	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail  +  2);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail  +  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos  +  1,  inAvail  +  2);	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	284	None	replace
2514	[BUG]  [BUGGY]  if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
2515	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
2516	[BUG]  [BUGGY]  if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
2517	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
2518	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	363	None	replace
2519	[BUG]  [BUGGY]  inPos  =(inPos  <  1)?  1  :  inPos;  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  1)?  1  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  1)?  1  :  inPos;	  inPos    =(inPos    <    <    1)?    1    :    inAvail;    	non-compiled	[CE]  ';'  expected	114	None	replace
2520	[BUG]  [BUGGY]  inPos  =(inPos  <  <  4)?  0  :  inPos  +  1;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  <  4)?  0  :  inPos  +  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  <  4)?  0  :  inPos  +  1;	  inPos    =(inPos    <    <    1)?    0    :    inPos    +    1;    	non-compiled	[CE]  ';'  expected	378	None	replace
2521	[BUG]  [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  0;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos++)?  DECODE_TABLE[inPos++]  :  0;	  byte    b    =    (inPos++)?    DECODE_TABLE[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	358	None	replace
2522	[BUG]  [BUGGY]  System.arraycopy(modulus,  0,  inPos,  4,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(modulus,  0,  inPos,  4,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(modulus,  0,  inPos,  4,  modulus);	  System.arraycopy(in,    0,    inPos,    3,    modulus);    	non-compiled	[CE]  ';'  expected	141	None	replace
2523	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  6);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inAvail  +  6);	  System.arraycopy(in,    0,    inPos,    4,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	182	None	replace
2524	[BUG]  [BUGGY]  byte  b  =  inAvail  +  10++;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  10++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  10++;	  byte    b    =    inAvail    +    7++;    	non-compiled	[CE]  ';'  expected	225	None	replace
2525	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos++);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos++);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos++);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
2526	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  1);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
2527	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	99	None	replace
2528	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  else  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
2529	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  7;  }  else  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  7;  }  else  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  7;  }  else  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	348	None	replace
2530	[BUG]  [BUGGY]  byte[]  in  =  base64DecodeBase64(modulus,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64DecodeBase64(modulus,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64DecodeBase64(modulus,  inPos,  inAvail);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
2531	[BUG]  [BUGGY]  byte[]  in  =  builder.base64DecodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  builder.base64DecodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  builder.base64DecodeBase64(inPos,  inAvail);	  byte[]    in    =    base64DecodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	291	None	replace
2532	[BUG]  [BUGGY]  parseBase64(inPos,  inAvailable,  3);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(inPos,  inAvailable,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(inPos,  inAvailable,  3);	  decodeBase64(inPos,    inAvailable,    3);    	non-compiled	[CE]  ';'  expected	243	None	replace
2533	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
2534	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
2535	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  decodeBase64(in,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  decodeBase64(in,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  decodeBase64(in,  inPos);  }	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
2536	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
2537	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos);  }  else  {  inPos++;  }	  DecodeBase64.decodeBase64(in,    inPos);    	non-compiled	[CE]  ';'  expected	144	None	replace
2538	[BUG]  [BUGGY]  if(!Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(!Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(!Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
2539	[BUG]  [BUGGY]  if(Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
2540	[BUG]  [BUGGY]  if(eof  ==  PAD)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(eof  ==  PAD)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(eof  ==  PAD)  {  eof  =  true;  }	  eof    =    true;    	non-compiled	[CE]  ';'  expected	55	None	replace
2541	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inAvail,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inAvail,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(x,  inAvail,  inPos);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    x);    	non-compiled	[CE]  ';'  expected	47	None	replace
2542	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  x);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(x,  inPos,  x);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(x,  inPos,  x);	  DecodeBase64.decodeBase64(inPos,    inAvail,    x);    	non-compiled	[CE]  ';'  expected	47	None	replace
2543	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2544	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2545	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2546	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2547	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  System.arraycopy(inPos,  0,  inPos);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
2548	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  4);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  4);	  DecodeBase64.decodeBase64(inPos,    x,    3);    	non-compiled	[CE]  ';'  expected	285	None	replace
2549	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2550	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2551	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2552	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2553	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  1,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  1,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  1,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2554	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2555	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  1,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  1,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  1,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	298	None	replace
2556	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  _decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  _decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  _decodeBase64(inPos,  inAvail);  }	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
2557	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  _decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	105	None	replace
2558	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  module,  inAvail,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  module,  inAvail,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  module,  inAvail,  inAvail);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	52	None	replace
2559	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  0;  }  else  {  decodeBase64(inPos);  }	  inPos    =    0;    	non-compiled	[CE]  ';'  expected	131	None	replace
2560	[BUG]  [BUGGY]  byte  b  =  data[6];  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  data[6];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  data[6];	  byte    b    =    data[0];    	non-compiled	[CE]  ';'  expected	301	None	replace
2561	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  x,  inAvailil);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  x,  inAvailil);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  x,  inAvailil);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
2562	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  -1);  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  -1);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  -1);	  ((    Base64)modulus).decode(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	63	None	replace
2563	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2564	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2565	[BUG]  [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.UNKNOWN)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2566	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    0,    inPos);    }    	non-compiled	[CE]  ';'  expected	339	None	replace
2567	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos,  -inAvail);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos,  -inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos,  -inAvail);	  ((    Base64)modulus).decode(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	233	None	replace
2568	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	98	None	replace
2569	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	98	None	replace
2570	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  else  {  decodeBase64(inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  else  {  decodeBase64(inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  module);  }  else  {  decodeBase64(inPos,  inAvail,  module);  }	  decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	98	None	replace
2571	[BUG]  [BUGGY]  if(inPos  ==  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
2572	[BUG]  [BUGGY]  inAvailable  =  decodeBase64(inPos,  inAvailable);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inAvailable  =  decodeBase64(inPos,  inAvailable);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inAvailable  =  decodeBase64(inPos,  inAvailable);	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
2573	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  8;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  8;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  8;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
2574	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
2575	[BUG]  [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  32);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  super.decodeBase64(inPos,  32);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  super.decodeBase64(inPos,  32);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
2576	[BUG]  [BUGGY]  byte[]  in  =  decodeBase64(inPos,  40);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  decodeBase64(inPos,  40);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  decodeBase64(inPos,  40);	  byte[]    in    =    decodeBase64(inPos,    32);    	non-compiled	[CE]  ';'  expected	160	None	replace
2577	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
2578	[BUG]  [BUGGY]  if(inPos  >=  1)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
2579	[BUG]  [BUGGY]  int  b  =  this.in[inPos++]  *  4;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  this.in[inPos++]  *  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  this.in[inPos++]  *  4;	  int    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	84	None	replace
2580	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
2581	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
2582	[BUG]  [BUGGY]  if(inPos  >=  2)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	245	None	replace
2583	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    break;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
2584	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modules  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modules  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modules  ==  Base64.DEFAULT)  {  eof  =  false;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    break;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
2585	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  9);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  9);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  9);	  DecodeBase64.decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	143	None	replace
2586	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
2587	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
2588	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
2589	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3,  inPos);  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
2590	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  in  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  in  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4,  in	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
2591	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1);  break;  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
2592	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
2593	[BUG]  [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos,  inAvail  +  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
2594	[BUG]  [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  +  1)  {  decodeBase64(inPos  +  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail    +    1);    break;    	non-compiled	[CE]  ';'  expected	296	None	replace
2595	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
2596	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
2597	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail,  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail,  1);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	149	None	replace
2598	[BUG]  [BUGGY]  inPos  =  inPos  +  3;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  3;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  3;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
2599	[BUG]  [BUGGY]  inPos  =  inPos  +  4;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  4;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  4;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
2600	[BUG]  [BUGGY]  inPos  =  inPos  +  7;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  7;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  7;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
2601	[BUG]  [BUGGY]  inPos  =  inPos  +  2;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  2;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  2;	  inPos    =    inAvail    +    6;    	non-compiled	[CE]  ';'  expected	355	None	replace
2602	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    inAvail);    	non-compiled	[CE]  ';'  expected	48	None	replace
2603	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    inAvail);    	non-compiled	[CE]  ';'  expected	48	None	replace
2604	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	148	None	replace
2605	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	148	None	replace
2606	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	148	None	replace
2607	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail,  PAD);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  DecodeBase64.decodeBase64(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	148	None	replace
2608	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  4);  }	  DecodeBase64.decodeBase64(inPos,    inPos,    4);    	non-compiled	[CE]  ';'  expected	387	None	replace
2609	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  _decodeBase64(inPos,    inAvail);    break;    	non-compiled	[CE]  ';'  expected	297	None	replace
2610	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  6);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  6);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  6);  }	  DecodeBase64.decodeBase64(inPos,    inAvail    +    6);    	non-compiled	[CE]  ';'  expected	147	None	replace
2611	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  3);  }	  DecodeBase64.decodeBase64(inPos,    inPos,    3);    	non-compiled	[CE]  ';'  expected	388	None	replace
2612	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  6;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  inPos  =  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  inPos  =  6;  }	  if(inPos    <    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	257	None	replace
2613	[BUG]  [BUGGY]  parseBase64(in,  inPos,  6);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(in,  inPos,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(in,  inPos,  6);	  decodeBase64(in,    inPos,    6);    	non-compiled	[CE]  ';'  expected	221	None	replace
2614	[BUG]  [BUGGY]  byte  b  =  inPos  +  data[inPos++].length;  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  data[inPos++].length;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  data[inPos++].length;	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
2615	[BUG]  [BUGGY]  byte  b  =  inPos  +  data[5++];  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  data[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  data[5++];	  byte    b    =    inAvail    +    data[inPos++];    	non-compiled	[CE]  ';'  expected	383	None	replace
2616	[BUG]  [BUGGY]  if(inPos  <  1)  {  inPos  +=  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  1)  {  inPos  +=  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  1)  {  inPos  +=  1;  }	  if(inPos    >=    0)    {    inPos    +=    1;    }    	non-compiled	[CE]  ';'  expected	253	None	replace
2617	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2618	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  1,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
2619	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
2620	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  inPos  =  inPos  +  1;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  inPos  =  inPos  +  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  inPos  =  inPos  +  1;  }	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
2621	[BUG]  [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  1,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  1,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  +  1)  {  inPos  =(inPos  +  1)%  4  +  1;  }  else  {  System.arraycopy(inPos  +  1,  inPos,  inPos  +  1,  inAvail  +  1);  }	  inPos    =(inPos    +    1)%    4    +    1;    	non-compiled	[CE]  ';'  expected	126	None	replace
2622	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
2623	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
2624	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(modulus,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(modulus,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(modulus,  0,  inPos,  3);  }	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
2625	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(modulus,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(modulus,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modulus);  }  else  {  System.arraycopy(modulus,  0,  inPos,  4);  }	  decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	97	None	replace
2626	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
2627	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1,  inAvail);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
2628	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inPos  1)  {  inPos  =(inPos  +  1)%  4;  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
2629	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
2630	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
2631	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos++,  3);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos++,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos++,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
2632	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos  +  3);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos  +  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos  +  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
2633	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	341	None	replace
2634	[BUG]  [BUGGY]  int  b  =(int)Math.floor(modulus,  4);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Math.floor(modulus,  4);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Math.floor(modulus,  4);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
2635	[BUG]  [BUGGY]  int  b  =(int)Modulus.floor(modulus);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =(int)Modulus.floor(modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =(int)Modulus.floor(modulus);	  int    b    =(int)Math.floor(modulus);    	non-compiled	[CE]  ';'  expected	392	None	replace
2636	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3  +  inAvail  +  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  3  +  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3  +  inAvail  +  1);	  System.arraycopy(in,    0,    inPos,    0,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	184	None	replace
2637	[BUG]  [BUGGY]  int  b  =  decodeBase64(modulus,  base64.getModule());  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(modulus,  base64.getModule());  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(modulus,  base64.getModule());	  int    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	389	None	replace
2638	[BUG]  [BUGGY]  if(inPos  >=  inAvail  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
2639	[BUG]  [BUGGY]  if(inPos  >=  inAvail  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  ||  inPos  >=  Integer.MIN_VALUE)  {  inPos  =  Integer.MIN_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
2640	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
2641	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modules  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modules  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modules  ==  Base64.DEFAULT)  {  eof  =  true;  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
2642	[BUG]  [BUGGY]  int  b  =  outPos[inAvail++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  outPos[inAvail++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  outPos[inAvail++];	  int    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	85	None	replace
2643	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos  +  6);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos  +  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos  +  6);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
2644	[BUG]  [BUGGY]  ((  Base64)modulus).decode(inPos  +  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decode(inPos  +  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decode(inPos  +  3);	  ((    Base64)modulus).decode(inPos);    	non-compiled	[CE]  ';'  expected	234	None	replace
2645	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2646	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2647	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2648	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos++;  }	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2649	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos  +=  inAvail;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos  +=  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  outPos);  }  else  {  inPos  +=  inAvail;  }	  DecodeBase64.decode(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	272	None	replace
2650	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
2651	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
2652	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
2653	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  8;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  8;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  8;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
2654	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  6;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  6;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  6;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	162	None	replace
2655	[BUG]  [BUGGY]  byte  b  =  this.in[inPos++]  &  3;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[inPos++]  &  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[inPos++]  &  3;	  byte    b    =    this.in[inPos++]    +    4;    	non-compiled	[CE]  ';'  expected	172	None	replace
2656	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  return;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  modulus);  }  else  {  return;  }	  decodeBase64(in,    inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	266	None	replace
2657	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inPos);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  1,  inPos);	  System.arraycopy(inAvail,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	275	None	replace
2658	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inPos);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inPos);	  System.arraycopy(inAvail,    0,    inPos,    1,    inAvail);    	non-compiled	[CE]  ';'  expected	275	None	replace
2659	[BUG]  [BUGGY]  inPos  =  in.length  -  10;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  in.length  -  10;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  in.length  -  10;	  inPos    =    in.length    -    5;    	non-compiled	[CE]  ';'  expected	42	None	replace
2660	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
2661	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
2662	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(x,  inPos,  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	386	None	replace
2663	[BUG]  [BUGGY]  parseBase64(inPos,  inAvail  +  1);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  parseBase64(inPos,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	parseBase64(inPos,  inAvail  +  1);	  decodeBase64(inPos,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	320	None	replace
2664	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos  +  1);  }	  inPos    =(inPos    +    1)%    2;    	non-compiled	[CE]  ';'  expected	124	None	replace
2665	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  inPos    =(inPos    +    1)%    2;    	non-compiled	[CE]  ';'  expected	124	None	replace
2666	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  2;  }  else  {  decodeBase64(inPos);  }	  inPos    =(inPos    +    1)%    2;    	non-compiled	[CE]  ';'  expected	124	None	replace
2667	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
2668	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
2669	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  0,  inAvail);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
2670	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  1,  inAvail);  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  1,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  1,  inAvail);	  DecodeBase64.decodeBase64(inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	54	None	replace
2671	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2672	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2673	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2674	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID_PARSER);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID_PARSER);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  INVALID_PARSER);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	334	None	replace
2675	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
2676	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  else  {  decodeBase64(inPos,  inAvailable,  module);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  else  {  decodeBase64(inPos,  inAvailable,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  else  {  decodeBase64(inPos,  inAvailable,  module);  }	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
2677	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvailable,  module);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvailable,    module);    	non-compiled	[CE]  ';'  expected	65	None	replace
2678	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  6;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  6;  }	  if(inPos    >=    inAvail)    {    inPos    =    6;    }    	non-compiled	[CE]  ';'  expected	399	None	replace
2679	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2680	[BUG]  [BUGGY]  if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvailable)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2681	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2682	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  outPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2683	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvailable)    {    decodeBase64(inPos,    inAvailable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
2684	[BUG]  [BUGGY]  int  b  =  inAvailable[0];  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvailable[0];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvailable[0];	  int    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
2685	[BUG]  [BUGGY]  int  b  =  decodeBase64(in);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  decodeBase64(in);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  decodeBase64(in);	  int    b    =    in[0];    	non-compiled	[CE]  ';'  expected	20	None	replace
2686	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2687	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2688	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  1,  inPos,  inAvail  +  1,  inPos);  return;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  1,  inPos,  inAvail  +  1,  inPos);  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  1,  inPos,  inAvail  +  1,  inPos);  return;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    return;    }    	non-compiled	[CE]  ';'  expected	307	None	replace
2689	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  PAD);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  PAD);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  inAvail,  PAD);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
2690	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos++,  inAvail);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos++,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos++,  inAvail);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
2691	[BUG]  [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  4);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(in,  inPos,  inAvail,  4);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(in,  inPos,  inAvail,  4);	  eof    =    decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	215	None	replace
2692	[BUG]  [BUGGY]  if(inPos  <  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
2693	[BUG]  [BUGGY]  if(inPos  ==  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
2694	[BUG]  [BUGGY]  if(inPos  <  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  if(inPos    ==    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4,    inPos);    }    	non-compiled	[CE]  ';'  expected	246	None	replace
2695	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  decodeBase64(inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2696	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  +=  inAvail;  }  else  {  decodeBase64(inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2697	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2698	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4,  inPos);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2699	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  inPos    +=    inAvail;    	non-compiled	[CE]  ';'  expected	1	None	replace
2700	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  9);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  9);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  9);	  DecodeBase64.decode(in,    inPos,    3);    	non-compiled	[CE]  ';'  expected	174	None	replace
2701	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
2702	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  in.length;  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  in.length;  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  +=  in.length;  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
2703	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inPos;  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inPos;  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inPos;  }  else  {  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
2704	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
2705	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  inPos  +=  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
2706	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  +=  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  inAvail;  }  else  {  inPos  +=  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	356	None	replace
2707	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  _decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  _decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  _decodeBase64(in,  inPos,  inAvail);  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
2708	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  _decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	218	None	replace
2709	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  6);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  -  6);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
2710	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  2);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(DECODE_TABLE.length  -  2);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(DECODE_TABLE.length  -  2);	  inPos    =    Integer.parseInt(DECODE_TABLE.length);    	non-compiled	[CE]  ';'  expected	135	None	replace
2711	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
2712	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
2713	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail,  1);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail,  1);  }	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
2714	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  0);  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  decodeBase64(inPos,    inAvail,    0);    	non-compiled	[CE]  ';'  expected	102	None	replace
2715	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	328	None	replace
2716	[BUG]  [BUGGY]  if(inPos  <  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	328	None	replace
2717	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  8,  inAvail  +  1);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  8,  inAvail  +  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  8,  inAvail  +  1);	  System.arraycopy(in,    0,    inPos,    3,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	140	None	replace
2718	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2719	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2720	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2721	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2722	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2723	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  2);  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  2);  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inAvail;  }  else  {  System.arraycopy(inPos,  0,  inPos,  2);  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	247	None	replace
2724	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2725	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2726	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  true;  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  true;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  true;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    true;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2727	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
2728	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	375	None	replace
2729	[BUG]  [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  6);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  eof  =  decodeBase64(inPos,  inAvailable,  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	eof  =  decodeBase64(inPos,  inAvailable,  6);	  eof    =    decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	67	None	replace
2730	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(modulus,  inPos,  inAvail);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(modulus,  inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(modulus,  inPos,  inAvail);	  byte[]    in    =    base64.decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	208	None	replace
2731	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  decodeBase64(inPos);  }	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
2732	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  _decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  _decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	310	None	replace
2733	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2734	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2735	[BUG]  [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  false;  }  else  if(modulus  ==  Base64.BASE64)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  false;  }  else  if(modulus  ==  Base64.BASE64)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.BASE64)  {  eof  =  false;  }  else  if(modulus  ==  Base64.BASE64)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2736	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  return;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  return;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus,  inPos,  inAvail);  return;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2737	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus);  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(modulus);  break;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2738	[BUG]  [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  false;  }  else  if(modulus  ==  Base64.VAR)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.VAR)  {  eof  =  false;  }  else  if(modulus  ==  Base64.VAR)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.VAR)  {  eof  =  false;  }  else  if(modulus  ==  Base64.VAR)  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2739	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  eof  =  false;  }  else  {  decodeBase64(modulus,  inPos,  inAvail);  break;  }	  eof    =    false;    	non-compiled	[CE]  ';'  expected	56	None	replace
2740	[BUG]  [BUGGY]  inPos  =(inPos  +  1)/  5;  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  1)/  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  1)/  5;	  inPos    =(inPos    +    1)%    5;    	non-compiled	[CE]  ';'  expected	127	None	replace
2741	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  6);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inAvail  +  6);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    +    2);    	non-compiled	[CE]  ';'  expected	277	None	replace
2742	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2743	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2744	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2745	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2746	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  null);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  null);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  null);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	25	None	replace
2747	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	354	None	replace
2748	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos);  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos);  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos);  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	354	None	replace
2749	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	354	None	replace
2750	[BUG]  [BUGGY]  byte  b  =  inAvail  +  this.decode[inPos++];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  this.decode[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  this.decode[inPos++];	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
2751	[BUG]  [BUGGY]  byte  b  =  this.decode[inPos++]  +(inAvail  +  1]);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.decode[inPos++]  +(inAvail  +  1]);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.decode[inPos++]  +(inAvail  +  1]);	  byte    b    =    this.decode[inPos++];    	non-compiled	[CE]  ';'  expected	241	None	replace
2752	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }	  decodeBase64(inPos,    inAvailable,    PAD);    	non-compiled	[CE]  ';'  expected	70	None	replace
2753	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvailable,    PAD);    	non-compiled	[CE]  ';'  expected	70	None	replace
2754	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  decodeBase64(inPos,    inAvailable,    PAD);    	non-compiled	[CE]  ';'  expected	70	None	replace
2755	[BUG]  [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
2756	[BUG]  [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  modulus);  break;  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
2757	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  else  {  System.arraycopy(modulus,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  else  {  System.arraycopy(modulus,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  else  {  System.arraycopy(modulus,  0,  inPos,  3);  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
2758	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  else  {  System.arraycopy(modulus,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  else  {  System.arraycopy(modulus,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  inAvail);  break;  }  else  {  System.arraycopy(modulus,  0,  inPos,  4);  }	  decodeBase64(inPos,    inAvail,    modulus);    break;    	non-compiled	[CE]  ';'  expected	29	None	replace
2759	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
2760	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module!=  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
2761	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
2762	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }	  if(modulus    ==    Base64.DEFAULT)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	295	None	replace
2763	[BUG]  [BUGGY]  byte[]  in  =  this.decodeBase64();  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.decodeBase64();  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.decodeBase64();	  byte[]    in    =    this.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	159	None	replace
2764	[BUG]  [BUGGY]  DecodeBase64.decode(inPos  +  3,  inAvail  +  3);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos  +  3,  inAvail  +  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos  +  3,  inAvail  +  3);	  DecodeBase64.decode(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	196	None	replace
2765	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
2766	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
2767	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
2768	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  3);  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  3);  }  else  {  System.arraycopy(inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  3);  }  else  {  System.arraycopy(inPos,  0,  inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    3);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
2769	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2770	[BUG]  [BUGGY]  if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2771	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2772	[BUG]  [BUGGY]  byte  b  =(inAvail  +  1)*  inPos++;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inAvail  +  1)*  inPos++;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inAvail  +  1)*  inPos++;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
2773	[BUG]  [BUGGY]  byte  b  =(inAvail  +  1)*  inPos;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inAvail  +  1)*  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inAvail  +  1)*  inPos;	  byte    b    =    inPos++;    	non-compiled	[CE]  ';'  expected	43	None	replace
2774	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4,  inPos);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
2775	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  3,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  3,  inPos);	  System.arraycopy(in,    0,    inAvail,    0,    inPos);    	non-compiled	[CE]  ';'  expected	186	None	replace
2776	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  4;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  inPos  +  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  inPos  +  4;  }	  if(inPos    >=    inAvail)    {    inPos    =    inPos    +    1;    }    	non-compiled	[CE]  ';'  expected	397	None	replace
2777	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  3);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvail  +  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvail  +  3);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
2778	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  x,  inAvail);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  x,  inAvail);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  x,  inAvail);	  ((    Base64)modulus).decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	231	None	replace
2779	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.VERSION_CODES[0])  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
2780	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.UNINITIALIZER)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.UNINITIALIZER)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.UNINITIALIZER)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
2781	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.UNINITIALIZED_COUNT)  {  eof  =  false;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.UNINITIALIZED_COUNT)  {  eof  =  false;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT  ||  module  ==  Base64.UNINITIALIZED_COUNT)  {  eof  =  false;  }	  if(modulus    ==    Base64.DEFAULT)    {    eof    =    false;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
2782	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  decodeBase64(inPos,  inAvail);  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
2783	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
2784	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos++;  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
2785	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  inPos  =  inPos;  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
2786	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  outPos);  }  else  {  decodeBase64(inPos,  inAvail);  }	  DecodeBase64.decodeBase64(inPos,    outPos);    	non-compiled	[CE]  ';'  expected	261	None	replace
2787	[BUG]  [BUGGY]  if(inPos  >=  inAvail  &&  inPos  <  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  &&  inPos  <  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  &&  inPos  <  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
2788	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
2789	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos++);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos++);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos++);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
2790	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  break;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
2791	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  1);  break;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  1);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  1);  break;  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
2792	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail  +  6);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail  +  6);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inPos,  inAvail  +  6);	  DecodeBase64.decodeBase64(inPos,    x,    inAvail    +    1);    	non-compiled	[CE]  ';'  expected	283	None	replace
2793	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  4  -  inPos);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  4  -  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  4  -  inPos);	  DecodeBase64.decode(in,    inPos,    4);    	non-compiled	[CE]  ';'  expected	173	None	replace
2794	[BUG]  [BUGGY]  if(inPos  >=  2)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
2795	[BUG]  [BUGGY]  if(inPos  >=  MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
2796	[BUG]  [BUGGY]  if(inPos  >=  inAvail  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail  ||  inPos  >=  Integer.MAX_VALUE)  {  inPos  =  Integer.MAX_VALUE;  }	  if(inPos    >=    inAvail)    {    inPos    =    Integer.MAX_VALUE;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
2797	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2798	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  inAvail;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2799	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2800	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  Integer.MAX_VALUE;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    inPos    =    inAvail;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	394	None	replace
2801	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  3;  }  else  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
2802	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  +  out[inPos++];  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  +  out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  +  out[inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
2803	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  +  [inPos++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  +  [inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  +  [inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
2804	[BUG]  [BUGGY]  byte  b  =  inPos  +  8  [inPos++];  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  8  [inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  8  [inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
2805	[BUG]  [BUGGY]  byte  b  =  inPos  +  4  [inPos++];  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  4  [inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  4  [inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
2806	[BUG]  [BUGGY]  byte  b  =  inPos  +  6  [inPos++];  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  6  [inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  6  [inPos++];	  byte    b    =    inPos    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	264	None	replace
2807	[BUG]  [BUGGY]  if(inPos  >=  2)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  2)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  2)  {  decodeBase64(inPos);  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
2808	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2809	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2810	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64(inPos+1);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64(inPos+inPos);    }    	non-compiled	[CE]  ';'  expected	350	None	replace
2811	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
2812	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
2813	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
2814	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  outPos);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
2815	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos  +  1,  inAvail);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
2816	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  null);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  null);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  null);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	338	None	replace
2817	[BUG]  [BUGGY]  inPos  =  8;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  8;	  inPos    =    4;    	non-compiled	[CE]  ';'  expected	136	None	replace
2818	[BUG]  [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  modules,  module);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decodeBase64(inPos,  inAvail,  modules,  module);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decodeBase64(inPos,  inAvail,  modules,  module);	  DecodeBase64.decodeBase64(inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	53	None	replace
2819	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
2820	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
2821	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
2822	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  6);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  6);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  6);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
2823	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  3);  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos,  inAvailil  +  3);	  ((    Base64)modulus).decodeBase64(inPos,    inAvailil);    	non-compiled	[CE]  ';'  expected	60	None	replace
2824	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  decodeBase64(inPos);  }	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
2825	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  inPos++;  }	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
2826	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)?  0  :  inPos;  }  else  {  inPos  =  inPos;  }	  inPos    =(inPos    +    1)?    0    :    inPos;    	non-compiled	[CE]  ';'  expected	110	None	replace
2827	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
2828	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos);  }	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
2829	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos);  }	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
2830	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)/  4;  }  else  {  decodeBase64(inPos,  inAvail);  }	  inPos    =(inPos    +    1)/    4;    	non-compiled	[CE]  ';'  expected	130	None	replace
2831	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
2832	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
2833	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  decodeBase64(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  decodeBase64(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  decodeBase64(in,  inPos,  3);  }	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
2834	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  System.arraycopy(in,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  System.arraycopy(in,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  System.arraycopy(in,  inPos,  4);  }	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
2835	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  2);  }  else  {  System.arraycopy(in,  inPos,  3);  }	  decodeBase64(in,    inPos,    2);    	non-compiled	[CE]  ';'  expected	219	None	replace
2836	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
2837	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos  +  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	373	None	replace
2838	[BUG]  [BUGGY]  int  b  =  data[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  &  0xff;	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
2839	[BUG]  [BUGGY]  int  b  =  data[inPos++]  &  0xFF;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  data[inPos++]  &  0xFF;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  data[inPos++]  &  0xFF;	  int    b    =    data[inPos++];    	non-compiled	[CE]  ';'  expected	198	None	replace
2840	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  6);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  6);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  6);  }	  inPos    =(inPos    +    1)%    6;    	non-compiled	[CE]  ';'  expected	123	None	replace
2841	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  6);  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  6);  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  6);  }  else  {  decodeBase64(inPos  +  1);  }	  inPos    =(inPos    +    1)%    6;    	non-compiled	[CE]  ';'  expected	123	None	replace
2842	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  6;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  6;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  6;  }  else  {  decodeBase64(inPos  +  1);  }	  inPos    =(inPos    +    1)%    6;    	non-compiled	[CE]  ';'  expected	123	None	replace
2843	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	312	None	replace
2844	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	312	None	replace
2845	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	312	None	replace
2846	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  8);  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  8);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  8);	  DecodeBase64.decode(inPos,    0);    	non-compiled	[CE]  ';'  expected	273	None	replace
2847	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2848	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2849	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	374	None	replace
2850	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  5);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  5);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  5);  }	  DecodeBase64.decodeBase64(inPos,    inAvail    +    5);    	non-compiled	[CE]  ';'  expected	262	None	replace
2851	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail,  module);  }	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2852	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  System.arraycopy(in,  inPos,  inAvail,  module);  }	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2853	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  decodeBase64(in,  inPos,  inAvail,  module);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  decodeBase64(in,  inPos,  inAvail,  module);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(in,  inPos,  inAvail,  module);  }  else  {  decodeBase64(in,  inPos,  inAvail,  module);  }	  decodeBase64(in,    inPos,    inAvail,    module);    	non-compiled	[CE]  ';'  expected	267	None	replace
2854	[BUG]  [BUGGY]  char  b  =  decodeBase64(inAvail++);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  decodeBase64(inAvail++);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  decodeBase64(inAvail++);	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
2855	[BUG]  [BUGGY]  char  b  =  in[4];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  char  b  =  in[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =  in[4];	  char    b    =    in[inAvail++];    	non-compiled	[CE]  ';'  expected	204	None	replace
2856	[BUG]  [BUGGY]  inPos  =  Integer.parseInt(inPos++);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  Integer.parseInt(inPos++);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  Integer.parseInt(inPos++);	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
2857	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos  =  Integer.parseInt(inPos);  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
2858	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
2859	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos++;  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos++;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  inPos++;  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
2860	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  Integer.parseInt(inPos);  }  else  {  decodeBase64(inPos);  }	  inPos    =    Integer.parseInt(inPos);    	non-compiled	[CE]  ';'  expected	139	None	replace
2861	[BUG]  [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  2)?  this.in[inPos++]  :  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  2)?  this.in[inPos++]  :  inPos;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
2862	[BUG]  [BUGGY]  byte  b  =(inPos  <  1  ||  inPos  >  this.in[inPos++]  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1  ||  inPos  >  this.in[inPos++]  :  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1  ||  inPos  >  this.in[inPos++]  :  inPos;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
2863	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inavail;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inavail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inavail;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inPos;    	non-compiled	[CE]  ';'  expected	331	None	replace
2864	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
2865	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
2866	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
2867	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
2868	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  1,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  1,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  1,  inPos,  inAvail  +  1,  inPos);  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    inPos);    }    	non-compiled	[CE]  ';'  expected	305	None	replace
2869	[BUG]  [BUGGY]  inPos  =(inPos  <  1)?  0  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  1)?  0  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  1)?  0  :  inPos;	  inPos    =(inPos    <    <    1)?    0    :    inAvail;    	non-compiled	[CE]  ';'  expected	106	None	replace
2870	[BUG]  [BUGGY]  inPos  =(inPos  <  0)?  0  :  inAvail;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  <  0)?  0  :  inAvail;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  <  0)?  0  :  inAvail;	  inPos    =(inPos    <    <    1)?    0    :    inAvail;    	non-compiled	[CE]  ';'  expected	106	None	replace
2871	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  inPos  +=  6;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  inPos  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  inPos  +=  6;  }	  if(inPos    >=    inAvail)    {    inPos    +=    6;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
2872	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2873	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2874	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  3);  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2875	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  PAD);  break;  }  else  {  System.arraycopy(inPos,  inPos,  4);  }	  decodeBase64(inPos,    inAvail,    PAD);    break;    	non-compiled	[CE]  ';'  expected	26	None	replace
2876	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos);  }	  inPos    =(inPos    +    1)%    3;    	non-compiled	[CE]  ';'  expected	125	None	replace
2877	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos  +  1);  }	  inPos    =(inPos    +    1)%    3;    	non-compiled	[CE]  ';'  expected	125	None	replace
2878	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  inPos    =(inPos    +    1)%    3;    	non-compiled	[CE]  ';'  expected	125	None	replace
2879	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1)%  3;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  inPos    =(inPos    +    1)%    3;    	non-compiled	[CE]  ';'  expected	125	None	replace
2880	[BUG]  [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ((  Base64)modulus).decodeBase64(inPos  +  3);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  Base64)modulus).decodeBase64(inPos  +  3);	  ((    Base64)modulus).decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	232	None	replace
2881	[BUG]  [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  7);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(inPos,  inAvail,  7);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(inPos,  inAvail,  7);	  DecodeBase64.decode(inPos,    inAvail,    4);    	non-compiled	[CE]  ';'  expected	194	None	replace
2882	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
2883	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
2884	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
2885	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
2886	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos++,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
2887	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(in,    inPos,    inAvail);    }    else    {    decodeBase64(in,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	337	None	replace
2888	[BUG]  [BUGGY]  int  inPos  =  decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  inPos  =  decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  inPos  =  decodeBase64(inPos,  inAvail);	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    return;    }    	non-compiled	[CE]  ';'  expected	372	None	replace
2889	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  1);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
2890	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  DecodeBase64.decodeBase64(x,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
2891	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  3);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
2892	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  4);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(x,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(x,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	385	None	replace
2893	[BUG]  [BUGGY]  byte  b  =  decodeBase64(inPos++]);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  decodeBase64(inPos++]);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  decodeBase64(inPos++]);	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
2894	[BUG]  [BUGGY]  byte  b  =  inAvailable[4];  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvailable[4];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvailable[4];	  byte    b    =    inAvailable[inPos++];    	non-compiled	[CE]  ';'  expected	384	None	replace
2895	[BUG]  [BUGGY]  int  b  =  inAvail[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail[inPos++]  &  0xff;	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
2896	[BUG]  [BUGGY]  int  b  =  inAvail[inPos++]  -  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  inAvail[inPos++]  -  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  inAvail[inPos++]  -  1;	  int    b    =    inAvail[inPos++];    	non-compiled	[CE]  ';'  expected	227	None	replace
2897	[BUG]  [BUGGY]  byte  b  =  this.data[inPos++]  +  inAvail;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.data[inPos++]  +  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.data[inPos++]  +  inAvail;	  byte    b    =    this.data[inPos++];    	non-compiled	[CE]  ';'  expected	199	None	replace
2898	[BUG]  [BUGGY]  inPos  =  inPos  +  8;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  8;	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
2899	[BUG]  [BUGGY]  inPos  =  inPos  +  5;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inPos  +  5;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inPos  +  5;	  inPos    =    inAvail    +    in.length;    	non-compiled	[CE]  ';'  expected	40	None	replace
2900	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[modulus++];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[modulus++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[modulus++];	  byte    b    =    DECODE_TABLE[inAvailil++];    	non-compiled	[CE]  ';'  expected	76	None	replace
2901	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2902	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  0;  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2903	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2904	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2905	[BUG]  [BUGGY]  int  inAvail  =  DecodeBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  inAvail  =  DecodeBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  inAvail  =  DecodeBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2906	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decodeBase64(inPos,  inPos);  }  else  {  inPos  =  1;  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2907	[BUG]  [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  ||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	||  inPos  >=  0)  {  DecodeBase64.decodeBase64(inPos,  inPos);	  if(inPos    >=    inAvail)    {    DecodeBase64.decodeBase64(inPos,    inAvail);    }    else    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	377	None	replace
2908	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  6;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  6;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  6;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
2909	[BUG]  [BUGGY]  if(inPos  ==  0)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  inAvail  +=  inPos;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
2910	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inAvail  +=  4;  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inAvail  +=  4;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inAvail  +=  4;  }	  if(inPos    >=    0)    {    inAvail    +=    inPos;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
2911	[BUG]  [BUGGY]  int  b  =  out[inPos++]  &  ';';  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  out[inPos++]  &  ';';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  out[inPos++]  &  ';';	  int    b    =    out[inPos++];    	non-compiled	[CE]  ';'  expected	44	None	replace
2912	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
2913	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
2914	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail);  }	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
2915	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  decodeBase64(in,  inPos,  inAvail  +  1);  }	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
2916	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  return;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(in,  inPos,  inAvail);  }  else  {  return;  }	  DecodeBase64.decodeBase64(in,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	50	None	replace
2917	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  in.length;  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  +=  in.length;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  +=  in.length;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    	non-compiled	[CE]  ';'  expected	304	None	replace
2918	[BUG]  [BUGGY]  DecodeBase64.decode(in,  inPos,  4,  inAvail);  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  DecodeBase64.decode(in,  inPos,  4,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	DecodeBase64.decode(in,  inPos,  4,  inAvail);	  DecodeBase64.decode(in,    inPos,    0,    inAvail);    	non-compiled	[CE]  ';'  expected	178	None	replace
2919	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inPos  -  1);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  1,  inPos  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  1,  inPos  -  1);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	276	None	replace
2920	[BUG]  [BUGGY]  System.arraycopy(in,  0,  inPos,  4  -  1);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(in,  0,  inPos,  4  -  1);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(in,  0,  inPos,  4  -  1);	  System.arraycopy(in,    0,    inPos,    1,    inAvail    -    1);    	non-compiled	[CE]  ';'  expected	276	None	replace
2921	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
2922	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  3);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  3);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(inPos,  inAvail,  3);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	212	None	replace
2923	[BUG]  [BUGGY]  inPos  =(inPos  +  2)%  8;  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  inPos  =(inPos  +  2)%  8;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =(inPos  +  2)%  8;	  inPos    =(inPos    +    1)%    8;    	non-compiled	[CE]  ';'  expected	128	None	replace
2924	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2925	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2926	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2927	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2928	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2929	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	370	None	replace
2930	[BUG]  [BUGGY]  byte  b  =  this.in[2];  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  this.in[2];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  this.in[2];	  byte    b    =    this.in[0];    	non-compiled	[CE]  ';'  expected	18	None	replace
2931	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2932	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2933	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2934	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2935	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  3);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2936	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  4);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    4);    }    	non-compiled	[CE]  ';'  expected	167	None	replace
2937	[BUG]  [BUGGY]  int  b  =  in[inPos++]  &  ':';  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  in[inPos++]  &  ':';  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  in[inPos++]  &  ':';	  int    b    =    in[inPos++]    &    ';';    	non-compiled	[CE]  ';'  expected	366	None	replace
2938	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }	  DecodeBase64.decode(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	192	None	replace
2939	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decode(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	192	None	replace
2940	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inAvail,  PAD);  }  else  {  System.arraycopy(inPos,  inPos,  0,  inPos);  }	  DecodeBase64.decode(inPos,    inAvail,    PAD);    	non-compiled	[CE]  ';'  expected	192	None	replace
2941	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos,  PAD);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos,  PAD);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos,  PAD);  }	  DecodeBase64.decode(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	318	None	replace
2942	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(in,  inPos,  PAD);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decode(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	318	None	replace
2943	[BUG]  [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.UNKNOWN)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2944	[BUG]  [BUGGY]  if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  modulus);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2945	[BUG]  [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.NONE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2946	[BUG]  [BUGGY]  if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.WRITE)  {  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail    +    1,    modulus);    }    	non-compiled	[CE]  ';'  expected	103	None	replace
2947	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
2948	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
2949	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	100	None	replace
2950	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++]  &  0xff;	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
2951	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  &  1;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  &  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++]  &  1;	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
2952	[BUG]  [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  +  3;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  b  =  DECODE_TABLE[inPos++]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	int  b  =  DECODE_TABLE[inPos++]  +  3;	  int    b    =    DECODE_TABLE[inPos++];    	non-compiled	[CE]  ';'  expected	74	None	replace
2953	[BUG]  [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  module);  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  module);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.UNKNOWN)  {  decodeBase64(inPos,  inAvail,  module);  break;  }	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
2954	[BUG]  [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modules);  break;  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modules);  break;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.DEFAULT)  {  decodeBase64(inPos,  inAvail,  modules);  break;  }	  decodeBase64(inPos,    inAvail,    module);    break;    	non-compiled	[CE]  ';'  expected	28	None	replace
2955	[BUG]  [BUGGY]  byte[]  in  =  moduleDecodeBase64(inPos,  inAvail,  modulus);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  moduleDecodeBase64(inPos,  inAvail,  modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  moduleDecodeBase64(inPos,  inAvail,  modulus);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
2956	[BUG]  [BUGGY]  byte[]  in  =  modulus.decodeBase64(inPos,  inAvail);  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  modulus.decodeBase64(inPos,  inAvail);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  modulus.decodeBase64(inPos,  inAvail);	  byte[]    in    =    decodeBase64(inPos,    inAvail,    modulus);    	non-compiled	[CE]  ';'  expected	209	None	replace
2957	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos);  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
2958	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail  +  1,  inPos);  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
2959	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  inPos;  }  else  {  decodeBase64(inPos,  inAvail);  }	  inPos    =    inPos;    	non-compiled	[CE]  ';'  expected	115	None	replace
2960	[BUG]  [BUGGY]  byte[]  in  =  this.base64DecodeBase64(inPos);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  this.base64DecodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  this.base64DecodeBase64(inPos);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
2961	[BUG]  [BUGGY]  byte[]  in  =  builder.base64DecodeBase64(inPos);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  builder.base64DecodeBase64(inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  builder.base64DecodeBase64(inPos);	  byte[]    in    =    base64DecodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	236	None	replace
2962	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
2963	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
2964	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  decodeBase64(in,  inPos,  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  decodeBase64(in,  inPos,  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  decodeBase64(in,  inPos,  1);  }	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
2965	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  decodeBase64(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  decodeBase64(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  decodeBase64(in,  inPos,  3);  }	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
2966	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  0);  }  else  {  System.arraycopy(in,  inPos,  3);  }	  decodeBase64(in,    inPos,    0);    	non-compiled	[CE]  ';'  expected	216	None	replace
2967	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2968	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2969	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =(inPos  +  1)%  4;  }  else  {  decodeBase64(inPos,  inAvail  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    else    {    decodeBase64(inPos,    inAvail    +    1);    }    	non-compiled	[CE]  ';'  expected	326	None	replace
2970	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2971	[BUG]  [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2972	[BUG]  [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2973	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2974	[BUG]  [BUGGY]  if(inPos  >=  1)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2975	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  =  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2976	[BUG]  [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  +=  inPos;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  in.length)  {  inPos  =  in.length;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  inPos  +=  inPos;  }	  if(inPos    >=    in.length)    {    inPos    =    in.length;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	308	None	replace
2977	[BUG]  [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2,  inPos);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(inAvail,  0,  inPos,  2,  inPos);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	System.arraycopy(inAvail,  0,  inPos,  2,  inPos);	  System.arraycopy(inAvail,    0,    inPos,    2,    inAvail);    	non-compiled	[CE]  ';'  expected	274	None	replace
2978	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  [CE]  ';'  expected  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
2979	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  else  {  decodeBase64(inPos,  inAvailable,  0);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  else  {  decodeBase64(inPos,  inAvailable,  0);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  else  {  decodeBase64(inPos,  inAvailable,  0);  }	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
2980	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  decodeBase64(inPos,  inAvailable,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvailable,    0);    	non-compiled	[CE]  ';'  expected	71	None	replace
2981	[BUG]  [BUGGY]  if(Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(Modifier.isStatic(Modifier.PRIVATE))  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
2982	[BUG]  [BUGGY]  if(';'  ==  PAD)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(';'  ==  PAD)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(';'  ==  PAD)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
2983	[BUG]  [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  true;  break;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(modulus  ==  Base64.BASE64)  {  eof  =  true;  break;  }  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(modulus  ==  Base64.BASE64)  {  eof  =  true;  break;  }	  eof    =    true;    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
2984	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  &  0xff;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  &  0xff;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  &  0xff;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
2985	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  *  inAvail;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[inPos++]  *  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[inPos++]  *  inAvail;	  byte    b    =    DECODE_TABLE[inPos++]    +    inAvail;    	non-compiled	[CE]  ';'  expected	359	None	replace
2986	[BUG]  [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos  +  1)  {  inPos  =(inPos  +  1);  }	  if(inPos    >=    inPos    +    1)    {    inPos    =(inPos    +    1)%    4;    }    	non-compiled	[CE]  ';'  expected	324	None	replace
2987	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64.getModule());  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64.getModule());  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  base64.getModule());	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
2988	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  Base64.DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  Base64.DEFAULT_VERSION);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  Base64.DEFAULT_VERSION);	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
2989	[BUG]  [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64.decodeBase64());  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  byte[]  b  =  decodeBase64(modulus,  base64.decodeBase64());  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  b  =  decodeBase64(modulus,  base64.decodeBase64());	  byte[]    b    =    decodeBase64(modulus);    	non-compiled	[CE]  ';'  expected	393	None	replace
2990	[BUG]  [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
2991	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
2992	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos);  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	352	None	replace
2993	[BUG]  [BUGGY]  byte[]  in  =  base64.decodeBase64(modulus);  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte[]  in  =  base64.decodeBase64(modulus);  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte[]  in  =  base64.decodeBase64(modulus);	  byte[]    in    =    base64.decodeBase64(inPos);    	non-compiled	[CE]  ';'  expected	158	None	replace
2994	[BUG]  [BUGGY]  byte  b  =  in[0]  +  3;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  in[0]  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  in[0]  +  3;	  byte    b    =    in[0]    +    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
2995	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  3);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decodeBase64(inPos,  inAvail  +  3);  }	  DecodeBase64.decodeBase64(inPos,    inAvail    +    3);    	non-compiled	[CE]  ';'  expected	145	None	replace
2996	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  Integer.MIN_VALUE;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inPos  +=  Integer.MIN_VALUE;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inPos  +=  Integer.MIN_VALUE;  }	  if(inPos    >=    0)    {    inPos    +=    Integer.MIN_VALUE;    }    	non-compiled	[CE]  ';'  expected	254	None	replace
2997	[BUG]  [BUGGY]  inPos  +=  inPos;  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  inPos  +=  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  +=  inPos;	  if(inPos    <    inAvail)    {    inPos    +=    inAvail;    }    	non-compiled	[CE]  ';'  expected	252	None	replace
2998	[BUG]  [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES));	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
2999	[BUG]  [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)?  inPos  +  inPos  :  inPos;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)?  inPos  +  inPos  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)?  inPos  +  inPos  :  inPos;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
3000	[BUG]  [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES));	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
3001	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  decodeBase64();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
3002	[BUG]  [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_NULL_VALUE)&&  isEnabled(Feature.QUOTE_NULL_VALUE));  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ';'  expected  =  isEnabled(Feature.QUOTE_NULL_VALUE)&&  isEnabled(Feature.QUOTE_NULL_VALUE));  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	';'  expected  =  isEnabled(Feature.QUOTE_NULL_VALUE)&&  isEnabled(Feature.QUOTE_NULL_VALUE));	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decodeBase64();    }    	non-compiled	[CE]  ';'  expected	349	None	replace
3003	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  DecodeBase64.decode(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
3004	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
3005	[BUG]  [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  DecodeBase64.decode(inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
3006	[BUG]  [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  DecodeBase64.decode(inPos,  inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    inAvail)    {    DecodeBase64.decode(inPos,    inAvail);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	346	None	replace
3007	[BUG]  [BUGGY]  byte  b  =(inPos  <  inPos)?  this.in[inPos++]  :  inAvail;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  inPos)?  this.in[inPos++]  :  inAvail;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  inPos)?  this.in[inPos++]  :  inAvail;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
3008	[BUG]  [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  0;  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  this.inPos)?  this.in[inPos++]  :  0;	  byte    b    =(inPos    <    this.inPos)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	330	None	replace
3009	[BUG]  [BUGGY]  if(inPos  ==  PAD)  {  inPos  =  inPos;  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  PAD)  {  inPos  =  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  PAD)  {  inPos  =  inPos;  }	  if(inPos    ==    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	256	None	replace
3010	[BUG]  [BUGGY]  if(inPos  ==  1)  {  inPos  =  1;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  1)  {  inPos  =  1;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  1)  {  inPos  =  1;  }	  if(inPos    ==    inAvail)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	256	None	replace
3011	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  }	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
3012	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  DecodeBase64.decodeBase64(inPos,  inPos,  inAvail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DecodeBase64.decodeBase64(inPos,    inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	282	None	replace
3013	[BUG]  [BUGGY]  byte  b  =  inAvail  +  this.out[inPos++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  this.out[inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  this.out[inPos++];	  byte    b    =    this.out[inPos++];    	non-compiled	[CE]  ';'  expected	45	None	replace
3014	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  3);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  3);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  3);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
3015	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  3);  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inAvail,  3);  }	  decodeBase64(inPos,    inAvail,    3);    	non-compiled	[CE]  ';'  expected	322	None	replace
3016	[BUG]  [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  0)  {  inPos  =  inPos;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
3017	[BUG]  [BUGGY]  if(inPos  ==  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  0)  {  decodeBase64(inPos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    >=    0)    {    decodeBase64(inPos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	313	None	replace
3018	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  inAvail  +  1;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
3019	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  0;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  this.in[inPos++]  :  0;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  this.in[inPos++]  :  0;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    inAvail;    	non-compiled	[CE]  ';'  expected	332	None	replace
3020	[BUG]  [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  1,  modulus);  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  b  =  decodeBase64(inPos,  inAvail  +  1,  modulus);  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	b  =  decodeBase64(inPos,  inAvail  +  1,  modulus);	  b    =    decodeBase64(inPos,    inAvail);    	non-compiled	[CE]  ';'  expected	391	None	replace
3021	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  _decodeBase64(inPos,  inAvailable);  }  [CE]  ';'  expected  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  _decodeBase64(inPos,  inAvailable);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  _decodeBase64(inPos,  inAvailable);  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
3022	[BUG]  [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvailable)  {  _decodeBase64(inPos,  inAvailable);  }  else  {  throw  new  IllegalStateException( " ");  }	  _decodeBase64(inPos,    inAvailable);    	non-compiled	[CE]  ';'  expected	72	None	replace
3023	[BUG]  [BUGGY]  if(inPos  >=  4)  {  inPos  =  0;  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  4)  {  inPos  =  0;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  4)  {  inPos  =  0;  }	  if(inPos    >=    0)    {    inPos    =    0;    }    	non-compiled	[CE]  ';'  expected	255	None	replace
3024	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  System.arraycopy(in,  inPos,  4);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  System.arraycopy(in,  inPos,  4);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  System.arraycopy(in,  inPos,  4);  }	  decodeBase64(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	268	None	replace
3025	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  System.arraycopy(in,  inPos,  3);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  System.arraycopy(in,  inPos,  3);  }	  decodeBase64(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	268	None	replace
3026	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  return;  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  return;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(in,  inPos,  PAD);  }  else  {  return;  }	  decodeBase64(in,    inPos,    PAD);    	non-compiled	[CE]  ';'  expected	268	None	replace
3027	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[5++];  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[5++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[5++];	  byte    b    =    DECODE_TABLE[inAvail++];    	non-compiled	[CE]  ';'  expected	202	None	replace
3028	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  decodeBase64(inPos,  inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos,    inAvail);    }    else    {    System.arraycopy(inPos,    0,    inPos,    inAvail);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
3029	[BUG]  [BUGGY]  ((  byte[])inPos)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
3030	[BUG]  [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inAvail)&&(inPos  >=  0))  {  inAvail  +=  inPos;  }  else  {  decode  =  Base64.getDefault();  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
3031	[BUG]  [BUGGY]  ((  byte[])inPos)?  inPos  :  inPos;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ((  byte[])inPos)?  inPos  :  inPos;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	((  byte[])inPos)?  inPos  :  inPos;	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    decode    =    Base64.getDefault();    }    	non-compiled	[CE]  ';'  expected	315	None	replace
3032	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  +  1;  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  +  1;	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
3033	[BUG]  [BUGGY]  byte  b  =  inAvail  +  inPos  +  1;  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inAvail  +  inPos  +  1;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inAvail  +  inPos  +  1;	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
3034	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  [inPos++];  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  [inPos++];  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  [inPos++];	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
3035	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  +  4;  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  +  4;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  +  4;	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
3036	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  +  6;  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  +  6;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  +  6;	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
3037	[BUG]  [BUGGY]  byte  b  =  inPos  +  inAvail  +  3;  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  inPos  +  inAvail  +  3;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  inPos  +  inAvail  +  3;	  byte    b    =    inAvail    +    out[inPos++];    	non-compiled	[CE]  ';'  expected	263	None	replace
3038	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inAvail;  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inPos  =  inAvail;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inPos  =  inAvail;  }	  if(inPos    >=    PAD)    {    inPos    =    inPos;    }    	non-compiled	[CE]  ';'  expected	400	None	replace
3039	[BUG]  [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	char  b  =(inPos  <  1)?  this.in[inPos++]  :  inPos;	  char    b    =    this.in[inPos++];    	non-compiled	[CE]  ';'  expected	170	None	replace
3040	[BUG]  [BUGGY]  inPos  =  inAvailable  -  1;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  inPos  =  inAvailable  -  1;  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	inPos  =  inAvailable  -  1;	  inPos    =    in.length    -    1;    	non-compiled	[CE]  ';'  expected	36	None	replace
3041	[BUG]  [BUGGY]  byte  b  =  DECODE_TABLE[0].length;  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =  DECODE_TABLE[0].length;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =  DECODE_TABLE[0].length;	  byte    b    =    DECODE_TABLE[0];    	non-compiled	[CE]  ';'  expected	16	None	replace
3042	[BUG]  [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  Integer.MAX_VALUE;  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  byte  b  =(inPos  <  1)?  inPos[inPos++]  :  Integer.MAX_VALUE;  [BUGGY]      if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	byte  b  =(inPos  <  1)?  inPos[inPos++]  :  Integer.MAX_VALUE;	  byte    b    =(inPos    <    1)?    this.in[inPos++]    :    Integer.MAX_VALUE;    	non-compiled	[CE]  ';'  expected	237	None	replace
3043	[BUG]  [BUGGY]  if(inPos  <  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  0)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
3044	[BUG]  [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  ==  inAvail)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
3045	[BUG]  [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  inAvail)  {  decodeBase64(inPos,  inPos);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
3046	[BUG]  [BUGGY]  if(inPos  <  1)  {  decodeBase64(inPos,  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  1)  {  decodeBase64(inPos,  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  1)  {  decodeBase64(inPos,  1);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
3047	[BUG]  [BUGGY]  if(inPos  <  1)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  <  1)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  <  1)  {  decodeBase64(inPos,  inAvail);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(inPos    <    inAvail)    {    decodeBase64(inPos,    inAvail);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	27	None	replace
3048	[BUG]  [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inPos)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
3049	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
3050	[BUG]  [BUGGY]  if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  [CE]  ';'  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  PAD)  {  inAvail  +=  inPos;  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
3051	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  4;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
3052	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [CE]  ';'  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  inAvail  +=  6;  }  else  {  System.arraycopy(inPos,  0,  inPos,  inPos);  }	  if(inPos    >=    inAvail)    {    inAvail    +=    inPos;    }    else    {    System.arraycopy(inPos,    0,    inPos,    inPos);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
3053	[BUG]  [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  inAvail)  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
3054	[BUG]  [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }  [BUGGY]      byte  b  =  in[inPos++];  if  (b  ==  PAD)  {  eof  =  true;  break;  }  else  {  if  (b  >=  0  &&  b  <  DECODE_TABLE.length)  {  int  result  =  DECODE_TABLE[b];  if  (result  >=  0)  {  modulus  =  (++modulus)  %  4;  x  =  (x  <<  6)  +  result;  [CLASS]  Base64  [METHOD]  decode  [RETURN_TYPE]  void  byte[]  in  int  inPos  int  inAvail  	projects/Codec5/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	561	561	2	replace	if(inPos  >=  1)  {  decodeBase64(inPos);  }  else  {  System.arraycopy(inPos,  0,  inPos  +  1,  inAvail);  }	  if(inPos    >=    inAvail)    {    decodeBase64(inPos);    }    else    {    System.arraycopy(inPos,    0,    inPos    +    1,    inAvail);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
