bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  removeUnreferencedFunctionArgs(fnScope,  scope);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionArgs(fnScope,  scope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionArgs(fnScope,  scope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
2	[BUG]  [BUGGY]  removeUnreferencedFunctionScopes(fnScope);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionScopes(fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionScopes(fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
3	[BUG]  [BUGGY]  removeUnreferencedFunctionScope(fnScope);  [CE]  [FE]        AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionScope(fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionScope(fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
4	[BUG]  [BUGGY]  removeUnreferencedFunctionArgs(fnScope,  toReplaceWithZero);  [CE]  [FE]          AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionArgs(fnScope,  toReplaceWithZero);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionArgs(fnScope,  toReplaceWithZero);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
5	[BUG]  [BUGGY]  removeUnreferencedFunctionArgs(fnScope,  fnScope);  [CE]  [FE]            AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionArgs(fnScope,  fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionArgs(fnScope,  fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
6	[BUG]  [BUGGY]  removeUnreferencedScope(fnScope);  [CE]  [FE]              AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedScope(fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedScope(fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
7	[BUG]  [BUGGY]    [CE]  [FE]                AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	  	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
8	[BUG]  [BUGGY]  removeUnreferencedFunctions(fnScope);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctions(fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctions(fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
9	[BUG]  [BUGGY]  removeUnreferencedFunctionAssigns(fnScope);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionAssigns(fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionAssigns(fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
10	[BUG]  [BUGGY]  removeUnreferencedFunctionVars(fnScope);  [CE]  [FE]        AssertionFailedError  [CONTEXT]  Scope  scope  =  new  SyntacticScopeCreator(compiler).createScope(root,  null);  traverseNode(root,  null,  scope);  if  (removeGlobals)  {  collectMaybeUnreferencedVars(scope);  }  interpretAssigns();  removeUnreferencedVars();  for  (Scope  fnScope  :  allFunctionScopes)  {  [BUGGY]  removeUnreferencedFunctionVars(fnScope);  [BUGGY]  }  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  traverseAndRemoveUnusedReferences  [RETURN_TYPE]  void  Node  root  [VARIABLES]  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  modifyCallSites  preserveFunctionExpressionNames  removeGlobals  Set  referenced  Scope  fnScope  scope  CodingConvention  codingConvention  Node  assignNode  externs  nameNode  node  root  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  SimpleDefinitionFinder  defFinder  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.291111254869791	179	179	5	replace	removeUnreferencedFunctionVars(fnScope);	removeUnreferencedFunctionArgs(fnScope);  	non-compiled	[CE]  	33	None	replace
