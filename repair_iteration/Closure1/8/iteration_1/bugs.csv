bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  assignedToUnknownValue  =  false;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =  false;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =  false;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
2	[BUG]  [BUGGY]  assignedToUnknownValue  =  null;  [CE]  [FE]      AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =  null;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =  null;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
3	[BUG]  [BUGGY]  assignmentToUnknownValue  =  false;  [CE]  [FE]        AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignmentToUnknownValue  =  false;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignmentToUnknownValue  =  false;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
4	[BUG]  [BUGGY]  assignToUnknownValue  =  false;  [CE]  [FE]          AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignToUnknownValue  =  false;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignToUnknownValue  =  false;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
5	[BUG]  [BUGGY]  assignmentToUnknownValue  =  null;  [CE]  [FE]            AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignmentToUnknownValue  =  null;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignmentToUnknownValue  =  null;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  assignedToUnknownValue  =  0;  [CE]  [FE]              AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =  0;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =  0;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
7	[BUG]  [BUGGY]  assignedToUnknownValue  = " ";  [CE]  [FE]                AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  = " ";  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  = " ";	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]    [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	  	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
9	[BUG]  [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value,  false);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value,  false);  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value,  false);	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
10	[BUG]  [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value,  true);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value,  true);  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value,  true);	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
11	[BUG]  [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(var.getInitialValue());  [CE]  [FE]        AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(var.getInitialValue());  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(var.getInitialValue());	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
12	[BUG]  [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value);  [CE]  [FE]          AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value);  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.isLiteralValue(value);	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
13	[BUG]  [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.mayHaveSideEffects(value);  [CE]  [FE]            AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.mayHaveSideEffects(value);  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  =!hasPropertyAssign  &&!NodeUtil.mayHaveSideEffects(value);	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
14	[BUG]  [BUGGY]  assignedToUnknownValue  -=  true;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  if  (var.getParentNode().isVar()  &&  !NodeUtil.isForIn(var.getParentNode().getParent()))  {  Node  value  =  var.getInitialValue();  assignedToUnknownValue  =  value  !=  null  &&  !NodeUtil.isLiteralValue(value,  true);  }  else  {    [BUGGY]  assignedToUnknownValue  -=  true;  [BUGGY]  }  [CLASS]  RemoveUnusedVars  CallSiteOptimizer  Continuation  Assign  [METHOD]  interpretAssigns  [RETURN_TYPE]  void  [VARIABLES]  Set  referenced  Var  var  Node  a  arg  argList  argParent  assignNode  body  c  externs  function  lastArg  lp  n  nameNode  node  param  parent  root  value  SimpleDefinitionFinder  defFinder  int  current  Multimap  assignsByVar  classDefiningCalls  continuations  CallSiteOptimizer  callSiteOptimizer  AbstractCompiler  compiler  boolean  assignedToUnknownValue  canChangeSignature  canModifyAllSites  changeCallSignature  changes  hasFollowing  hasPropertyAssign  isPropertyAssign  mayHaveSecondarySideEffects  maybeAliased  maybeEscaped  modifyAllCallSites  modifyCallSites  modifyCallers  preserveFunctionExpressionNames  removeGlobals  Scope  fnScope  parentScope  scope  CodingConvention  codingConvention  convention  List  allFunctionScopes  maybeUnreferenced  toRemove  toReplaceWithZero  Assign  assign  Map  assignsByNode  	projects/Closure1/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3492151478847891	746	746	5	replace	assignedToUnknownValue  -=  true;	assignedToUnknownValue  =  true;  	non-compiled	[CE]  	15	None	replace
