bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(j  >  MAX_ARRAY  ||  j  >  MAX_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  MAX_ARRAY  ||  j  >  MAX_ARRAY)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  MAX_ARRAY  ||  j  >  MAX_ARRAY)  {	  if(searchLength    >    MAX_ARRAY    ||    searchLength    >    MAX_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
2	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY  ||  searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_ARRAY    ||    searchLength    >    MAX_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
3	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY  ||  searchChars[j]!=  ch)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY  ||  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY  ||  searchChars[j]!=  ch)  {	  if(searchLength    >    MAX_ARRAY    ||    searchLength    >    MAX_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
4	[BUG]  [BUGGY]  if(j  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0)  {	  if(searchLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
5	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  ch)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]!=  ch)  {	  if(searchLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
6	[BUG]  [BUGGY]  CharacterIterator  it  =  searchChars.iterator();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharacterIterator  it  =  searchChars.iterator();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharacterIterator  it  =  searchChars.iterator();	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
7	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
8	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(j);	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
9	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
10	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
11	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
12	[BUG]  [BUGGY]  CharSequence  cs  =  cs[i].charSequence();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs[i].charSequence();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs[i].charSequence();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
13	[BUG]  [BUGGY]  CharSequence  cs[]  =  cs.charSequence(j,  searchLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  cs.charSequence(j,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  cs.charSequence(j,  searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
14	[BUG]  [BUGGY]  CharSequence  cs[]  =  cs.charSequence();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  cs.charSequence();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  cs.charSequence();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
15	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
16	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence(i,  searchLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence(i,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence(i,  searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
17	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence(j,  searchLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence(j,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence(j,  searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
18	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence(i);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
19	[BUG]  [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
20	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  cs.charAt(j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  cs.charAt(j);	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    ch;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  ch;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  true  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    ch;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
23	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
24	[BUG]  [BUGGY]  Character(i)  ==  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Character(i)  ==  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Character(i)  ==  cs.charAt(i);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
25	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  this  :  null;  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  this  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  this  :  null;	  return    this;    	non-compiled	[CE]  >  expected	14	None	replace
26	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  true  :  null;  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  true  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  true  :  null;	  return    this;    	non-compiled	[CE]  >  expected	14	None	replace
27	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  true  :  false;  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  true  :  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  true  :  false;	  return    this;    	non-compiled	[CE]  >  expected	14	None	replace
28	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  true;  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)return  true;  }	  if(searchChars[j]!=    ch)return    false;    }    	non-compiled	[CE]  >  expected	136	None	replace
29	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)return  true;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch)return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)return  true;  }	  if(searchChars[j]!=    ch)return    false;    }    	non-compiled	[CE]  >  expected	136	None	replace
30	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  >  expected	73	None	replace
31	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  >  expected	73	None	replace
32	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  >  expected	73	None	replace
33	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  >  expected	73	None	replace
34	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  >  expected	12	None	replace
35	[BUG]  [BUGGY]  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  >  expected	12	None	replace
36	[BUG]  [BUGGY]  ||(j  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  }	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    }    	non-compiled	[CE]  >  expected	54	None	replace
37	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  false;  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  false;  }	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    }    	non-compiled	[CE]  >  expected	54	None	replace
38	[BUG]  [BUGGY]  ||(searchChars[j]  ==  ch))  {  return  true;  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchChars[j]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchChars[j]  ==  ch))  {  return  true;  }	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    }    	non-compiled	[CE]  >  expected	54	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  	100	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  	100	None	replace
41	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  	100	None	replace
42	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  	103	None	replace
43	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHAR  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  	103	None	replace
44	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHAR  ch  =  cs.charAt(i);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  	103	None	replace
45	[BUG]  [BUGGY]  CHAR  ch  =  searchChars[j];  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHAR  ch  =  searchChars[j];  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHAR  ch  =  searchChars[j];	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  	67	None	replace
47	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  	67	None	replace
48	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  false;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  false;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
49	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
50	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  false;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  false;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    false;    	non-compiled	[CE]  not  a  statement	78	None	replace
51	[BUG]  [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  true  :  false;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    false;    	non-compiled	[CE]  not  a  statement	78	None	replace
52	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  true  :  false;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    false;    	non-compiled	[CE]  not  a  statement	78	None	replace
53	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	104	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	104	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	104	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	116	None	replace
57	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	116	None	replace
58	[BUG]  [BUGGY]  Char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	115	None	replace
59	[BUG]  [BUGGY]  Char  ch  =  cs[i];  if(ch!=  ch)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs[i];  if(ch!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs[i];  if(ch!=  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	115	None	replace
60	[BUG]  [BUGGY]  Char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	115	None	replace
61	[BUG]  [BUGGY]  Char  ch  =  cs[i];  if(ch  ==  ch)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs[i];  if(ch  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs[i];  if(ch  ==  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	115	None	replace
62	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	13	None	replace
63	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	13	None	replace
64	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	13	None	replace
65	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  INDEX_NOT_FOUND;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  INDEX_NOT_FOUND;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  INDEX_NOT_FOUND;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    INDEX_NOT_FOUND;    	non-compiled	[CE]  not  a  statement	125	None	replace
66	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    INDEX_NOT_FOUND;    	non-compiled	[CE]  not  a  statement	125	None	replace
67	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    INDEX_NOT_FOUND;    	non-compiled	[CE]  not  a  statement	125	None	replace
68	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  >  expected	40	None	replace
69	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	40	None	replace
70	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	58	None	replace
71	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	58	None	replace
72	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  not  a  statement	122	None	replace
73	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  not  a  statement	122	None	replace
74	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  not  a  statement	122	None	replace
75	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  break;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
76	[BUG]  [BUGGY]  allowSequence(searchLength,  cs.length());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  allowSequence(searchLength,  cs.length());  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	allowSequence(searchLength,  cs.length());	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
77	[BUG]  [BUGGY]  allowSequence(searchLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  allowSequence(searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	allowSequence(searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
78	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
79	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
80	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
81	[BUG]  [BUGGY]  Char  ch  =  cs[i];  if(ch  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs[i];  if(ch  ==  0)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs[i];  if(ch  ==  0)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
82	[BUG]  [BUGGY]  Context.checkState(searchLength!=  cs.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength!=  cs.length);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength!=  cs.length);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
83	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
84	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
85	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
86	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
87	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
88	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
89	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
90	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
91	[BUG]  [BUGGY]  ||(searchLength  >  MAX_NOT_FOUND  &&  searchChars[j]!=  ch))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  MAX_NOT_FOUND  &&  searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  MAX_NOT_FOUND  &&  searchChars[j]!=  ch))  {  return  false;  }	  if(searchLength    >    MAX_NOT_FOUND)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
92	[BUG]  [BUGGY]  ||(searchLength  >  MAX_NOT_FOUND  &&  searchChars[j]  ==  ch))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  MAX_NOT_FOUND  &&  searchChars[j]  ==  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  MAX_NOT_FOUND  &&  searchChars[j]  ==  ch))  {  return  false;  }	  if(searchLength    >    MAX_NOT_FOUND)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
93	[BUG]  [BUGGY]  if(searchLength  >  MAX_NOT_FOUND  ||  searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_NOT_FOUND  ||  searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_NOT_FOUND  ||  searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLength    >    MAX_NOT_FOUND)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
94	[BUG]  [BUGGY]  ||  searchLength  >  MAX_NOT_FOUND)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchLength  >  MAX_NOT_FOUND)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchLength  >  MAX_NOT_FOUND)  {  return  false;  }	  if(searchLength    >    MAX_NOT_FOUND)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
95	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence(searchChars[j]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence(searchChars[j]);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence(searchChars[j]);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
96	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence(searchLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence(searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence(searchLength);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
97	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charAt(i);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
98	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
99	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
100	[BUG]  [BUGGY]  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	60	None	replace
101	[BUG]  [BUGGY]  CharSequence  cs[]  =  searchChars.charAt(j);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  searchChars.charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  searchChars.charAt(j);	  CharSequence    cs[]    =    cs.charAt(i);    	non-compiled	[CE]  	62	None	replace
102	[BUG]  [BUGGY]  CharSequence  cs[]  =  searchChars.charAt(i);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  searchChars.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  searchChars.charAt(i);	  CharSequence    cs[]    =    cs.charAt(i);    	non-compiled	[CE]  	62	None	replace
103	[BUG]  [BUGGY]  CharSequence  cs[]  =  chars.charAt(i);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  chars.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  chars.charAt(i);	  CharSequence    cs[]    =    cs.charAt(i);    	non-compiled	[CE]  	62	None	replace
104	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  	123	None	replace
105	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  	123	None	replace
106	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  	123	None	replace
107	[BUG]  [BUGGY]  if(searchLimit  ==  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  	123	None	replace
108	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  return  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  ch)  {  return  false;  }	  ||    searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  	37	None	replace
109	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    }    	non-compiled	[CE]  	127	None	replace
110	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    }    	non-compiled	[CE]  not  a  statement	127	None	replace
111	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.reportCodeChange();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.reportCodeChange();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    }    	non-compiled	[CE]  not  a  statement	127	None	replace
112	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  not  a  statement	120	None	replace
113	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  ch;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  ch;	  return(searchChars    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  not  a  statement	79	None	replace
114	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs;	  return(searchChars    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  not  a  statement	79	None	replace
115	[BUG]  [BUGGY]  return(j  ==  'n'  ||  ch  ==  'r');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  'n'  ||  ch  ==  'r');  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  'n'  ||  ch  ==  'r');	  return(ch    ==    'n'    ||    ch    ==    'r');    	non-compiled	[CE]  not  a  statement	149	None	replace
116	[BUG]  [BUGGY]  return(searchChars[j]  ==  'n'  ||  ch  ==  'r');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  'n'  ||  ch  ==  'r');  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  'n'  ||  ch  ==  'r');	  return(ch    ==    'n'    ||    ch    ==    'r');    	non-compiled	[CE]  not  a  statement	149	None	replace
117	[BUG]  [BUGGY]  return(ch  ==  'r'  ||  ch  ==  'n');  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  'r'  ||  ch  ==  'n');  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  'r'  ||  ch  ==  'n');	  return(ch    ==    'n'    ||    ch    ==    'r');    	non-compiled	[CE]  not  a  statement	149	None	replace
118	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	2	None	replace
119	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	2	None	replace
120	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	2	None	replace
121	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	2	None	replace
122	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].trim();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].trim();  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].trim();	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
123	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length;	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
124	[BUG]  [BUGGY]  if(j  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0)  {	  if(searchLimit    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
125	[BUG]  [BUGGY]  if(searchLimit  ==  0  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0  ||  searchChars[j]  ==  ch)  {	  if(searchLimit    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
126	[BUG]  [BUGGY]  if(searchLength  ==  0  ||  searchChars[j]  ==  ch)  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0  ||  searchChars[j]  ==  ch)  {	  if(searchLimit    ==    0)    {    	non-compiled	[CE]  not  a  statement	86	None	replace
127	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }	  if(searchLimit    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	109	None	replace
128	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLimit    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	109	None	replace
129	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	110	None	replace
130	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  continue  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  continue	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	110	None	replace
131	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  not  a  statement	5	None	replace
132	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  not  a  statement	5	None	replace
133	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
134	[BUG]  [BUGGY]  if(searchLength  ==  0  ||  searchChars[j]!=  ch)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0  ||  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0  ||  searchChars[j]!=  ch)  {	  if(searchLength    ==    0)    {    	non-compiled	[CE]  not  a  statement	85	None	replace
135	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
136	[BUG]  [BUGGY]  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
137	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  null  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    null    :    ch;    	non-compiled	[CE]  not  a  statement	69	None	replace
138	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  null  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    null    :    ch;    	non-compiled	[CE]  not  a  statement	69	None	replace
139	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  cs.charAt(j);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  cs.charAt(j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  cs.charAt(j);	  return(ch    ==    '.'    ||    ch    ==    ',')?    null    :    ch;    	non-compiled	[CE]  not  a  statement	69	None	replace
140	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	118	None	replace
141	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	118	None	replace
142	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  break;  }  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  break;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  break;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    }    	non-compiled	[CE]  not  a  statement	124	None	replace
143	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charSequence(j);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charSequence(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charSequence(j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
144	[BUG]  [BUGGY]  CHARS[]  searchChars  =  cs.getStrings();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHARS[]  searchChars  =  cs.getStrings();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHARS[]  searchChars  =  cs.getStrings();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  not  a  statement	151	None	replace
145	[BUG]  [BUGGY]  searchChars[j]  =  ch;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  searchChars[j]  =  ch;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  ch;	  searchChars[j]    =    cs.charAt(i);    	non-compiled	[CE]  not  a  statement	27	None	replace
146	[BUG]  [BUGGY]  searchChars[j]  =  cs.charAt(j);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  searchChars[j]  =  cs.charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  cs.charAt(j);	  searchChars[j]    =    cs.charAt(i);    	non-compiled	[CE]  not  a  statement	27	None	replace
147	[BUG]  [BUGGY]  searchChars[j]  =  cs.charAt(i  +  1);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  searchChars[j]  =  cs.charAt(i  +  1);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  cs.charAt(i  +  1);	  searchChars[j]    =    cs.charAt(i);    	non-compiled	[CE]  	27	None	replace
148	[BUG]  [BUGGY]  if(searchLimit  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  	132	None	replace
149	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  	132	None	replace
150	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	132	None	replace
151	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
152	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
153	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
154	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
155	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  not  a  statement	126	None	replace
156	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(ch));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  throw  new  IllegalArgumentException( " ".equals(ch));  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	throw  new  IllegalArgumentException( " ".equals(ch));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
157	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
158	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
159	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  continue	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
160	[BUG]  [BUGGY]  if(searchLimit  >  0  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0  ||  searchChars[j]  ==  ch)  {	  if(searchLimit    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
161	[BUG]  [BUGGY]  Context.checkState(searchLength!=  cs.length());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength!=  cs.length());  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength!=  cs.length());	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
162	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
163	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
164	[BUG]  [BUGGY]  ||  searchLength  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchLength  ==  0)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchLength  ==  0)  {  return  false;  }	  ||    searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
165	[BUG]  [BUGGY]  ||  j  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  j  ==  0)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  j  ==  0)  {  return  true;  }	  ||    searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
166	[BUG]  [BUGGY]  ||  searchLength  ==  1)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchLength  ==  1)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchLength  ==  1)  {  return  true;  }	  ||    searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
167	[BUG]  [BUGGY]  Context.checkState(searchLength!=  MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength!=  MAX_VALUE);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength!=  MAX_VALUE);	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
168	[BUG]  [BUGGY]  Context.checkState(searchLimit  >  MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLimit  >  MAX_VALUE);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLimit  >  MAX_VALUE);	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
169	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
170	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
171	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
172	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
173	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]!=  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]!=  0)  {	  if(searchChars[j]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
174	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch  ||  searchChars[j]  ==  0)  {	  if(searchChars[j]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
175	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
176	[BUG]  [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
177	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  Boolean.FALSE  :  Boolean.TRUE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
178	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
179	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
180	[BUG]  [BUGGY]  if(searchChars[j]!=  null  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null  ||  searchChars[j]  ==  ch)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
181	[BUG]  [BUGGY]  if(searchChars[j]  ==  null  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null  ||  searchChars[j]  ==  ch)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
182	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  false;	  if(searchLength    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
183	[BUG]  [BUGGY]  ||(searchLength  >=  0  &&  searchChars[j]!=  ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >=  0  &&  searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >=  0  &&  searchChars[j]!=  ch))  {  return  false;  }	  if(searchLength    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
184	[BUG]  [BUGGY]  ||(searchLength  >=  0  &&  searchChars[j]  ==  ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >=  0  &&  searchChars[j]  ==  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >=  0  &&  searchChars[j]  ==  ch))  {  return  false;  }	  if(searchLength    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
185	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  false  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  false  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  false  :  null;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    null;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
186	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  false  :  null;  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  false  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  false  :  null;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    null;    	non-compiled	[CE]  >  expected	42	None	replace
187	[BUG]  [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLimit    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  >  expected	113	None	replace
188	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
190	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  j;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  j;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  j;	  return(j    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
191	[BUG]  [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  false  :  ch;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  false  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  false  :  ch;	  return(j    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
192	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
193	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
194	[BUG]  [BUGGY]  if(searchLength  ==  MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  MAX_VALUE)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  MAX_VALUE)  {	  if(searchLength    >    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
195	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchChars[j]!=  ch)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchChars[j]!=  ch)  {	  if(searchLength    >    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
196	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
197	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
198	[BUG]  [BUGGY]  CHAR[]  searchChars  =  cs.get(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHAR[]  searchChars  =  cs.get(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHAR[]  searchChars  =  cs.get(i);	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
199	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(j);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(j);	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
200	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(i);	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
201	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  return  false;	  ||    searchChars[j]    ==    ch)    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
202	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  ch)  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  ch)  {  return  false;	  ||    searchChars[j]    ==    ch)    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
203	[BUG]  [BUGGY]  ||(j  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  ==  0  &&  searchChars[j]!=  ch))  {  return  true;	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
204	[BUG]  [BUGGY]  if(j  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0)  {  return  false;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
205	[BUG]  [BUGGY]  ||(j  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
207	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
209	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
210	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
211	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
212	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
213	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  =='}  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  =='}  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  =='}	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  not  a  statement	140	None	replace
214	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  not  a  statement	140	None	replace
215	[BUG]  [BUGGY]  Char  ch  =  searchChars[j].charAt(i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  searchChars[j].charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  searchChars[j].charAt(i);	  Char    ch    =    searchChars[j];    	non-compiled	[CE]  not  a  statement	64	None	replace
216	[BUG]  [BUGGY]  Char  ch  =  searchChars[j  +  1];  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  searchChars[j  +  1];  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  searchChars[j  +  1];	  Char    ch    =    searchChars[j];    	non-compiled	[CE]  not  a  statement	64	None	replace
217	[BUG]  [BUGGY]  Char  ch  =  searchChars[j]  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  searchChars[j]  +  1;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  searchChars[j]  +  1;	  Char    ch    =    searchChars[j];    	non-compiled	[CE]  not  a  statement	64	None	replace
218	[BUG]  [BUGGY]  cearcă  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	133	None	replace
219	[BUG]  [BUGGY]  Aleger  <?>  searchLength  =  searchChars[j];  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Aleger  <?>  searchLength  =  searchChars[j];  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Aleger  <?>  searchLength  =  searchChars[j];	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	133	None	replace
220	[BUG]  [BUGGY]  deal(csLength,  searchChars[j])  {  return  true;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  deal(csLength,  searchChars[j])  {  return  true;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	deal(csLength,  searchChars[j])  {  return  true;	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	133	None	replace
221	[BUG]  [BUGGY]  deal(cs,  i,  searchLength,  ch))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  deal(cs,  i,  searchLength,  ch))  {  return  true;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	deal(cs,  i,  searchLength,  ch))  {  return  true;	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
222	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toUpperCase();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toUpperCase();  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toUpperCase();	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].toLowerCase();    	non-compiled	[CE]  not  a  statement	15	None	replace
223	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toLowerCase()  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toLowerCase()  +  1;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toLowerCase()  +  1;	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].toLowerCase();    	non-compiled	[CE]  not  a  statement	15	None	replace
224	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[i].toLowerCase();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[i].toLowerCase();  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[i].toLowerCase();	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].toLowerCase();    	non-compiled	[CE]  not  a  statement	15	None	replace
225	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	94	None	replace
226	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	94	None	replace
227	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  not  a  statement	50	None	replace
228	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  not  a  statement	50	None	replace
229	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  ch)  {	  ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
230	[BUG]  [BUGGY]  ||  ch  ==  searchChars[j])  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  ch  ==  searchChars[j])  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  ch  ==  searchChars[j])  {	  ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
231	[BUG]  [BUGGY]  ||  searchChars[j]  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]  ==  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  0)  {	  ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
232	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  searchChars  ==  ',')?  true  :  null;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  searchChars  ==  ',')?  true  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  searchChars  ==  ',')?  true  :  null;	  return(searchChars    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  not  a  statement	43	None	replace
233	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	57	None	replace
234	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
235	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
236	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
237	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  [CE]  illegal  character:  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  character:  	51	None	replace
238	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt  [CE]  illegal  character:  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  character:  	150	None	replace
239	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt  [CE]  illegal  character:  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  character:  	150	None	replace
240	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).char  [CE]  illegal  character:  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).char  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).char	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  character:  	150	None	replace
241	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  character:  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  character:  	150	None	replace
242	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  character:  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  character:  	8	None	replace
243	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  character:  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  character:  	8	None	replace
244	[BUG]  [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  character:  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  character:  	9	None	replace
245	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }  [CE]  illegal  character:  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  character:  	9	None	replace
246	[BUG]  [BUGGY]  CharSequence  cs[]  =  cs.charAt(j  +  1);  [CE]  illegal  character:  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  cs.charAt(j  +  1);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  cs.charAt(j  +  1);	  CharSequence    cs[]    =    cs.charAt(j);    	non-compiled	[CE]  illegal  character:  	63	None	replace
247	[BUG]  [BUGGY]  CharSequence  cs[]  =  cs.charAt(j,  i);  [CE]  illegal  character:  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  cs.charAt(j,  i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  cs.charAt(j,  i);	  CharSequence    cs[]    =    cs.charAt(j);    	non-compiled	[CE]  illegal  character:  	63	None	replace
248	[BUG]  [BUGGY]  ||(j  >  0  &&  searchChars[j]!=  ch))  {  return  true;  [CE]  illegal  character:  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  >  0  &&  searchChars[j]!=  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  >  0  &&  searchChars[j]!=  ch))  {  return  true;	  ||(searchLength    >    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  illegal  character:  	46	None	replace
249	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  false;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  false;	  ||(searchLength    >    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  not  a  statement	46	None	replace
250	[BUG]  [BUGGY]  ||(i  >  0  &&  searchChars[j]!=  ch))  {  return  true;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(i  >  0  &&  searchChars[j]!=  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(i  >  0  &&  searchChars[j]!=  ch))  {  return  true;	  ||(searchLength    >    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  not  a  statement	46	None	replace
251	[BUG]  [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  true  :  null;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  true  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  '.'  ||  ch  ==  ',')?  true  :  null;	  return(j    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  not  a  statement	44	None	replace
252	[BUG]  [BUGGY]  return(j  ==  EMPTY)?  null  :  ch;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  EMPTY)?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  EMPTY)?  null  :  ch;	  return(ch    ==    EMPTY)?    null    :    ch;    	non-compiled	[CE]  not  a  statement	148	None	replace
253	[BUG]  [BUGGY]  return(ch  ==  EMPTY)?  null  :  ch.charAt(j);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  EMPTY)?  null  :  ch.charAt(j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  EMPTY)?  null  :  ch.charAt(j);	  return(ch    ==    EMPTY)?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
254	[BUG]  [BUGGY]  return(searchChars  ==  EMPTY)?  null  :  ch;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  EMPTY)?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  EMPTY)?  null  :  ch;	  return(ch    ==    EMPTY)?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
255	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
256	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
257	[BUG]  [BUGGY]  return(searchChars  ==  cs.length())?  null  :  searchChars[j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  cs.length())?  null  :  searchChars[j];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  cs.length())?  null  :  searchChars[j];	  return(searchLength    ==    cs.length())?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
258	[BUG]  [BUGGY]  return(j  ==  cs.length())?  null  :  searchChars[j];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  cs.length())?  null  :  searchChars[j];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  cs.length())?  null  :  searchChars[j];	  return(searchLength    ==    cs.length())?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
259	[BUG]  [BUGGY]  return(j  ==  searchChars.length())?  null  :  searchChars[j];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  searchChars.length())?  null  :  searchChars[j];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  searchChars.length())?  null  :  searchChars[j];	  return(searchLength    ==    cs.length())?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
260	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
261	[BUG]  [BUGGY]  bucket[j]  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  bucket[j]  =  cs.charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	bucket[j]  =  cs.charAt(j);	  bucket[j]    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
262	[BUG]  [BUGGY]  bucket[j]  =  cs.charAt(i  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  bucket[j]  =  cs.charAt(i  +  1);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	bucket[j]  =  cs.charAt(i  +  1);	  bucket[j]    =    cs.charAt(i);    	non-compiled	[CE]  not  a  statement	28	None	replace
263	[BUG]  [BUGGY]  bucket[j]  =  cs.charAt(i,  searchLength);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  bucket[j]  =  cs.charAt(i,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	bucket[j]  =  cs.charAt(i,  searchLength);	  bucket[j]    =    cs.charAt(i);    	non-compiled	[CE]  not  a  statement	28	None	replace
264	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	106	None	replace
265	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	106	None	replace
266	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	106	None	replace
267	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    CharSequence    cs    =    cs.charAt(i);    if(cs!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs  ==  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    CharSequence    cs    =    cs.charAt(i);    if(cs!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
269	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  break;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
271	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
272	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
274	[BUG]  [BUGGY]  if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
275	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
276	[BUG]  [BUGGY]  if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
277	[BUG]  [BUGGY]  ||(j  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }	  ||(searchLength    >    0    &&    searchChars[j]!=    ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
278	[BUG]  [BUGGY]  ||(i  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(i  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(i  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }	  ||(searchLength    >    0    &&    searchChars[j]!=    ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
279	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
280	[BUG]  [BUGGY]  if(searchChars[j]!=  '.')  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  '.')  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  '.')  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
281	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
282	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
283	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {	  if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	30	None	replace
284	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  ch)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  ch)  {	  if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	30	None	replace
285	[BUG]  [BUGGY]  if(searchLimit  ==  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	108	None	replace
286	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
287	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[i]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[i]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[i]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
288	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[i]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[i]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[i]!=  ch))  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
289	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length()  +  1;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length()  +  1;	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].length();    	non-compiled	[CE]  not  a  statement	70	None	replace
290	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].substring(i  +  1,  searchLength);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].substring(i  +  1,  searchLength);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].substring(i  +  1,  searchLength);	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].length();    	non-compiled	[CE]  not  a  statement	70	None	replace
291	[BUG]  [BUGGY]  if(j  >  0  ||  searchChars[j]  ==  ch)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0  ||  searchChars[j]  ==  ch)  {	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	137	None	replace
292	[BUG]  [BUGGY]  if(j  >  0  ||  searchChars[j]!=  ch)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0  ||  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0  ||  searchChars[j]!=  ch)  {	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	137	None	replace
293	[BUG]  [BUGGY]  ||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }	  ||(searchLength    >    0    &&    searchChars[j]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
294	[BUG]  [BUGGY]  ||(i  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(i  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(i  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }	  ||(searchLength    >    0    &&    searchChars[j]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
295	[BUG]  [BUGGY]  ||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  true;	  ||(searchLength    >    0    &&    searchChars[j]    ==    ch))    {    return    true;    	non-compiled	[CE]  not  a  statement	47	None	replace
296	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  false;	  ||(searchLength    >    0    &&    searchChars[j]    ==    ch))    {    return    true;    	non-compiled	[CE]  not  a  statement	47	None	replace
297	[BUG]  [BUGGY]  ||(i  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(i  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(i  >  0  &&  searchChars[j]  ==  ch))  {  return  true;	  ||(searchLength    >    0    &&    searchChars[j]    ==    ch))    {    return    true;    	non-compiled	[CE]  not  a  statement	47	None	replace
298	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  not  a  statement	68	None	replace
299	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  not  a  statement	68	None	replace
300	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  not  a  statement	68	None	replace
301	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	105	None	replace
302	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	105	None	replace
303	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	105	None	replace
304	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	96	None	replace
305	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  false;  }	  if(searchLength    >    0)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	76	None	replace
306	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  }	  if(searchLength    >    0)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	76	None	replace
307	[BUG]  [BUGGY]  return(j  ==  0)?  null  :  ch;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  0)?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  null  :  ch;	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  not  a  statement	147	None	replace
308	[BUG]  [BUGGY]  return(j  ==  0)?  null  :  cs.charAt(j);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  0)?  null  :  cs.charAt(j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  null  :  cs.charAt(j);	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  not  a  statement	147	None	replace
309	[BUG]  [BUGGY]  return(j  ==  0)?  null  :  searchChars[j];  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  0)?  null  :  searchChars[j];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  null  :  searchChars[j];	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  not  a  statement	147	None	replace
310	[BUG]  [BUGGY]  return(j  ==  0)?  null  :  cs[j];  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  0)?  null  :  cs[j];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  null  :  cs[j];	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  not  a  statement	147	None	replace
311	[BUG]  [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
312	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
313	[BUG]  [BUGGY]  ||(searchChars[j]  ==  ch))  {  return  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchChars[j]  ==  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchChars[j]  ==  ch))  {  return  true;	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
314	[BUG]  [BUGGY]  ||(searchChars[j]!=  ch))  {  return  true;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchChars[j]!=  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchChars[j]!=  ch))  {  return  true;	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
315	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i).charAt(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i).charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i).charAt(j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
316	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i).charAt(j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHAR  ch  =  cs.charAt(i).charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHAR  ch  =  cs.charAt(i).charAt(j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
317	[BUG]  [BUGGY]  CharacterImpl  i  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharacterImpl  i  =  cs.charAt(i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharacterImpl  i  =  cs.charAt(i);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    ch;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
318	[BUG]  [BUGGY]  CHARS[]  searchChars  =  cs.get(i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHARS[]  searchChars  =  cs.get(i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHARS[]  searchChars  =  cs.get(i);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    ch;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
319	[BUG]  [BUGGY]  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }	  searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
320	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  true;  }	  searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
321	[BUG]  [BUGGY]  if(j  >  0  ||  searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0  ||  searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0  ||  searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
322	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
323	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]!=  ch)  {  return  false;  }	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
324	[BUG]  [BUGGY]  if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
325	[BUG]  [BUGGY]  if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
326	[BUG]  [BUGGY]  if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
328	[BUG]  [BUGGY]  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
330	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
333	[BUG]  [BUGGY]  return(ch  ==  EMPTY)?  null  :  ch  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  EMPTY)?  null  :  ch  +  1;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  EMPTY)?  null  :  ch  +  1;	  return(ch    ==    EMPTY)?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
334	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
335	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.indexOf(searchLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  searchLimit  =  cs.indexOf(searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  searchLimit  =  cs.indexOf(searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
336	[BUG]  [BUGGY]  Integer  found  =  cs.indexOf(searchLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  found  =  cs.indexOf(searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  found  =  cs.indexOf(searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
337	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.intValue();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  searchLimit  =  cs.intValue();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  searchLimit  =  cs.intValue();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
338	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  searchLimit  =  cs.length();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  searchLimit  =  cs.length();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
339	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
340	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
341	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]  ==  ch)  {	  if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
342	[BUG]  [BUGGY]  if(searchLength  >  MAX_NOT_FOUND  ||  searchLength  >  MAX_NOT_FOUND)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_NOT_FOUND  ||  searchLength  >  MAX_NOT_FOUND)  {  return  false;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_NOT_FOUND  ||  searchLength  >  MAX_NOT_FOUND)  {  return  false;  }	  if(searchLength    >    MAX_NOT_FOUND)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
343	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
344	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
345	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
346	[BUG]  [BUGGY]  if(searchLength  >  0)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
347	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
348	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
349	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
350	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchLength  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchLength  >  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchLength  >  0)  {	  if(searchLength    >    MAX_ARRAY    ||    searchLength    >    MAX_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
351	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
352	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
353	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
354	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
355	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
356	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
357	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
358	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
359	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
360	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
361	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
362	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.indexOf(searchChars[i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  searchLimit  =  cs.indexOf(searchChars[i]);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  searchLimit  =  cs.indexOf(searchChars[i]);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
363	[BUG]  [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
364	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
365	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
366	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
367	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
368	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
369	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
370	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  PAD_LIMIT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  PAD_LIMIT;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  PAD_LIMIT;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
371	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND  +  1;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND  +  1;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
372	[BUG]  [BUGGY]  return(searchLength  ==  cs.length())?  null  :  searchChars[i];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchLength  ==  cs.length())?  null  :  searchChars[i];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchLength  ==  cs.length())?  null  :  searchChars[i];	  return(searchLength    ==    cs.length())?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
373	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
374	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!='}	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
375	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
376	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
377	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
378	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
379	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {	  if(searchLength    >    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
380	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
381	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
382	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
383	[BUG]  [BUGGY]  if(j  ==  0  ||  searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0  ||  searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0  ||  searchChars[j]  ==  ch)  {  return  true;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
384	[BUG]  [BUGGY]  if(j  ==  0  ||  ch  ==  '.')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0  ||  ch  ==  '.')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0  ||  ch  ==  '.')  {  return  true;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
385	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
386	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
387	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
389	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  j,  searchLength,  ch);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  j,  searchLength,  ch);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  cs.length(),  j,  searchLength,  ch);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
390	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  searchLength,  j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  searchLength,  j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  cs.length(),  searchLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
391	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  j,  searchLength,  cs.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  j,  searchLength,  cs.length());  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  j,  searchLength,  cs.length());	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
392	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  searchLength,  ch);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  searchLength,  ch);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  cs.length(),  searchLength,  ch);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
393	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
394	[BUG]  [BUGGY]  if(searchLength!=  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
395	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
396	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
397	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
398	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
399	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
401	[BUG]  [BUGGY]  return(j  ==  0)?  null  :  csLength;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  0)?  null  :  csLength;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  null  :  csLength;	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
402	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
403	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
404	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
405	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
406	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
407	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
408	[BUG]  [BUGGY]  return(searchLength  ==  'n'  ||  ch  ==  'r');  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchLength  ==  'n'  ||  ch  ==  'r');  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchLength  ==  'n'  ||  ch  ==  'r');	  return(ch    ==    'n'    ||    ch    ==    'r');    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
409	[BUG]  [BUGGY]  return(ch  ==  'n'  ||  ch  ==  'r',  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  'n'  ||  ch  ==  'r',  i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  'n'  ||  ch  ==  'r',  i);	  return(ch    ==    'n'    ||    ch    ==    'r');    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
410	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
411	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
412	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
413	[BUG]  [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLimit    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
414	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.charAt(j);	  CharSequence    cs[]    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
415	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
416	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
417	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
418	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
419	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
420	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
421	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
422	[BUG]  [BUGGY]  if(searchLength  >  0  &&  searchChars[j]!=  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  &&  searchChars[j]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  &&  searchChars[j]!=  ch)  {	  if(searchLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
423	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
424	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
425	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
426	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
427	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  this  :  EMPTY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  this  :  EMPTY;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  this  :  EMPTY;	  return    this;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
428	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
429	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.indexOf(searchChars[j]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  searchLimit  =  cs.indexOf(searchChars[j]);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  searchLimit  =  cs.indexOf(searchChars[j]);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
430	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  j,  searchLength,  cs.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  j,  searchLength,  cs.length());  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  j,  searchLength,  cs.length());	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
431	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
432	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
433	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(searchChars[j]  ==  ch)  {  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
434	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[i].length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[i].length();  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[i].length();	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].length();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
435	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
436	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
437	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
438	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
439	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
440	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
441	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
442	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
443	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
444	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
445	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  true;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)return  true;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)return  true;	  if(searchChars[j]    ==    ch)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
446	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
447	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toString();  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toString();	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j].toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
448	[BUG]  [BUGGY]  if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
449	[BUG]  [BUGGY]  if(searchLength  ==  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
450	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  ch  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  ch  +  1;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  ch  +  1;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    ch;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
451	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLimit    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
452	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
453	[BUG]  [BUGGY]  bucket[j]  =  cs.charAt(i  +  searchLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  bucket[j]  =  cs.charAt(i  +  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	bucket[j]  =  cs.charAt(i  +  searchLength);	  bucket[j]    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
454	[BUG]  [BUGGY]  if(searchLength!=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {	  if(searchLength    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
455	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
456	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
457	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
458	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
459	[BUG]  [BUGGY]  Integer  csLimit  =  searchChars[i].intValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  csLimit  =  searchChars[i].intValue();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  csLimit  =  searchChars[i].intValue();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
460	[BUG]  [BUGGY]  Integer  csLimit  =  searchChars[i].getIntValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  csLimit  =  searchChars[i].getIntValue();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  csLimit  =  searchChars[i].getIntValue();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
461	[BUG]  [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
462	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  For(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	For(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
463	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
464	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  {  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  {  ch)  {  return  true  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  {  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
465	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
466	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  {  ch)  {  return  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  {  ch)  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  {  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
467	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
468	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
469	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
470	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  cs.charAt(i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  cs.charAt(i);	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
471	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
472	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
473	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  false;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    false;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
474	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  <identifier>  expected	156	None	replace
475	[BUG]  [BUGGY]  return(searchLength  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchLength  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchLength  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  <identifier>  expected	156	None	replace
476	[BUG]  [BUGGY]  found  +=  searchLength;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  found  +=  searchLength;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	found  +=  searchLength;	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
477	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  j,  searchLength,  cs[i]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  j,  searchLength,  cs[i]);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  j,  searchLength,  cs[i]);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
478	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  j,  searchLength,  cs[i],  j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  j,  searchLength,  cs[i],  j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  j,  searchLength,  cs[i],  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
479	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    CharSequence    cs    =    cs.charAt(i);    if(cs!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
480	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    CharSequence    cs    =    cs.charAt(i);    if(cs!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
481	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    CharSequence    cs    =    cs.charAt(i);    if(cs!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
482	[BUG]  [BUGGY]  Char  ch  =  searchChars[j]  +  i;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  searchChars[j]  +  i;  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  searchChars[j]  +  i;	  Char    ch    =    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
483	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
484	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
485	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
486	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
487	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[i];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[i];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[i];	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
488	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].input;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].input;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].input;	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
489	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
490	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  searchChars  ==  ',')?  true  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  searchChars  ==  ',')?  true  :  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  searchChars  ==  ',')?  true  :  null;	  return(searchChars    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
491	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch  +  1;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch  +  1;	  return(ch    ==    '.'    ||    ch    ==    ',')?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
492	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
493	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
494	[BUG]  [BUGGY]  cearcăFor(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăFor(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăFor(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
495	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
496	[BUG]  [BUGGY]  cearcăFor(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăFor(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăFor(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
497	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
498	[BUG]  [BUGGY]  Context.checkState(searchLimit  >  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLimit  >  0);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLimit  >  0);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    j++)    {    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
499	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
500	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
501	[BUG]  [BUGGY]  ||  searchChars[j].equals(ch))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j].equals(ch))  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j].equals(ch))  {	  ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
502	[BUG]  [BUGGY]  Context.checkState(searchLength!=  csLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength!=  csLength);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength!=  csLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    ch;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
503	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  searchLength,  j);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  searchLength,  j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  searchLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    ch;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
504	[BUG]  [BUGGY]  Context.checkState(searchLength  ==  csLength);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength  ==  csLength);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength  ==  csLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    ch;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
505	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
506	[BUG]  [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
507	[BUG]  [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
508	[BUG]  [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
509	[BUG]  [BUGGY]  cearcă  {  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  if(searchLength  ==  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
510	[BUG]  [BUGGY]  cearcă  {  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
511	[BUG]  [BUGGY]  cearcă  {  if(searchLength!=  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  if(searchLength!=  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  if(searchLength!=  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
512	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
513	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
514	[BUG]  [BUGGY]  if(searchLength  >  0  &&  searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  &&  searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  &&  searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
515	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(searchChars[j]));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  throw  new  IllegalArgumentException( " ".equals(searchChars[j]));  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	throw  new  IllegalArgumentException( " ".equals(searchChars[j]));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
516	[BUG]  [BUGGY]  return(j  ==  '.'  ||  j  ==  ',')?  false  :  ch;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  j  ==  ',')?  false  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  j  ==  ',')?  false  :  ch;	  return(j    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
517	[BUG]  [BUGGY]  return(j  ==  '.'  ||  j  ==  ',')?  true  :  ch;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  j  ==  ',')?  true  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  j  ==  ',')?  true  :  ch;	  return(j    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
518	[BUG]  [BUGGY]  if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLimit;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
519	[BUG]  [BUGGY]  int  searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
520	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
521	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
522	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
523	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
524	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
525	[BUG]  [BUGGY]  Integer  i  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  searchChars.length;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  searchChars.length;	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
526	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
527	[BUG]  [BUGGY]  Integer  found  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  found  =  searchChars.length;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  found  =  searchChars.length;	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
528	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
529	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
530	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  true;  }	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
531	[BUG]  [BUGGY]  found  =  searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  found  =  searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	found  =  searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
532	[BUG]  [BUGGY]  found  =  searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  found  =  searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	found  =  searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
533	[BUG]  [BUGGY]  if(searchChars[i]!=  ch)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]!=  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]!=  ch)  {	  if(searchChars[j]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
534	[BUG]  [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
535	[BUG]  [BUGGY]  if(searchLength  >  0  &&  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  &&  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  &&  searchChars[j]  ==  ch)  {	  if(searchLength    >    0    ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
536	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
537	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
538	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
539	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
540	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
541	[BUG]  [BUGGY]  allowSequence(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  allowSequence(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	allowSequence(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
542	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  j  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  j  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  j  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
543	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
544	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Integer  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
545	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
546	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  Integer.MIN_VALUE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  Integer.MIN_VALUE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
547	[BUG]  [BUGGY]  ||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(j  >  0  &&  searchChars[j]  ==  ch))  {  return  false;	  ||(searchLength    >    0    &&    searchChars[j]    ==    ch))    {    return    true;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
548	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
549	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  EMPTY;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  EMPTY;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  EMPTY;	  return(searchChars    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
550	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
551	[BUG]  [BUGGY]  if(j  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
552	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
553	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch  ||  searchChars[j]  ==  ch)  {	  if(searchChars[j]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
554	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  '/')  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch  ||  searchChars[j]  ==  '/')  {	  if(searchChars[j]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
555	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
556	[BUG]  [BUGGY]  cearcăAndSet(cs,  i,  searchLength,  j);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(cs,  i,  searchLength,  j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(cs,  i,  searchLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
557	[BUG]  [BUGGY]  Context.checkState(searchLength  ==  cs.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength  ==  cs.length);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength  ==  cs.length);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
558	[BUG]  [BUGGY]  cearcăAndSet(cs,  i,  searchLength,  j,  ch);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(cs,  i,  searchLength,  j,  ch);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(cs,  i,  searchLength,  j,  ch);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
559	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
560	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
561	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
562	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
563	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  null;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  return  null;	  ||    searchChars[j]    ==    ch)    {    return    true;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
564	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  searchChars.iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Iterator  <  Object>  it  =  searchChars.iterator();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Iterator  <  Object>  it  =  searchChars.iterator();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
565	[BUG]  [BUGGY]  Iterator  <  Object>  searchLimit  =  searchChars.iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Iterator  <  Object>  searchLimit  =  searchChars.iterator();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Iterator  <  Object>  searchLimit  =  searchChars.iterator();	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
566	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
567	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.getCharSequence(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.getCharSequence(j);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
568	[BUG]  [BUGGY]  CharSequence  cs  =  cs.get(searchLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs  =  cs.get(searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs  =  cs.get(searchLength);	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
569	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  INDEX_NOT_FOUND  :  ch;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  INDEX_NOT_FOUND  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  INDEX_NOT_FOUND  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
570	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  EMPTY  :  ch;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  EMPTY  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  EMPTY  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
571	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
572	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  break;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
573	[BUG]  [BUGGY]  if(csLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(csLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(csLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
574	[BUG]  [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
575	[BUG]  [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
576	[BUG]  [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
577	[BUG]  [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndFix(searchChars[j])  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
578	[BUG]  [BUGGY]  return(ch!=  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch!=  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch!=  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
579	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
580	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE  ||  searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
581	[BUG]  [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	nisipToInt(searchLength)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
582	[BUG]  [BUGGY]  Context.checkState(searchLength  >  MAX_ARRAY);  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength  >  MAX_ARRAY);  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength  >  MAX_ARRAY);  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
583	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "The  ' "  +  ch  + "'  must  be  in  the  range  [ "  +  j  + "] ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  throw  new  IllegalArgumentException( "The  ' "  +  ch  + "'  must  be  in  the  range  [ "  +  j  + "] ");  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	throw  new  IllegalArgumentException( "The  ' "  +  ch  + "'  must  be  in  the  range  [ "  +  j  + "] ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
584	[BUG]  [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
585	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
586	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
587	[BUG]  [BUGGY]  return(ch  ==  ' "')?  null  :  ch;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  ' "')?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  ' "')?  null  :  ch;	  return(ch    ==    EMPTY)?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
588	[BUG]  [BUGGY]  return(ch!=  EMPTY)?  null  :  ch;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch!=  EMPTY)?  null  :  ch;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch!=  EMPTY)?  null  :  ch;	  return(ch    ==    EMPTY)?    null    :    ch;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
589	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
590	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
591	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
592	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  break;  }  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  break;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  break;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
593	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  j++)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  j++)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  j++)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    j++)    {    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
594	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  j++)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  j++)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  j++)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    j++)    {    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
595	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  j++)  {  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  j++)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  j++)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    j++)    {    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
596	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i,  j);  j++)  {  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i,  j);  j++)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i,  j);  j++)  {  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    j++)    {    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
597	[BUG]  [BUGGY]  searchChars[j]  =  cs.charAt(i  +  1,  ch);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  searchChars[j]  =  cs.charAt(i  +  1,  ch);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  cs.charAt(i  +  1,  ch);	  searchChars[j]    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
598	[BUG]  [BUGGY]  bucket[j]  =  cs.charAt(i  +  1,  ch);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  bucket[j]  =  cs.charAt(i  +  1,  ch);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	bucket[j]  =  cs.charAt(i  +  1,  ch);	  bucket[j]    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
599	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  [Delete]  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	[Delete]	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
600	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingName(ch,  searchLength);	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
601	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingName(ch,  i);	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
602	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  csLength,  searchChars[j]));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  csLength,  searchChars[j]));  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  csLength,  searchChars[j]));	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
603	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchLength,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchLength,  null);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingName(cs,  i,  searchLength,  null);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
604	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingName(cs,  i,  searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
605	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(cs,  i,  searchLength);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingClass(cs,  i,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingClass(cs,  i,  searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
606	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
607	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  ch)  {  return  true;  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
608	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
609	[BUG]  [BUGGY]  Char  ch  =  searchChars[j].trim();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Char  ch  =  searchChars[j].trim();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  searchChars[j].trim();	  Char    ch    =    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
610	[BUG]  [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
611	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  searchLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  csLength,  j,  searchLength);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
612	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  len);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  len);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  csLength,  j,  len);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
613	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  searchLength));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  searchLength));  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  csLength,  j,  searchLength));	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
614	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
615	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
616	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  }  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  }  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  }  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
617	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
618	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  csLength,  searchChars[j]));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  csLength,  searchChars[j]));  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  csLength,  searchChars[j]));	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
619	[BUG]  [BUGGY]  Context.checkState(searchLength  ==  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength  ==  0);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength  ==  0);	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
620	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
621	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  0)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
622	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  continue  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  continue  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  continue  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
623	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
624	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  EMPTY;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  EMPTY;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  true  :  EMPTY;	  return(j    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
625	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
626	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
627	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >=  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
628	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >>  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >>  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  >>  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
629	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
630	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
631	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  EMPTY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  EMPTY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  EMPTY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
632	[BUG]  [BUGGY]  if(csLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(csLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(csLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
633	[BUG]  [BUGGY]  Context.checkState(searchLength!=  Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength!=  Integer.MIN_VALUE);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength!=  Integer.MIN_VALUE);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
634	[BUG]  [BUGGY]  if(j  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
635	[BUG]  [BUGGY]  cearcă  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
636	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
637	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  continue  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
638	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs.charAt(j]  ==  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs.charAt(j]  ==  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs.charAt(j]  ==  ch)  {  continue  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
639	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i,  j);  if(ch  <  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i,  j);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i,  j);  if(ch  <  ch)  {  continue  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    continue    false;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
640	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].equals(ch))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].equals(ch))  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch  ||  searchChars[j].equals(ch))  {	  if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
641	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]!=  null)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]!=  null)  {	  if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
642	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  null;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  return  null;  }	  ||    searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
643	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]  ==  ch))  {  return  false;	  ||(searchLength    ==    0    &&    searchChars[j]!=    ch))    {    return    true;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
644	[BUG]  [BUGGY]  CharSequence  cs[]  =  chars.charAt(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CharSequence  cs[]  =  chars.charAt(j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  chars.charAt(j);	  CharSequence    cs[]    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
645	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].equals(ch);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].equals(ch);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].equals(ch);	  return(searchChars[j]    ==    ch)?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
646	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
647	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
648	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
649	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  continue  true;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  continue  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  continue  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
650	[BUG]  [BUGGY]  if(j  ==  0  ||  csLength  ==  searchLength)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0  ||  csLength  ==  searchLength)  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0  ||  csLength  ==  searchLength)  {  return  true;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
651	[BUG]  [BUGGY]  if(j  ==  0  ||  ch  ==  'n'  ||  ch  ==  'r')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0  ||  ch  ==  'n'  ||  ch  ==  'r')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0  ||  ch  ==  'n'  ||  ch  ==  'r')  {  return  true;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
652	[BUG]  [BUGGY]  if(j  ==  0  ||  ch  ==  'n'  ||  ch  ==  't')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  ==  0  ||  ch  ==  'n'  ||  ch  ==  't')  {  return  true;  }  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0  ||  ch  ==  'n'  ||  ch  ==  't')  {  return  true;  }	  if(j    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
653	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchLength,  j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchLength,  j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingName(cs,  i,  searchLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
654	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
655	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
656	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }	  if(searchChars[j]!=    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
657	[BUG]  [BUGGY]  cearcă  {  searchChars[j]  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  searchChars[j]  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  searchChars[j]  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
658	[BUG]  [BUGGY]  cearcă  {  searchChars[j]  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  searchChars[j]  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  searchChars[j]  =  cs.charAt(i);	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
659	[BUG]  [BUGGY]  ||(searchChars[j]  ==  ch  &&  cs.charAt(i)!=  '-'))  {  searchChars[j]  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchChars[j]  ==  ch  &&  cs.charAt(i)!=  '-'))  {  searchChars[j]  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchChars[j]  ==  ch  &&  cs.charAt(i)!=  '-'))  {  searchChars[j]  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
660	[BUG]  [BUGGY]  ||(searchChars[j]  ==  ch  &&  cs.charAt(i)!=  '0'))  {  searchChars[j]  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||(searchChars[j]  ==  ch  &&  cs.charAt(i)!=  '0'))  {  searchChars[j]  =  cs.charAt(i);  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchChars[j]  ==  ch  &&  cs.charAt(i)!=  '0'))  {  searchChars[j]  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
661	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
662	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  }	  if(searchLimit    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
663	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
664	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
665	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
666	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
667	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
668	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
669	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
670	[BUG]  [BUGGY]  Context.checkState(searchLength  ==  MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength  ==  MAX_VALUE);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength  ==  MAX_VALUE);	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
671	[BUG]  [BUGGY]  CHARS[]  searchChars  =  cs.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  CHARS[]  searchChars  =  cs.toString();  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CHARS[]  searchChars  =  cs.toString();	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
672	[BUG]  [BUGGY]  Context.checkNotNull(searchLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkNotNull(searchLength);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkNotNull(searchLength);	  if(searchLength    >    MAX_VALUE)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
673	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
674	[BUG]  [BUGGY]  return(searchLength  >  cs.length())?  null  :  searchChars[j];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(searchLength  >  cs.length())?  null  :  searchChars[j];  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchLength  >  cs.length())?  null  :  searchChars[j];	  return(searchLength    ==    cs.length())?    null    :    searchChars[j];    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
675	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  searchLength,  j);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  csLength,  j,  searchLength,  j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  csLength,  j,  searchLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    ch;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
676	[BUG]  [BUGGY]  return(ch!=  'n'  ||  ch  ==  'r');  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch!=  'n'  ||  ch  ==  'r');  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch!=  'n'  ||  ch  ==  'r');	  return(ch    ==    'n'    ||    ch    ==    'r');    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
677	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
678	[BUG]  [BUGGY]  if(j  >  0  ||  searchLength  >  MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(j  >  0  ||  searchLength  >  MAX_VALUE)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  >  0  ||  searchLength  >  MAX_VALUE)  {	  if(searchLength    >    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
679	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
680	[BUG]  [BUGGY]  return(j  <  0)?  null  :  j;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  <  0)?  null  :  j;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  <  0)?  null  :  j;	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
681	[BUG]  [BUGGY]  return(j!=  0)?  null  :  j;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j!=  0)?  null  :  j;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j!=  0)?  null  :  j;	  return(j    ==    0)?    null    :    j;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
682	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
683	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
684	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	  if(searchLength    >    0)    {    if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
685	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i];  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i];  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i];  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
686	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i].charAt(i);  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i].charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i].charAt(i);  if(ch!=  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
687	[BUG]  [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
688	[BUG]  [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  continue  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
689	[BUG]  [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
690	[BUG]  [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	try  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
691	[BUG]  [BUGGY]  if(searchLength  >  0  ||  ch!=  '.')  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  ch!=  '.')  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  ch!=  '.')  {	  if(searchLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
692	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  j,  csLength,  j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  j,  csLength,  j);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  j,  csLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
693	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  j,  csLength,  searchChars[j]));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  j,  csLength,  searchChars[j]));  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  j,  csLength,  searchChars[j]));	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
694	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  j,  csLength,  searchChars[j]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  j,  csLength,  searchChars[j]);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  j,  csLength,  searchChars[j]);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
695	[BUG]  [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
696	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
697	[BUG]  [BUGGY]  côte  edge  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  côte  edge  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	côte  edge  =  cs.charAt(i);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
698	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
699	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
700	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
701	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
702	[BUG]  [BUGGY]  return(j  ==  0)?  this  :  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(j  ==  0)?  this  :  cs.charAt(i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  this  :  cs.charAt(i);	  return    this;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
703	[BUG]  [BUGGY]  return(ch  ==  EMPTY)?  this  :  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  EMPTY)?  this  :  cs.charAt(i);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  EMPTY)?  this  :  cs.charAt(i);	  return    this;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
704	[BUG]  [BUGGY]  if(searchLength  >  MAX_LIMIT  ||  searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_LIMIT  ||  searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_LIMIT  ||  searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
705	[BUG]  [BUGGY]  if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(searchChars[j]  ==  ch)  {  continue	  if(searchLength    >    MAX_LIMIT)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
706	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }	  if(searchChars[j]!=    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
707	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  EMPTY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  EMPTY;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  EMPTY;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    null;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
708	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
709	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
710	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true;  }  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
711	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
712	[BUG]  [BUGGY]  if(searchChars[i]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]    ==    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
713	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	  if(searchChars[j]    ==    null)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
714	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
715	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
716	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  cs.length(),  ch,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  cs.length(),  ch,  INDEX_NOT_FOUND);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  cs.length(),  ch,  INDEX_NOT_FOUND);	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
717	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  searchLength,  cs.length());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  searchLength,  cs.length());  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  searchLength,  cs.length());	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
718	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  cs.length(),  ch,  INDEX_NOT_FOUND));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  cs.length(),  ch,  INDEX_NOT_FOUND));  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  cs.length(),  ch,  INDEX_NOT_FOUND));	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
719	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  i,  csLength,  j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  i,  csLength,  j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  i,  csLength,  j);	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
720	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
721	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i).charAt(j);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
722	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
723	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
724	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return	  if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
725	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)return  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j]  ==  ch)return  false;  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)return  false;	  ||    searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
726	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
727	[BUG]  [BUGGY]  Context.checkState(searchLength!=  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  Context.checkState(searchLength!=  Integer.MAX_VALUE);  [BUGGY]      }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Context.checkState(searchLength!=  Integer.MAX_VALUE);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
728	[BUG]  [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  j,  ch,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcăAndSet(searchChars,  cs.length(),  j,  ch,  INDEX_NOT_FOUND);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcăAndSet(searchChars,  cs.length(),  j,  ch,  INDEX_NOT_FOUND);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
729	[BUG]  [BUGGY]  foundAndReturn(cs,  i,  searchLength,  j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  foundAndReturn(cs,  i,  searchLength,  j);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	foundAndReturn(cs,  i,  searchLength,  j);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
730	[BUG]  [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	cearcă  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
731	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
732	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
733	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
734	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
735	[BUG]  [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	  if(searchChars[j]!=    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
736	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
737	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChar	  if(searchLength    >    MAX_ARRAY)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
738	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingChar(cs,  i,  searchLength,  ch);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  aughtExceptionHandler.handleMissingChar(cs,  i,  searchLength,  ch);  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	aughtExceptionHandler.handleMissingChar(cs,  i,  searchLength,  ch);	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
739	[BUG]  [BUGGY]  ||  searchChars[j].charAt(j)  ==  ch)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {        [BUGGY]  ||  searchChars[j].charAt(j)  ==  ch)  {  [BUGGY]      return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j].charAt(j)  ==  ch)  {	  ||    searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
