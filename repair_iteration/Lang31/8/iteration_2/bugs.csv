bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  return  false;  }	  return    false;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
9	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  return  this;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return  this;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return  this;	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toLowerCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toLowerCase();  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].toLowerCase();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	throw  new  IllegalArgumentException( " ");	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
17	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j];  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j];	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  ch;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  ch;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
19	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  false  :  ch;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  false  :  ch;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  false  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
20	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(j);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(j);  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  cs.charAt(j);	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
21	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  	7	None	replace
24	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  true;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  true;  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  true;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  return  true;	  if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  	3	None	replace
27	[BUG]  [BUGGY]  searchChars[j]  =  cs.charAt(i);  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  searchChars[j]  =  cs.charAt(i);  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  cs.charAt(i);	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	15	None	replace
28	[BUG]  [BUGGY]  bucket[j]  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  bucket[j]  =  cs.charAt(i);  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	bucket[j]  =  cs.charAt(i);	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]  ==  ch)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  	10	None	replace
34	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  	18	None	replace
35	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  	18	None	replace
36	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
37	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  ch)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  return  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchChars[j]!=  ch)  {  return  true;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]!=  ch)  {  return  true;	  if(searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  null;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  false  :  null;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
43	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  null;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  true  :  null;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
44	[BUG]  [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(j  ==  '.'  ||  ch  ==  ',')?  true  :  null;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  '.'  ||  ch  ==  ',')?  true  :  null;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
45	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  true;  }	  if(searchLength    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  true;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  true;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]!=  ch))  {  return  true;	  if(searchLength    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  true;	  if(searchLength    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  >  0  &&  searchChars[j]  ==  ch))  {  return  true;  }	  if(searchLength    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
53	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
54	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  }	  if(searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
55	[BUG]  [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  true;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||(searchLength  ==  0  &&  searchChars[j]!=  ch))  {  return  true;	  if(searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
56	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  return  false;  }	  if(searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  null)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchChars[j]  ==  ch)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchChars[j]  ==  ch)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
62	[BUG]  [BUGGY]  CharSequence  cs[]  =  cs.charAt(i);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  CharSequence  cs[]  =  cs.charAt(i);  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  cs.charAt(i);	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  CharSequence  cs[]  =  cs.charAt(j);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  CharSequence  cs[]  =  cs.charAt(j);  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	CharSequence  cs[]  =  cs.charAt(j);	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  Char  ch  =  searchChars[j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  Char  ch  =  searchChars[j];  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	Char  ch  =  searchChars[j];	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
67	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
70	[BUG]  [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length();  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars[j]  ==  ch)?  null  :  searchChars[j].length();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
71	[BUG]  [BUGGY]  return(searchLength  ==  cs.length())?  null  :  searchChars[j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(searchLength  ==  cs.length())?  null  :  searchChars[j];  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchLength  ==  cs.length())?  null  :  searchChars[j];	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  if(searchLength  >  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  return  false;  }	  if(searchLength    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
77	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
78	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  false;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  false;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
79	[BUG]  [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  false  :  ch;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(searchChars  ==  '.'  ||  ch  ==  ',')?  false  :  ch;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(searchChars  ==  '.'  ||  ch  ==  ',')?  false  :  ch;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
81	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
82	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  if(searchLength  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
86	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLimit  ==  0)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
87	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLimit  >  0)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
88	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
89	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch  ==  ch)  {  return  true;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
90	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  true;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
91	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  true;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
92	[BUG]  [BUGGY]  ||  searchLength  ==  0)  {  return  true;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  ||  searchLength  ==  0)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	||  searchLength  ==  0)  {  return  true;  }	  if(searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
93	[BUG]  [BUGGY]  if(searchLength  >  MAX_NOT_FOUND)  {  return  false;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_NOT_FOUND)  {  return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_NOT_FOUND)  {  return  false;  }	  return    false;    	non-compiled	[CE]  not  a  statement	1	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
95	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  CharSequence  cs  =  cs.charAt(i);  if(cs!=  null)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
99	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
101	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
103	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
105	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
106	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	7	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	7	None	replace
108	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	7	None	replace
109	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  not  a  statement	7	None	replace
110	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	9	None	replace
111	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	9	None	replace
112	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	9	None	replace
113	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  not  a  statement	9	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
115	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
117	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
118	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
119	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
120	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  searchChars[j]  =  cs.charAt(i);  }	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
122	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
123	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
125	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  true  :  INDEX_NOT_FOUND;	  return(ch    ==    '.'    ||    ch    ==    ',')?    true    :    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch!=  '-')  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
127	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
128	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]  ==  ch)return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]  ==  ch)return  false;  }	  if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
129	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  true;  }  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
130	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
131	[BUG]  [BUGGY]  if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
132	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    continue    	non-compiled	[CE]  >  expected	9	None	replace
133	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    searchChars[j]    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  >  expected	15	None	replace
134	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  true;  }	      	non-compiled	[CE]  >  expected	5	None	replace
135	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  ch;  }  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  ch;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '-')  {  return  ch;  }	      	non-compiled	[CE]  >  expected	5	None	replace
136	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)return  false;  }  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchChars[j]!=  ch)return  false;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchChars[j]!=  ch)return  false;  }	  if(searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  >  expected	4	None	replace
137	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0  ||  searchChars[j]  ==  ch)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  >  expected	10	None	replace
138	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY  ||  searchLength  >  MAX_ARRAY)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  >  expected	10	None	replace
139	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_VALUE)  {  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE)  {	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  >  expected	10	None	replace
140	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  >  expected	18	None	replace
141	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  return  true;  }  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    true;    }    	non-compiled	[CE]  	13	None	replace
142	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  true;  }  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  	11	None	replace
143	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  if(ch!=  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    if(ch!=    ch)    {    return    true;    }    	non-compiled	[CE]  	11	None	replace
144	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  true;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  true;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  0)  {  return  true;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	6	None	replace
145	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	6	None	replace
146	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  	6	None	replace
147	[BUG]  [BUGGY]  return(j  ==  0)?  null  :  j;  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(j  ==  0)?  null  :  j;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(j  ==  0)?  null  :  j;	  return    null;    	non-compiled	[CE]  	21	None	replace
148	[BUG]  [BUGGY]  return(ch  ==  EMPTY)?  null  :  ch;  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  EMPTY)?  null  :  ch;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  EMPTY)?  null  :  ch;	  return    null;    	non-compiled	[CE]  	21	None	replace
149	[BUG]  [BUGGY]  return(ch  ==  'n'  ||  ch  ==  'r');  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  'n'  ||  ch  ==  'r');  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  'n'  ||  ch  ==  'r');	  return    null;    	non-compiled	[CE]  	21	None	replace
150	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  if(ch  <  ch)  {  return  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  	19	None	replace
151	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  <  ch)  {  continue  false;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    <    ch)    {    return    false;    }    	non-compiled	[CE]  	19	None	replace
152	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  j++)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  j++)  {  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  j++)  {  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
153	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i).charAt(j);  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    }    	non-compiled	[CE]  	7	None	replace
154	[BUG]  [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_VALUE)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  	8	None	replace
155	[BUG]  [BUGGY]  if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(searchLength  >  MAX_ARRAY)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }	      if(searchChars[j]    ==    ch)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    break;    }    	non-compiled	[CE]  	8	None	replace
156	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  Boolean.TRUE  :  Boolean.FALSE;	  return(ch    ==    '.'    ||    ch    ==    ',')?    false    :    ch;    	non-compiled	[CE]  	20	None	replace
157	[BUG]  [BUGGY]  if(j  ==  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {      [BUGGY]  if(j  ==  0)  {  return  true;  }  [BUGGY]    }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1452	1452	2	replace	if(j  ==  0)  {  return  true;  }	  if(searchLength    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
