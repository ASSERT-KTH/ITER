bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars.charAt(i)+  1;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars.charAt(i)+  1;	  char    ch    =    searchChars.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars.charAt(i  +  2);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars.charAt(i  +  2);	  char    ch    =    searchChars.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
3	[BUG]  [BUGGY]  int  len  =  searchChars[i].length()  +  csLength  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars[i].length()  +  csLength  +  1;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars[i].length()  +  csLength  +  1;	  int    len    =    searchChars[i].length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  int  len  =  searchChars[i].length()  /  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars[i].length()  /  csLength;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars[i].length()  /  csLength;	  int    len    =    searchChars[i].length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length  -  2;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length  -  2;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
6	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length  -  1  +  csLength;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length  -  1  +  csLength;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
7	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  i;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length  -  1  +  i;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length  -  1  +  i;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
8	[BUG]  [BUGGY]  int  len  =  searchChars.length()  /  i;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length()  /  i;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length()  /  i;	  int    len    =    searchChars.length()    +    i;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
9	[BUG]  [BUGGY]  int  len  =  searchChars.length()  +  i  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length()  +  i  +  1;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length()  +  i  +  1;	  int    len    =    searchChars.length()    +    i;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
10	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)this.searchChars.get(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)this.searchChars.get(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)this.searchChars.get(i  +  1);	  CharSequence    cs    =(CharSequence)this.searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
11	[BUG]  [BUGGY]  CharSequence  cs  =(charSequence)this.searchChars.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(charSequence)this.searchChars.get(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(charSequence)this.searchChars.get(i);	  CharSequence    cs    =(CharSequence)this.searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
12	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  cs.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  cs.length);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  cs.length);	  char[]    searchChars    =    cs.getChars(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
13	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getChars(i,  searchLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getChars(i,  searchLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getChars(i,  searchLength);	  char[]    searchChars    =    cs.getChars(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
14	[BUG]  [BUGGY]  int  searchLimit  =  searchChars[i].length()  +  csLength  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  searchLimit  =  searchChars[i].length()  +  csLength  +  1;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  searchLimit  =  searchChars[i].length()  +  csLength  +  1;	  int    searchLimit    =    searchChars[i].length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  int  searchLimit  =  searchChars[i].length()  /  csLength;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  searchLimit  =  searchChars[i].length()  /  csLength;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  searchLimit  =  searchChars[i].length()  /  csLength;	  int    searchLimit    =    searchChars[i].length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.getCharSequence(i,  csLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars.getCharSequence(i,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars.getCharSequence(i,  csLength);	  CharSequence    cs    =    searchChars.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
17	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.getCharSequence(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars.getCharSequence(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars.getCharSequence(i  +  1);	  CharSequence    cs    =    searchChars.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
18	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i,  searchLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i,  searchLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i,  searchLength);	  char    ch    =    searchChars[i].charAt(i,    csLength);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  String  ch  =  searchChars[i].charAt(i,  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  searchChars[i].charAt(i,  csLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  searchChars[i].charAt(i,  csLength);	  char    ch    =    searchChars[i].charAt(i,    csLength);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i,  csLength  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i,  csLength  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i,  csLength  +  1);	  char    ch    =    searchChars[i].charAt(i,    csLength);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
21	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  csLength);	  char[]    searchChars    =    cs.toCharArray(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  cs.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  cs.length);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  cs.length);	  char[]    searchChars    =    cs.toCharArray(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  String  ch  =  searchChars[i].charAt(i++);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  searchChars[i].charAt(i++);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  searchChars[i].charAt(i++);	  char    ch    =    searchChars[i].charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
24	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchLength  +  1);	  char[]    searchChars    =    cs.getChars(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
25	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  2);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i  +  2);	  char    ch    =    searchChars[i].charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  String  ch  =  searchChars[i].charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  searchChars[i].charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  searchChars[i].charAt(i  +  1);	  char    ch    =    searchChars[i].charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
27	[BUG]  [BUGGY]  char  ch  =  searchedChars.charAt(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchedChars.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchedChars.charAt(i);	  String    ch    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  1);	  char[]    searchChars    =    cs.toCharArray(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength,  index);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength,  index);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLength,  index);	  char[]    searchChars    =    cs.toCharArray(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength,  cs.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength,  cs.length);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLength,  cs.length);	  char[]    searchChars    =    cs.toCharArray(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  CharSequence  cs  =(char)cs.get(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(char)cs.get(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(char)cs.get(i  +  1);	  CharSequence    cs    =(char)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  char  cs  =(char)cs.get(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  cs  =(char)cs.get(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  cs  =(char)cs.get(i);	  CharSequence    cs    =(char)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  Char  ch  =  searchChars[i].charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  ch  =  searchChars[i].charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  ch  =  searchChars[i].charAt(i  +  1);	  Char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
34	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  cs.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  cs.length);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchLength,  cs.length);	  char[]    searchChars    =    cs.getChars(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  index);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  index);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchLength,  index);	  char[]    searchChars    =    cs.getChars(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  SHORT_LIMIT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  SHORT_LIMIT);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchLength,  SHORT_LIMIT);	  char[]    searchChars    =    cs.getChars(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  String  len  =  searchChars[i].length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  len  =  searchChars[i].length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  len  =  searchChars[i].length();	  char    len    =    searchChars[i].length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  Char  len  =  searchChars[i].length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  len  =  searchChars[i].length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  len  =  searchChars[i].length();	  char    len    =    searchChars[i].length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  CharSequence  cs  =(charSequence)searchChars.get(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(charSequence)searchChars.get(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(charSequence)searchChars.get(i);	  CharSequence    cs    =(CharSequence)searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)searchChars[i];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)searchChars[i];  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)searchChars[i];	  CharSequence    cs    =(CharSequence)searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  char  searchLimit  =  searchChars[i].length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  searchLimit  =  searchChars[i].length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  searchLimit  =  searchChars[i].length();	  int    searchLimit    =    searchChars[i].length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  searchLimit  =  cs.length()  -  1;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  searchLimit  =  cs.length()  -  1;	  int    searchLimit    =    searchChars[i].length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  String  cs  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  cs  =  cs.charAt(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  cs  =  cs.charAt(i);	  char    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  char  cs  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  cs  =  searchChars.charAt(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  cs  =  searchChars.charAt(i);	  char    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  char  cs  =  searchChars[i];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  cs  =  searchChars[i];  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  cs  =  searchChars[i];	  char    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(csLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(csLength);	  String    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
47	[BUG]  [BUGGY]  CharSequence  cs  =  cs[i];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs[i];  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs[i];	  CharSequence    cs    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i],  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i],  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i],  csLength);	  CharSequence    cs    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  CharSequence  ch  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  ch  =  searchChars.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  ch  =  searchChars.charAt(i);	  CharSequence    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  CharSequence  ch  =  searchChars[i];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  ch  =  searchChars[i];  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  ch  =  searchChars[i];	  CharSequence    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i).charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i).charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i).charAt(i  +  1);	  char    ch    =    searchChars[i].charAt(i).charAt(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
52	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i).charAt(i++);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i).charAt(i++);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i).charAt(i++);	  char    ch    =    searchChars[i].charAt(i).charAt(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
53	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  csLength);	  char[]    searchChars    =    cs.getChars(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
54	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  cs.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  cs.length);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  cs.length);	  char[]    searchChars    =    cs.getChars(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
55	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  cs.length());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  cs.length());  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  cs.length());	  char[]    searchChars    =    cs.getChars(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
56	[BUG]  [BUGGY]  CharSequence  cs  =(charSequence)cs.get(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(charSequence)cs.get(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(charSequence)cs.get(i  +  1);	  CharSequence    cs    =(charSequence)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  CharSequence  cs  =(charSequence)cs.get(i,  searchCharsLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(charSequence)cs.get(i,  searchCharsLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(charSequence)cs.get(i,  searchCharsLength);	  CharSequence    cs    =(charSequence)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(csLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].getCharSequence(csLength);	  CharSequence    cs    =    searchChars[i].getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
59	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(i,  csLength);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(i,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].getCharSequence(i,  csLength);	  CharSequence    cs    =    searchChars[i].getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
60	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(i  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].getCharSequence(i  +  1);	  CharSequence    cs    =    searchChars[i].getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
61	[BUG]  [BUGGY]  String  ch  =  cs[i].charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  cs[i].charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  cs[i].charAt(i);	  char    ch    =    cs[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
62	[BUG]  [BUGGY]  char  ch  =  cs[i].charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  cs[i].charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  cs[i].charAt(i  +  1);	  char    ch    =    cs[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
63	[BUG]  [BUGGY]  char  len  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  len  =  searchChars.length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  len  =  searchChars.length();	  int    len    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
64	[BUG]  [BUGGY]  int  len  =  searchCharsLength  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchCharsLength  -  1;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchCharsLength  -  1;	  int    len    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
65	[BUG]  [BUGGY]  int  len  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  cs.length()  -  1;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  cs.length()  -  1;	  int    len    =    searchChars[i].length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].charAt(i  +  1);	  CharSequence    cs    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
67	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i,  csLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].charAt(i,  csLength);	  CharSequence    cs    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
68	[BUG]  [BUGGY]  char  cs  =  searchChars[i].charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  cs  =  searchChars[i].charAt(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  cs  =  searchChars[i].charAt(i);	  CharSequence    cs    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
69	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i],  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i],  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i],  csLength);	  CharSequence    cs    =    cs.getCharSequence(i,    searchChars[i]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
70	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchLength);	  CharSequence    cs    =    cs.getCharSequence(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  csLength);	  CharSequence    cs    =    cs.getCharSequence(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
72	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  cs.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  cs.length);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  cs.length);	  CharSequence    cs    =    cs.getCharSequence(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
73	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  +  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  +  2);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)cs.get(i  +  2);	  CharSequence    cs    =(CharSequence)cs.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
74	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  i;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length  +  i;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length  +  i;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
75	[BUG]  [BUGGY]  char  len  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  len  =  searchChars.length;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  len  =  searchChars.length;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
76	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  INDEX_NOT_FOUND);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  INDEX_NOT_FOUND);	  char[]    searchChars    =    cs.getChars(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
77	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchCharsLength  +  1);	  char[]    searchChars    =    cs.getChars(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
78	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars.charAt(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars.charAt(i  +  1);	  CharSequence    cs    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  int  len  =  searchChars[i].length()  -  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars[i].length()  -  csLength;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars[i].length()  -  csLength;	  int    len    =    searchChars[i].length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
80	[BUG]  [BUGGY]  Integer  searchLimit  =  searchChars[i].length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Integer  searchLimit  =  searchChars[i].length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Integer  searchLimit  =  searchChars[i].length();	  int    searchLimit    =    searchChars[i].length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  int  len  =  cs.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  cs.length;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  cs.length;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
82	[BUG]  [BUGGY]  int  len  =  searchChars[i].length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars[i].length;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars[i].length;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
83	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  INDEX_NOT_FOUND);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchCharsLength,  INDEX_NOT_FOUND);	  CharSequence    cs    =    cs.getCharSequence(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
84	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i],  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i],  csLength;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i],  csLength;	  CharSequence    cs    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  2);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i  +  2);	  char[]    searchChars    =    cs.toCharArray(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  1,  searchLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  1,  searchLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i  +  1,  searchLength);	  char    ch    =    searchChars[i].charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  char  cs  =(char)searchChars.get(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  cs  =(char)searchChars.get(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  cs  =(char)searchChars.get(i);	  CharSequence    cs    =(CharSequence)searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
88	[BUG]  [BUGGY]  CharSequence  ch  =  searchChars[i].charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  ch  =  searchChars[i].charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  ch  =  searchChars[i].charAt(i);	  CharSequence    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
89	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchCharsLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchCharsLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchCharsLength);	  char[]    searchChars    =    cs.getChars(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
90	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  csLimit);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  csLimit);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchLength,  csLimit);	  char[]    searchChars    =    cs.getChars(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
91	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i++);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i++);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].charAt(i++);	  CharSequence    cs    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
92	[BUG]  [BUGGY]  int  len  =  searchChars.length()  -  i;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  searchChars.length()  -  i;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  searchChars.length()  -  i;	  int    len    =    searchChars.length()    +    i;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
93	[BUG]  [BUGGY]  Integer  len  =  searchChars[i].length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Integer  len  =  searchChars[i].length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Integer  len  =  searchChars[i].length();	  int    len    =    searchChars[i].length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars.charAt(i  *  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars.charAt(i  *  1);	  char    ch    =    searchChars.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
95	[BUG]  [BUGGY]  CharSequence  cs  =(char)searchChars.get(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(char)searchChars.get(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(char)searchChars.get(i);	  CharSequence    cs    =(char)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
96	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchCharsLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchCharsLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i  +  1,  searchCharsLength);	  char[]    searchChars    =    cs.toCharArray(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
97	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  inDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  inDEX_NOT_FOUND);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLength,  inDEX_NOT_FOUND);	  char[]    searchChars    =    cs.toCharArray(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  Char  ch  =  searchChars[i].charValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  ch  =  searchChars[i].charValue();  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  ch  =  searchChars[i].charValue();	  Char    ch    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
99	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)searchChars.get(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)searchChars.get(i  +  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)searchChars.get(i  +  1);	  CharSequence    cs    =(CharSequence)cs.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  INDEX_NOT_FOUND);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchLength,  INDEX_NOT_FOUND);	  char[]    searchChars    =    cs.getChars(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLength,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchLength,  csLength);	  char[]    searchChars    =    cs.getChars(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
102	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  2);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  2);	  char[]    searchChars    =    cs.toCharArray(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
103	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  3);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLength  +  3);	  char[]    searchChars    =    cs.toCharArray(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
104	[BUG]  [BUGGY]  Char  ch  =  searchChars[i].charAt(i++);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  ch  =  searchChars[i].charAt(i++);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  ch  =  searchChars[i].charAt(i++);	  Char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
105	[BUG]  [BUGGY]  String  ch  =  searchChars[i]  +  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  searchChars[i]  +  INDEX_NOT_FOUND;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  searchChars[i]  +  INDEX_NOT_FOUND;	  String    ch    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
106	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  1,  csLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  1,  csLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i  +  1,  csLength);	  char    ch    =    searchChars[i].charAt(i,    csLength);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i],  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i],  null);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i],  null);	  CharSequence    cs    =    cs.getCharSequence(i,    searchChars[i]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
108	[BUG]  [BUGGY]  Char  ch  =  cs[i];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  ch  =  cs[i];  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  ch  =  cs[i];	  Char    ch    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  int  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  len  =  cs.length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  len  =  cs.length();	  int    len    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
110	[BUG]  [BUGGY]  CharSequence  cs  =  cs.toCharArray(i  +  1,  searchLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.toCharArray(i  +  1,  searchLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.toCharArray(i  +  1,  searchLength);	  char[]    searchChars    =    cs.toCharArray(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
111	[BUG]  [BUGGY]  int  searchLimit  =  searchChars[i].length()  -  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  searchLimit  =  searchChars[i].length()  -  csLength;  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  searchLimit  =  searchChars[i].length()  -  csLength;	  int    searchLimit    =    searchChars[i].length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
112	[BUG]  [BUGGY]  Char  ch  =  cs[i].charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  ch  =  cs[i].charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  ch  =  cs[i].charAt(i);	  char    ch    =    cs[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
113	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i  +  1,  csLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars.charAt(i  +  1,  csLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars.charAt(i  +  1,  csLength);	  char    ch    =    searchChars.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
114	[BUG]  [BUGGY]  String  ch  =  searchChars.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  searchChars.charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  searchChars.charAt(i  +  1);	  char    ch    =    searchChars.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
115	[BUG]  [BUGGY]  int  searchLimit  =  searchesChars[i].length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  int  searchLimit  =  searchesChars[i].length();  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	int  searchLimit  =  searchesChars[i].length();	  int    searchLimit    =    searchChars[i].length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i).charAt(csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(i).charAt(csLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char  ch  =  searchChars[i].charAt(i).charAt(csLength);	  char    ch    =    searchChars[i].charAt(i).charAt(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
117	[BUG]  [BUGGY]  CharSequence  cs  =  cs.toCharArray(i,  searchLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  cs.toCharArray(i,  searchLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  cs.toCharArray(i,  searchLength);	  char[]    searchChars    =    cs.toCharArray(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  csLength);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  csLength);	  char[]    searchChars    =    cs.getChars(i,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
119	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  *  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  *  1);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)cs.get(i  *  1);	  CharSequence    cs    =(CharSequence)cs.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
120	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  +  1,  searchCharsLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  +  1,  searchCharsLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)cs.get(i  +  1,  searchCharsLength);	  CharSequence    cs    =(CharSequence)cs.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  String  ch  =  searchChars[i].charValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  String  ch  =  searchChars[i].charValue();  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	String  ch  =  searchChars[i].charValue();	  String    ch    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
122	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i).charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i).charAt(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].charAt(i).charAt(i);	  CharSequence    cs    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
123	[BUG]  [BUGGY]  Char  cs  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  Char  cs  =  cs.charAt(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	Char  cs  =  cs.charAt(i);	  char    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
124	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  csLength);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i,  searchCharsLength,  csLength);	  char[]    searchChars    =    cs.getChars(i,    searchCharsLength);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
125	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchCharsLength,  csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchCharsLength,  csLength);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchCharsLength,  csLength);	  char[]    searchChars    =    cs.getChars(i    +    1,    searchLength);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
126	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(cs[i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(cs[i]);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].getCharSequence(cs[i]);	  CharSequence    cs    =    searchChars[i].getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
127	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(cs,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(cs,  i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  searchChars[i].getCharSequence(cs,  i);	  CharSequence    cs    =    searchChars[i].getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
128	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)super.searchChars.get(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)super.searchChars.get(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)super.searchChars.get(i);	  CharSequence    cs    =(CharSequence)this.searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
129	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)this.searchChars.get(i).charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =(CharSequence)this.searchChars.get(i).charAt(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =(CharSequence)this.searchChars.get(i).charAt(i);	  CharSequence    cs    =(CharSequence)this.searchChars.get(i);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
130	[BUG]  [BUGGY]  CharSequence  cs  =  this.searchChars.getCharSequence(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {      [BUGGY]  CharSequence  cs  =  this.searchChars.getCharSequence(i);  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1447	1447	2	replace	CharSequence  cs  =  this.searchChars.getCharSequence(i);	  CharSequence    cs    =    searchChars.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
