bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length  -  1;  j++)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchChars.length  -  1;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  searchChars.length  -  1;  j++)  {	  for(int    j    =    0;    j    <    searchChars.length;    j++)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length();  j++)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchChars.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  searchChars.length();  j++)  {	  for(int    j    =    0;    j    <    searchChars.length;    j++)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
9	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
10	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
11	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  ch  =  cs.charAt(i  +  1);	  char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i,  searchCharsLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  ch  =  cs.charAt(i,  searchCharsLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  ch  =  cs.charAt(i,  searchCharsLength);	  char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  ch  =  searchChars.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  ch  =  searchChars.charAt(i);	  char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
15	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchCharsLength.length();  j++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchCharsLength.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  searchCharsLength.length();  j++)  {	  for(int    j    =    0;    j    <    ch.length();    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  len.length();  j++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  len.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  len.length();  j++)  {	  for(int    j    =    0;    j    <    ch.length();    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
18	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs[i];  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
19	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs[i];  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
20	[BUG]  [BUGGY]  char  j  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  j  =  cs.charAt(i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  j  =  cs.charAt(i  +  1);	  char    j    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  char  j  =  cs.charAt(i,  searchLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  j  =  cs.charAt(i,  searchLength);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  j  =  cs.charAt(i,  searchLength);	  char    j    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
22	[BUG]  [BUGGY]  String  j  =  cs.charAt(i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  String  j  =  cs.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	String  j  =  cs.charAt(i);	  char    j    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	13	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchChars.length;    i++)    {    char    j    =    cs.charAt(i);    }    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	19	None	replace
25	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	20	None	replace
26	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],String[],boolean,boolean)  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],String[],boolean,boolean)	39	None	add
27	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],String[],boolean,boolean)  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],String[],boolean,boolean)	39	None	add
28	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],boolean,boolean)  [FE]            [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  	non-compiled	[CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],boolean,boolean)	39	None	add
29	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  }  [CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],boolean,boolean)  [FE]              [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  }	  	non-compiled	[CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],boolean,boolean)	39	None	add
30	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  char.length();  j++)  {  [CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],boolean,boolean)  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  char.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  char.length();  j++)  {	  for(int    j    =    0;    j    <    char.length;    j++)    {    	non-compiled	[CE]  no  suitable  method  found  for  replaceEach(String,String[],String[],boolean,boolean)	46	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  type	37	None	add
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  type	37	None	add
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  For(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  For(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    For(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  type	37	None	add
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]              [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  	non-compiled	[CE]  illegal  start  of  type	37	None	add
35	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
36	[BUG]  [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
40	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
41	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
42	[BUG]  [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
43	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
44	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  }  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
45	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
46	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
47	[BUG]  [BUGGY]  int  searchLimit  =  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  =  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  =  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
48	[BUG]  [BUGGY]  int  searchLimit  >  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  1)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
49	[BUG]  [BUGGY]  int  searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  MAX_LIMIT)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
50	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
51	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
52	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]!=  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
53	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
55	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
56	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLength  =  searchChars.length  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLength  =  searchChars.length  -  1;	  int    searchLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
57	[BUG]  [BUGGY]  int  searchLength  =  ch.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLength  =  ch.length;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLength  =  ch.length;	  int    searchLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
58	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  +  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLength  =  searchChars.length  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLength  =  searchChars.length  +  1;	  int    searchLength    =    searchChars.length;    	non-compiled	[CE]  ';'  expected	29	None	replace
59	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i,  searchLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  ch  =  cs.charAt(i,  searchLength);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  ch  =  cs.charAt(i,  searchLength);	  Char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
61	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchChars.length;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[i]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0  ||  searchChars[i]!=  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0  ||  searchChars[i]!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[i]!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[i]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[i]!=  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  if(searchChars[i]!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[i]!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
68	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
69	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
70	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
71	[BUG]  [BUGGY]  int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchCharsLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  if(searchLength  >  0  ||  searchChars[i]  ==  ch)  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0  ||  searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0  ||  searchChars[i]  ==  ch)  {  return  false;  }	  if(searchLength    >    0    ||    searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
76	[BUG]  [BUGGY]  if(searchLength  >  0  &&  searchChars[i]  ==  ch)  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0  &&  searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0  &&  searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    >    0    ||    searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
77	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
78	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
79	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
80	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    ch;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
81	[BUG]  [BUGGY]  Integer  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Integer  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	Integer  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
82	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
87	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  ch  =  searchChars[i].charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  ch  =  searchChars[i].charAt(i);	  char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
91	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length;  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLength  =  searchChars.length;  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLength  =  searchChars.length;  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
92	[BUG]  [BUGGY]  Char  ch  =  searchChars.charAt(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Char  ch  =  searchChars.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	Char  ch  =  searchChars.charAt(i);	  Char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
93	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  }	  if(searchLength    ==    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  not  a  statement	23	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ch;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  ch;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  ch;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
95	[BUG]  [BUGGY]  char  j  =  searchChars.charAt(i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  j  =  searchChars.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	char  j  =  searchChars.charAt(i);	  char    j    =    cs.charAt(i);    	non-compiled	[CE]  not  a  statement	17	None	replace
96	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLength.length();  j++)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchLength.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  searchLength.length();  j++)  {	  for(int    j    =    0;    j    <    ch.length();    j++)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
97	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  not  a  statement  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  not  a  statement	36	None	replace
98	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
99	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
100	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
101	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  true	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
102	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
103	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
104	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
105	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
106	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
107	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
108	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
109	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!Character.isDigit(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
110	[BUG]  [BUGGY]  if(searchLength!=  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
113	[BUG]  [BUGGY]  Integer  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Integer  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	Integer  searchLimit  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  String  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    String    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
114	[BUG]  [BUGGY]  if(searchLength!=  0)  {  if(searchChars[i]!=  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  0)  {  if(searchChars[i]!=  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  0)  {  if(searchChars[i]!=  ch)  {  return  true;  }	  if(searchLength    >    0)    {    if(searchChars[i]!=    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
116	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchChars.length;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
117	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  +  i;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLength  =  searchChars.length  +  i;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLength  =  searchChars.length  +  i;	  int    searchLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);	  for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
120	[BUG]  [BUGGY]  if(searchLength  ==  0  ||  searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0  ||  searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  ==  0  ||  searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    >    0    ||    searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
121	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i  +  1);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  ch  =  cs.charAt(i  +  1);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
122	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    if(searchLength  ==  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
123	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  cs.length)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  cs.length)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
124	[BUG]  [BUGGY]  Char  j  =  cs.charAt(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Char  j  =  cs.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	Char  j  =  cs.charAt(i);	  char    j    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
126	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  this.searchChars.length;  j++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  this.searchChars.length;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  this.searchChars.length;  j++)  {	  for(int    j    =    0;    j    <    searchChars.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
128	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length  +  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchChars.length  +  1;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  searchChars.length  +  1;  j++)  {	  for(int    j    =    0;    j    <    searchChars.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
129	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLength  =  searchChars.length  -  2;  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLength  =  searchChars.length  -  2;	  int    searchLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
130	[BUG]  [BUGGY]  int  searchLimit  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchLength    >    0)    {    for(int    j    =    0;    j    <    csLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  String  ch  =  cs.charAt(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  String  ch  =  cs.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	String  ch  =  cs.charAt(i);	  char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
132	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
133	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  }  [CE]  illegal  start  of  expression  [FE]          [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  return  true;  }  [CE]  illegal  start  of  expression  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
136	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
137	[BUG]  [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength!=  cs.length)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
138	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  j  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [CE]  <identifier>  expected  [FE]        [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  if(searchLength  ==  0)  {  for(int  j  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength    ==    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true    if(searchLength  ==  0)  {  for(int  j  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true	  	non-compiled	[CE]  <identifier>  expected	35	None	add
139	[BUG]  [BUGGY]  if(ch  >=  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(ch  >=  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(ch  >=  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLength    >=    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
140	[BUG]  [BUGGY]  int  searchLimit  <  =  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLimit  <  =  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	int  searchLimit  <  =  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	  int    searchLimit    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchLength;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  this.searchLength;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
142	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)return  true;  }	  if(searchLength    >    0)    {    if(searchChars[i]!=    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  j  =  cs.charAt(i);  if(!isEmpty(ch))  {  return  false;  }	  if(searchLength    >    0)    {    for(int    i    =    0;    i    <    csLength;    i++)    {    char    j    =    cs.charAt(i);    if(!isEmpty(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
