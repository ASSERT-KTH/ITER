bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLength;  j++)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]  for(int  j  =  0;  j  <  csLength;  j++)  {  [BUGGY]  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  csLength;  j++)  {	for  (int  j  =  0;  j  <  searchLength;  j++)  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ch;  j++)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]  for(int  j  =  0;  j  <  ch;  j++)  {  [BUGGY]  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  ch;  j++)  {	for  (int  j  =  0;  j  <  searchLength;  j++)  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ch.length;  j++)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]  for(int  j  =  0;  j  <  ch.length;  j++)  {  [BUGGY]  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	for(int  j  =  0;  j  <  ch.length;  j++)  {	for  (int  j  =  0;  j  <  searchLength;  j++)  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    [BUGGY]  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	  	for  (int  j  =  0;  j  <  searchLength;  j++)  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
6	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
7	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
8	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
9	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
10	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
11	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
12	[BUG]  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
13	[BUG]  [BUGGY]    if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]    if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1448	1448	2	replace	    if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  type	12	None	add
