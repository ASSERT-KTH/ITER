bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  -  4;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  -  4;	  int    len    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
2	[BUG]  [BUGGY]  int  len  =  searchChars.length  /  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  /  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  /  2;	  int    len    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
3	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLength  =  searchChars.length  +  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  +  2;	  int    csLength    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
4	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  /  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLength  =  searchChars.length  /  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  /  1;	  int    csLength    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
5	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  /  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  /  1;	  int    searchLimit    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  +  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  +  2;	  int    searchLimit    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  int  searchLimit  =  cs.length  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length  +  1;	  int    searchLimit    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getQualifiedName().toCharArray();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getQualifiedName().toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getQualifiedName().toCharArray();	  char[]    searchChars    =    cs.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
9	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getQualifiedName().trim();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getQualifiedName().trim();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getQualifiedName().trim();	  char[]    searchChars    =    cs.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
10	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getQualifiedName()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getQualifiedName()  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getQualifiedName()  +  1;	  char[]    searchChars    =    cs.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  int  len  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length()  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length()  -  1;	  int    len    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  Integer  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Integer  csLimit  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Integer  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
13	[BUG]  [BUGGY]  char  searchLength  =   "java.util.ArrayList ";  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =   "java.util.ArrayList ";  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =   "java.util.ArrayList ";	  int    searchLength    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
14	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  +  1;	  int    csLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
15	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  +  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  +  csLength;	  int    searchLimit    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  /  cs.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  /  cs.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  /  cs.length;	  int    searchLimit    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  int  searchLimit  =  csLimit;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  csLimit;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  csLimit;	  int    searchLimit    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
18	[BUG]  [BUGGY]  int  searchLimit  =  csLength  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  csLength  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  csLength  +  1;	  int    searchLimit    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
19	[BUG]  [BUGGY]  Integer  searchLength  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Integer  searchLength  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Integer  searchLength  =  cs.length();	  int    searchLength    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
20	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length()  +  cs.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length()  +  cs.length;	  int    searchLength    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
21	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  /  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  /  2;	  int    searchLength    =    searchChars.length    +    2;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  int  len  =  searchChars.length  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  /  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  /  1;	  int    len    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
23	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  +  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  +  2;	  int    len    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
24	[BUG]  [BUGGY]  int  len  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length()  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length()  +  1;	  int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  char  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  len  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  len  =  cs.length();	  int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  +  csLength;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  +  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  +  csLength;	  int    searchLength    =    csLength    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  int  searchLength  =  searchCharsLength  +  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchCharsLength  +  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchCharsLength  +  cs.length;	  int    searchLength    =    csLength    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  char  searchLength  =  searchChars.length  +  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =  searchChars.length  +  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  searchChars.length  +  csLength;	  int    searchLength    =    csLength    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  String  searchLength  =  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String  searchLength  =  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String  searchLength  =  csLength;	  char    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  char  searchLength  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =  searchChars.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  searchChars.length;	  char    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  char  searchLength  =  csLength  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =  csLength  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  csLength  +  1;	  char    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length()  *  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length()  *  searchChars.length;	  int    searchLimit    =    searchChars.length()    *    cs.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
33	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  -  cs.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  -  cs.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  -  cs.length;	  int    searchLimit    =    searchChars.length()    *    cs.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
34	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  *  csLength;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  *  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  *  csLength;	  int    searchLimit    =    searchChars.length()    *    cs.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
35	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength  +  1].toCharArray();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength  +  1].toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength  +  1].toCharArray();	  char[]    searchChars    =    new    char[csLength].toCharArray();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
36	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength  -  1].toCharArray();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength  -  1].toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength  -  1].toCharArray();	  char[]    searchChars    =    new    char[csLength].toCharArray();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
37	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength  *  2].toCharArray();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength  *  2].toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength  *  2].toCharArray();	  char[]    searchChars    =    new    char[csLength].toCharArray();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
38	[BUG]  [BUGGY]  String  searchLength  =  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String  searchLength  =  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String  searchLength  =  cs.length;	  char    searchLength    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  int  len  =  str.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  str.length()  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  +  searchChars.length;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  int  len  =  str.length()  +  searchCharsLength;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  str.length()  +  searchCharsLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  +  searchCharsLength;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  int  len  =  str.length()  /  csLength;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  str.length()  /  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  /  csLength;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  int  len  =  str.length()  +  csLength  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  str.length()  +  csLength  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  +  csLength  +  1;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  int  searchLength  =  csLength  -  1  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  csLength  -  1  +  searchChars.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  -  1  +  searchChars.length;	  int    searchLength    =    searchChars.length    -    1    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  /  1  +  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  /  1  +  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  /  1  +  csLength;	  int    searchLength    =    searchChars.length    -    1    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  1,  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  -  1,  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  1,  csLength;	  int    searchLength    =    searchChars.length    -    1    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  String  searchLength  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String  searchLength  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String  searchLength  =  cs.length();	  char    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
47	[BUG]  [BUGGY]  char  searchLength  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  searchChars.length();	  char    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
48	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  searchChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  searchChars.toCharArray();	  CharSequence    cs    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
49	[BUG]  [BUGGY]  CharSequence  cs  =  findAny(cs,  searchChars.toCharArray());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  findAny(cs,  searchChars.toCharArray());  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  findAny(cs,  searchChars.toCharArray());	  CharSequence    cs    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
50	[BUG]  [BUGGY]  CharSequence  cs  =  SearchChars.toCharArray(csLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  SearchChars.toCharArray(csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  SearchChars.toCharArray(csLength);	  CharSequence    cs    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
51	[BUG]  [BUGGY]  int  len  =  cs.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length  -  1;	  int    len    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
52	[BUG]  [BUGGY]  int  len  =  cs.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length  +  1;	  int    len    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars,  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars,  csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getChars(searchChars,  csLength);	  char[]    searchChars    =    cs.getChars(searchChars);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
54	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(searchCharsLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getChars(searchCharsLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getChars(searchCharsLength);	  char[]    searchChars    =    cs.getChars(searchChars);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
55	[BUG]  [BUGGY]  Integer  searchLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Integer  searchLimit  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Integer  searchLimit  =  searchChars.length();	  int    searchLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  -  4;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  -  4;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
57	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  -  3;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
58	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length()  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length()  -  1;	  int    searchLength    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length()  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length()  +  1;	  int    searchLength    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
60	[BUG]  [BUGGY]  int  searchLength  =  EMPTY.asList(searchChars);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  EMPTY.asList(searchChars);  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  EMPTY.asList(searchChars);	  int    searchLength    =   "java.util.Arrays.asList(searchChars);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
61	[BUG]  [BUGGY]  char  searchLength  =   "java.util.Arrays.asList(searchChars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =   "java.util.Arrays.asList(searchChars);  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =   "java.util.Arrays.asList(searchChars);	  int    searchLength    =   "java.util.Arrays.asList(searchChars);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
62	[BUG]  [BUGGY]  char  searchLength  =   "java.util.Arrays.asList(searchChars) ";  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLength  =   "java.util.Arrays.asList(searchChars) ";  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =   "java.util.Arrays.asList(searchChars) ";	  int    searchLength    =   "java.util.Arrays.asList(searchChars)   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
63	[BUG]  [BUGGY]  int  searchLength  =  EMPTY.asList(searchChars) ";  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  EMPTY.asList(searchChars) ";  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  EMPTY.asList(searchChars) ";	  int    searchLength    =   "java.util.Arrays.asList(searchChars)   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
64	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSearchChars(searchChars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getSearchChars(searchChars);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getSearchChars(searchChars);	  char[]    searchChars    =    cs.getSearchChars();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
65	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSequenceChars();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getSequenceChars();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getSequenceChars();	  char[]    searchChars    =    cs.getSearchChars();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
66	[BUG]  [BUGGY]  int  searchLength  =  searchCharsLength  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchCharsLength  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchCharsLength  +  1;	  int    searchLength    =    csLength    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  int  searchLength  =  csLength  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  csLength  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  +  2;	  int    searchLength    =    csLength    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  4;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  -  4;	  int    searchLimit    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  3;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  -  3;	  int    searchLimit    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  *  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  *  INDEX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  *  INDEX_NOT_FOUND;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
71	[BUG]  [BUGGY]  int  searchLength  =  csLength  *  INDEX_NOT_FOUND  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  csLength  *  INDEX_NOT_FOUND  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  *  INDEX_NOT_FOUND  +  1;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
72	[BUG]  [BUGGY]  int  searchLength  =  csLength  *  PAD_LIMIT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  csLength  *  PAD_LIMIT;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  *  PAD_LIMIT;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
73	[BUG]  [BUGGY]  int  searchLength  =  csLength  *  MAX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  csLength  *  MAX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  *  MAX_NOT_FOUND;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
74	[BUG]  [BUGGY]  int  len  =  csLimit;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  csLimit;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  csLimit;	  int    len    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  int  len  =  csLength  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  csLength  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  csLength  +  1;	  int    len    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
76	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLength  =  searchChars.length  -  4;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  -  4;	  int    csLength    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
77	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  /  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLength  =  searchChars.length  /  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  /  2;	  int    csLength    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
78	[BUG]  [BUGGY]  String  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String  csLimit  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String  csLimit  =  searchChars.length();	  char    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
79	[BUG]  [BUGGY]  Char  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  csLimit  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  csLimit  =  searchChars.length();	  char    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
80	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  /  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  /  4;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  /  4;	  int    searchLength    =    searchChars.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
81	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  /  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  /  3;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  /  3;	  int    searchLength    =    searchChars.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
82	[BUG]  [BUGGY]  String[]  searchChars  =  searchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String[]  searchChars  =  searchChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String[]  searchChars  =  searchChars.toCharArray();	  String[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
83	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchCharsLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchCharsLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.toCharArray(searchCharsLength);	  char[]    searchChars    =    cs.toCharArray(searchChars);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
84	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchChars,  csLength);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchChars,  csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.toCharArray(searchChars,  csLength);	  char[]    searchChars    =    cs.toCharArray(searchChars);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
85	[BUG]  [BUGGY]  char[]  searchChars  =  searchChars.toCharArray(csLength);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  searchChars.toCharArray(csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  searchChars.toCharArray(csLength);	  char[]    searchChars    =    cs.toCharArray(searchChars);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
86	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLength  =  searchChars.length  -  3;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  -  3;	  int    csLength    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
87	[BUG]  [BUGGY]  int  searchLimit  =  cs.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length  -  1;	  int    searchLimit    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
88	[BUG]  [BUGGY]  char  searchLimit  =  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLimit  =  cs.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  cs.length;	  int    searchLimit    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  /  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  /  2;	  int    csLimit    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
90	[BUG]  [BUGGY]  int  searchLimit  =  csLength  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  csLength  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  csLength  -  1;	  int    searchLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
91	[BUG]  [BUGGY]  String  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String  searchLimit  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String  searchLimit  =  cs.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLimit  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  searchChars.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length()  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length()  -  1;	  int    searchLimit    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
94	[BUG]  [BUGGY]  String  searchLimit  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  String  searchLimit  =  cs.length()  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String  searchLimit  =  cs.length()  +  searchChars.length;	  char    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
95	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLimit  =  searchChars.length()  +  cs.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  searchChars.length()  +  cs.length;	  char    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
96	[BUG]  [BUGGY]  Char  searchLimit  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  searchLimit  =  searchChars.length()  +  cs.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  searchLimit  =  searchChars.length()  +  cs.length;	  char    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
97	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSequence();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getSequence();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getSequence();	  char[]    searchChars    =    cs.getString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
98	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength.length();	  char[]    searchChars    =    new    char[csLength.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
99	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[searchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[searchChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[searchChars.toCharArray();	  char[]    searchChars    =    new    char[csLength.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
100	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength  +  searchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength  +  searchChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength  +  searchChars.toCharArray();	  char[]    searchChars    =    new    char[csLength.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
101	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  -  1  +  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  -  1  +  csLength;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Integer  searchLimit  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Integer  searchLimit  =  cs.length();	  int    searchLimit    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
103	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getChars(searchChars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getChars(searchChars);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getChars(searchChars);	  CharSequence    cs    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
104	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.getChars();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  searchChars.getChars();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  searchChars.getChars();	  CharSequence    cs    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
105	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getChars(false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getChars(false);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getChars(false);	  CharSequence    cs    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
106	[BUG]  [BUGGY]  int  len  =  csLength  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  csLength  -  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  csLength  -  1;	  int    len    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
107	[BUG]  [BUGGY]  int  searchLimit  =  csLimit  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  csLimit  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  csLimit  +  searchChars.length;	  int    searchLimit    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
108	[BUG]  [BUGGY]  int  searchLimit  =  csLength  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  csLength  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  csLength  +  searchChars.length;	  int    searchLimit    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
109	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  1  +  csLength  +  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  -  1  +  csLength  +  INDEX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  1  +  csLength  +  INDEX_NOT_FOUND;	  int    searchLength    =    searchChars.length    -    1    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
110	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  1  +  csLength  *  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  -  1  +  csLength  *  INDEX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  1  +  csLength  *  INDEX_NOT_FOUND;	  int    searchLength    =    searchChars.length    -    1    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
111	[BUG]  [BUGGY]  int  len  =  searchChars.length()  +  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length()  +  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length()  +  csLength;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
112	[BUG]  [BUGGY]  int  len  =  str.length()  +  searchCharsLen;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  str.length()  +  searchCharsLen;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  +  searchCharsLen;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
113	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  csLimit;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  +  csLimit;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  +  csLimit;	  int    searchLimit    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
114	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  +  searchChars.length;	  int    searchLimit    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSearchChars(searchCharsLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getSearchChars(searchCharsLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getSearchChars(searchCharsLength);	  char[]    searchChars    =    cs.getSearchChars();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
116	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSearchChars(searchChars,  csLength);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getSearchChars(searchChars,  csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getSearchChars(searchChars,  csLength);	  char[]    searchChars    =    cs.getSearchChars();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
117	[BUG]  [BUGGY]  char[]  searchChars  =  this.searchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  this.searchChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  this.searchChars.toCharArray();	  char[]    searchChars    =    searchChars.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
118	[BUG]  [BUGGY]  char[]  searchChars  =  findChars.toCharArray();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  findChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  findChars.toCharArray();	  char[]    searchChars    =    searchChars.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
119	[BUG]  [BUGGY]  Integer  len  =  str.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Integer  len  =  str.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Integer  len  =  str.length();	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
120	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars,  0);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getChars(searchChars,  0);	  char[]    searchChars    =    cs.getChars(searchChars);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
121	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[searchCharsLength].toCharArray();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[searchCharsLength].toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[searchCharsLength].toCharArray();	  char[]    searchChars    =    new    char[csLength].toCharArray();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
122	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[searchChars.length].toCharArray();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[searchChars.length].toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[searchChars.length].toCharArray();	  char[]    searchChars    =    new    char[csLength].toCharArray();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
123	[BUG]  [BUGGY]  Int  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Int  searchLimit  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Int  searchLimit  =  cs.length();	  int    searchLimit    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
124	[BUG]  [BUGGY]  Char  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  searchLimit  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  searchLimit  =  cs.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
125	[BUG]  [BUGGY]  int  len  =  cs.length  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length  +  searchChars.length;	  int    len    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
126	[BUG]  [BUGGY]  int  len  =  cs.length  -  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length  -  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length  -  searchChars.length;	  int    len    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
127	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length()  +  csLimit;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLimit  =  searchChars.length()  +  csLimit;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  searchChars.length()  +  csLimit;	  char    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
128	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length()  +  csLength;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  searchLimit  =  searchChars.length()  +  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  searchChars.length()  +  csLength;	  char    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
129	[BUG]  [BUGGY]  Int  searchLength  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Int  searchLength  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Int  searchLength  =  cs.length();	  int    searchLength    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
130	[BUG]  [BUGGY]  int  len  =  csLength  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  csLength  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  csLength  +  searchChars.length;	  int    len    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
131	[BUG]  [BUGGY]  char  len  =  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  len  =  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  len  =  csLength;	  int    len    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
132	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCurrentSequence();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getCurrentSequence();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getCurrentSequence();	  CharSequence    cs    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
133	[BUG]  [BUGGY]  Char  searchLength  =  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  searchLength  =  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  searchLength  =  cs.length;	  char    searchLength    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
134	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getQualifiedName(searchChars);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getQualifiedName(searchChars);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getQualifiedName(searchChars);	  char[]    searchChars    =    cs.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
135	[BUG]  [BUGGY]  Char  searchLength  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  searchLength  =  cs.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  searchLength  =  cs.length();	  char    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
136	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getText();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  cs.getText();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getText();	  char[]    searchChars    =    cs.getString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
137	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLength  =  searchChars.length  -  1  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  -  1  +  1;	  int    csLength    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
138	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[SearchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[SearchChars.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[SearchChars.toCharArray();	  char[]    searchChars    =    new    char[csLength.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
139	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength.length()  ];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength.length()  ];  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength.length()  ];	  char[]    searchChars    =    new    char[csLength.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
140	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  -  3;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  -  3;	  int    len    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
141	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  *  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  *  1;	  int    searchLength    =    searchChars.length    /    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  int  len  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length()  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length()  +  searchChars.length;	  int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
143	[BUG]  [BUGGY]  CharSequence  cs  =  findChars(cs.toCharArray());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  findChars(cs.toCharArray());  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  findChars(cs.toCharArray());	  CharSequence    cs    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
144	[BUG]  [BUGGY]  int  searchLength  =  searchChars  *  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars  *  INDEX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars  *  INDEX_NOT_FOUND;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
145	[BUG]  [BUGGY]  int  searchLength  =  ArrayUtils.asList(searchChars);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  ArrayUtils.asList(searchChars);  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  ArrayUtils.asList(searchChars);	  int    searchLength    =   "java.util.Arrays.asList(searchChars);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
146	[BUG]  [BUGGY]  int  searchLength  =  SearchChars.indexOf(searchChars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  SearchChars.indexOf(searchChars);  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  SearchChars.indexOf(searchChars);	  int    searchLength    =   "java.util.Arrays.asList(searchChars);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
147	[BUG]  [BUGGY]  char  csLimit  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char  csLimit  =  searchChars.length()  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  csLimit  =  searchChars.length()  +  1;	  char    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
148	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  1  +  csLength;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  1  +  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  -  1  +  csLength;	  int    searchLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
149	[BUG]  [BUGGY]  int  searchLength  =  ArrayUtils.asList(searchChars) ";  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  ArrayUtils.asList(searchChars) ";  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  ArrayUtils.asList(searchChars) ";	  int    searchLength    =   "java.util.Arrays.asList(searchChars)   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
150	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  *  csLimit;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length()  *  csLimit;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  *  csLimit;	  int    searchLimit    =    searchChars.length()    *    cs.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
151	[BUG]  [BUGGY]  Char  searchLength  =  csLength;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  searchLength  =  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  searchLength  =  csLength;	  char    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
152	[BUG]  [BUGGY]  int  searchLength  =  SearchChars.length  +  csLength;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  SearchChars.length  +  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  SearchChars.length  +  csLength;	  int    searchLength    =    csLength    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
153	[BUG]  [BUGGY]  Int  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Int  csLimit  =  searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Int  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
154	[BUG]  [BUGGY]  int  searchLength  =  SearchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  SearchChars.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  SearchChars.length;	  int    searchLength    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
155	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getSearchChars();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getSearchChars();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getSearchChars();	  char[]    searchChars    =    cs.getSearchChars();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
156	[BUG]  [BUGGY]  int  searchLength  =  ArrayUtils.indexOf(searchChars,  csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  ArrayUtils.indexOf(searchChars,  csLength);  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  ArrayUtils.indexOf(searchChars,  csLength);	  int    searchLength    =   "java.util.Arrays.asList(searchChars);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
157	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength  *  csLength].toCharArray();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength  *  csLength].toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength  *  csLength].toCharArray();	  char[]    searchChars    =    new    char[csLength].toCharArray();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
158	[BUG]  [BUGGY]  int  searchLength  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  cs.length()  *  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  cs.length()  *  searchChars.length;	  int    searchLength    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
159	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getChars(0,  csLength);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getChars(0,  csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getChars(0,  csLength);	  CharSequence    cs    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
160	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getChars(ch);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getChars(ch);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getChars(ch);	  CharSequence    cs    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
161	[BUG]  [BUGGY]  int  len  =  str.length()  *  csLength;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  str.length()  *  csLength;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  *  csLength;	  int    len    =    str.length()    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
162	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.getQualifiedName();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getQualifiedName();	  char[]    searchChars    =    cs.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  int  searchLength  =  csLength  /  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  csLength  /  INDEX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  /  INDEX_NOT_FOUND;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
164	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  /  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  /  INDEX_NOT_FOUND;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  /  INDEX_NOT_FOUND;	  int    searchLength    =    csLength    *    INDEX_NOT_FOUND;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
165	[BUG]  [BUGGY]  int  searchLimit  =  cs.length  -  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length  -  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length  -  2;	  int    searchLimit    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
166	[BUG]  [BUGGY]  int  csLimit  =  this.searchChars.length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLimit  =  this.searchChars.length();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  this.searchChars.length();	  int    csLimit    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
167	[BUG]  [BUGGY]  int  searchLimit  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLimit  =  0;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  0;	  int    searchLimit    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
168	[BUG]  [BUGGY]  CharSequence  cs  =  cs.substring(0,  csLength);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.substring(0,  csLength);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.substring(0,  csLength);	  CharSequence    cs    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
169	[BUG]  [BUGGY]  CharSequence  cs  =  cs.toCharArray(searchChars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  CharSequence  cs  =  cs.toCharArray(searchChars);  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.toCharArray(searchChars);	  CharSequence    cs    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
170	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  -  1  +  1;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
171	[BUG]  [BUGGY]  Char  searchLimit  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  Char  searchLimit  =  cs.length()  +  searchChars.length;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	Char  searchLimit  =  cs.length()  +  searchChars.length;	  char    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
172	[BUG]  [BUGGY]  int  len  =  cs.length  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  len  =  cs.length  -  2;  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length  -  2;	  int    len    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
173	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength  *  cs.toCharArray();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  char[]  searchChars  =  new  char[csLength  *  cs.toCharArray();  [BUGGY]      int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength  *  cs.toCharArray();	  char[]    searchChars    =    new    char[csLength.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
174	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  2  +  csLength;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();      [BUGGY]  int  searchLength  =  searchChars.length  -  2  +  csLength;  [BUGGY]      for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  2  +  csLength;	  int    searchLength    =    searchChars.length    -    1    +    csLength;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
