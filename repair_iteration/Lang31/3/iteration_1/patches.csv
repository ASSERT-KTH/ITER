bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char  searchLimit  =  cs.length();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  cs.length();	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  cs.length()  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length()  +  1;	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  searchChars.length  -  4;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  4;	  int    searchLength    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  1  +  csLength;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  searchChars.length  -  1  +  csLength;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  1  +  csLength;	  int    searchLength    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  int  searchLength  =  csLength  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  csLength  +  searchChars.length;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  +  searchChars.length;	  int    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  int  searchLength  =  csLength  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  csLength  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  +  1;	  int    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  char  searchLength  =  csLength;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char  searchLength  =  csLength;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  csLength;	  int    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  searchChars.length  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  -  1;	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  int  len  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  searchChars.length()  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length()  -  1;	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  int  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  cs.length();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length();	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length()  +  cs.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  +  cs.length;	      int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  char  searchLimit  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char  searchLimit  =  cs.length()  +  searchChars.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLimit  =  cs.length()  +  searchChars.length;	      int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  int  searchLimit  =  cs.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  cs.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  cs.length;	      int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  -  1;	      int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length  -  2;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  -  2;	      int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length  +  1;	      int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  int  len  =  str.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  str.length()  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  +  1;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  int  len  =  str.length()  +  csLength;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  str.length()  +  csLength;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  +  csLength;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  searchChars.length();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length();	      int    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  char  searchLength  =  cs.length();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char  searchLength  =  cs.length();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  cs.length();	      int    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  int  searchLength  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  cs.length()  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  cs.length()  +  1;	      int    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  searchChars.length  /  1;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  /  1;	  int    searchLength    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  searchChars.length  +  2;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  +  2;	  int    searchLength    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length()  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  -  1;	      int    searchLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length()  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  +  1;	      int    searchLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  int  searchLength  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  searchChars.length  -  3;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  searchChars.length  -  3;	  int    searchLength    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars);  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getChars(searchChars);	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  cs.getString();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getString();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  cs.getQualifiedName();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getQualifiedName();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLimit  =  searchChars.length()  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length()  +  1;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLimit  =  searchChars.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLimit  =  searchChars.length()  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length()  -  1;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  char  searchLength  =  cs.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char  searchLength  =  cs.length;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  searchLength  =  cs.length;	  int    searchLength    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  int  len  =  cs.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  cs.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  cs.length;	      int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  searchChars.length  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  +  1;	      int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  searchChars.length  -  2;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  searchChars.length  -  2;	      int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  char[]  searchChars  =  searchChars.toCharArray();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  searchChars.toCharArray();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  searchChars.toCharArray();	      char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  String[]  searchChars  =  cs.toCharArray();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  String[]  searchChars  =  cs.toCharArray();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	String[]  searchChars  =  cs.toCharArray();	      char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLength  =  searchChars.length  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  -  1;	      int    csLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLength  =  searchChars.length  +  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  +  1;	      int    csLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  int  csLength  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLength  =  searchChars.length  -  2;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLength  =  searchChars.length  -  2;	      int    csLength    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  int  searchLimit  =  csLength;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  csLength;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  csLength;	      int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  int  searchLength  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  cs.length()  +  searchChars.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  cs.length()  +  searchChars.length;	      int    searchLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
44	[BUG]  [BUGGY]  int  searchLength  =  csLength  *  INDEX_NOT_FOUND;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  =  csLength  *  INDEX_NOT_FOUND;  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  =  csLength  *  INDEX_NOT_FOUND;	  int    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  int  len  =  csLength;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  csLength;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  csLength;	      int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSearchChars();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  cs.getSearchChars();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.getSearchChars();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLimit  =  searchChars.length  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  -  1;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  int  len  =  str.length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  len  =  str.length()  -  1;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  len  =  str.length()  -  1;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchChars);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchChars);  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  cs.toCharArray(searchChars);	      char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength.toCharArray();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  new  char[csLength.toCharArray();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength.toCharArray();	      char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  char[]  searchChars  =  new  char[csLength].toCharArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char[]  searchChars  =  new  char[csLength].toCharArray();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char[]  searchChars  =  new  char[csLength].toCharArray();	      char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  int  searchLength  = "java.util.Arrays.asList(searchChars) ";  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  = "java.util.Arrays.asList(searchChars) ";  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  = "java.util.Arrays.asList(searchChars) ";	  int    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  int  searchLength  = "java.util.Arrays.asList(searchChars);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  = "java.util.Arrays.asList(searchChars);  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  = "java.util.Arrays.asList(searchChars);	  int    searchLength    =    csLength;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getChars();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  CharSequence  cs  =  cs.getChars();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.getChars();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  CharSequence  cs  =  cs.toCharArray();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  CharSequence  cs  =  cs.toCharArray();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	CharSequence  cs  =  cs.toCharArray();	      char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  *  cs.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLimit  =  searchChars.length()  *  cs.length;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLimit  =  searchChars.length()  *  cs.length;	      int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  char  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  char  csLimit  =  searchChars.length();  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	char  csLimit  =  searchChars.length();	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  csLimit  =  searchChars.length  -  2;  [BUGGY]    int  searchLength  =  searchChars.length;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  csLimit  =  searchChars.length  -  2;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  int  searchLength  = "java.util.ArrayList ";  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();    [BUGGY]  int  searchLength  = "java.util.ArrayList ";  [BUGGY]    for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  true;  }  }  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang31/src/main/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	1445	1445	2	replace	int  searchLength  = "java.util.ArrayList ";	  int    searchLength    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
