bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action2	[BUG]  [BUGGY]  [FE]  AssertionError  testIssue567  [CONTEXT]  public  double  toDouble()  {  if  (isInfinite())  {  if  (lessThan(getZero()))  {  return  Double.NEGATIVE_INFINITY;  }  else  {  return  Double.POSITIVE_INFINITY;  }  }  [BUGGY]  else  if(isNaN())  {  [BUGGY]  return  Double.NaN;  }  Dfp  y  =  this;  boolean  negate  =  false;  if  (lessThan(getZero()))  {  y  =  negate();  negate  =  true;  }  [CLASS]  Dfp  [METHOD]  toDouble  [RETURN_TYPE]  double  [VARIABLES]  boolean  negate  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  double  x  DfpField  field  int[]  dividend  mant  product  quotient  remainder  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  str  what  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  ae  aextradigit  bextradigit  decimalPos  diff  divMsb  divisor  dm  e  excp  exp  exponent  extra  i  j  lostdigit  max  md  min  minadj  n  nsqd  offset  p  q  qd  r  result  rh  rl  rsize  sciexp  shf  significantDigits  trailingZeros  trial  type  x  long  bits  mantissa  Dfp  tempDfp  y  	projects/Math54/src/main/java/org/apache/commons/math/dfp/Dfp.java	1.0	2313	2313	1	add	else  if(isNaN())  {	if  (isNaN())  {  	compilable	  [FE]  AssertionError  testIssue567	9	1
3	[BUG]  [BUGGY]  else  if(isNaN())  {  [FE]  AssertionError  testIssue567  [CONTEXT]  public  double  toDouble()  {  if  (isInfinite())  {  if  (lessThan(getZero()))  {  return  Double.NEGATIVE_INFINITY;  }  else  {  return  Double.POSITIVE_INFINITY;  }  }  [BUGGY]  else  if(isNaN())  {  [BUGGY]  return  Double.NaN;  }  Dfp  y  =  this;  boolean  negate  =  false;  if  (lessThan(getZero()))  {  y  =  negate();  negate  =  true;  }  [CLASS]  Dfp  [METHOD]  toDouble  [RETURN_TYPE]  double  [VARIABLES]  boolean  negate  byte  FINITE  INFINITE  QNAN  SNAN  asign  bsign  code  nans  rsign  sig  sign  x  double  x  DfpField  field  int[]  dividend  mant  product  quotient  remainder  String  ADD_TRAP  ALIGN_TRAP  DIVIDE_TRAP  GREATER_THAN_TRAP  LESS_THAN_TRAP  MULTIPLY_TRAP  NAN_STRING  NEG_INFINITY_STRING  NEW_INSTANCE_TRAP  NEXT_AFTER_TRAP  POS_INFINITY_STRING  SQRT_TRAP  TRUNC_TRAP  fpdecimal  fpexp  s  str  what  int  ERR_SCALE  MAX_EXP  MIN_EXP  RADIX  adiff  ae  aextradigit  bextradigit  decimalPos  diff  divMsb  divisor  dm  e  excp  exp  exponent  extra  i  j  lostdigit  max  md  min  minadj  n  nsqd  offset  p  q  qd  r  result  rh  rl  rsize  sciexp  shf  significantDigits  trailingZeros  trial  type  x  long  bits  mantissa  Dfp  tempDfp  y  	projects/Math54/src/main/java/org/apache/commons/math/dfp/Dfp.java	1.0	2313	2313	1	replace	else  if(isNaN())  {	if  (isNaN())  {  	compilable	  [FE]  AssertionError  testIssue567	9	1	replace
