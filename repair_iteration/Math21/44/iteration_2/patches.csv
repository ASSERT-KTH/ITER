bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  order  =  c[ir][ir  +  3];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir  +  3];  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir  +  3];	  int    order    =    c[ir][ir    +    1];    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(ir  <  0  ||  c[ir][ir]  <  -1)  {	  if(ir    <    0    ||    c[ir][ir]    <    -small)    {    	compilable	  [FE]  AssertionError  	27	2	replace
3	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  0  ||  c[ir][ir]  <  -1)  {	  if(ir    <    0    ||    c[ir][ir]    <    -small)    {    	compilable	  [FE]  AssertionError  	27	2	replace
4	[BUG]  [BUGGY]  double  order  =  c[ir][ir].doubleValue()  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  double  order  =  c[ir][ir].doubleValue()  +  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	double  order  =  c[ir][ir].doubleValue()  +  1;	  double    order    =    c[ir][ir].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
5	[BUG]  [BUGGY]  c[ir][ir],  ir,  scale);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  ir,  scale);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  ir,  scale);	  c[ir][ir],    ir,    size);    	non-compiled	[CE]  not  a  statement	23	None	replace
6	[BUG]  [BUGGY]  if(small  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  <  =  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small  <  =  0)  {	  if(small    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  int  order  =  ir  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  ir  +  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  ir  +  1;	  int    order    =    ir;    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
8	[BUG]  [BUGGY]  If(ir  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  If(ir  <  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	If(ir  <  0)  {	  if(ir    <    0)    {    If(ir    <    0)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
9	[BUG]  [BUGGY]  if(small  ==  0)  {  if(small  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  ==  0)  {  if(small  ==  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small    ==    0)    {    if(small  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
10	[BUG]  [BUGGY]  if(small  ==  0)  {  if(small  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  ==  0)  {  if(small  >=  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small    ==    0)    {    if(small  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
11	[BUG]  [BUGGY]  if(ir!=  0)  {  if(ir!=  0)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir!=  0)  {  if(ir!=  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir!=    0)    {    if(ir!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
12	[BUG]  [BUGGY]  if(ir!=  0)  {  if(ir  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir!=  0)  {  if(ir  >=  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir!=    0)    {    if(ir  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
13	[BUG]  [BUGGY]  if(ir!=  0)  {  if(ir  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir!=  0)  {  if(ir  >>  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir!=    0)    {    if(ir  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
14	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    0    ||    c[ir][ir]!=    -1)    {    if(ir  <  0  ||  c[ir][ir]!=  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
15	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  if(ir  <  0  ||  c[ir][ir]  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  if(ir  <  0  ||  c[ir][ir]  ==  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    0    ||    c[ir][ir]!=    -1)    {    if(ir  <  0  ||  c[ir][ir]  ==  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
16	[BUG]  [BUGGY]  int  order  =  c.length  -  2;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c.length  -  2;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c.length  -  2;	  int    order    =    c.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
17	[BUG]  [BUGGY]  r  =  c[ir][ir]  -  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  r  =  c[ir][ir]  -  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	r  =  c[ir][ir]  -  1;	  r    =    c[ir][ir]    +    1;    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
18	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  ir  >  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(ir  <  0  ||  ir  >  0)  {	  if(ir    <    0)    {    if(ir    <    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	4	2	replace
19	[BUG]  [BUGGY]  if(ir  <  0  ||  ir  >  0)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  ir  >  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  0  ||  ir  >  0)  {	  if(ir    <    0)    {    if(ir    <    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	4	2	replace
20	[BUG]  [BUGGY]  if(small  ||  c[ir][ir]  <  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  ||  c[ir][ir]  <  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small  ||  c[ir][ir]  <  0)  {	  if(small    ||    c[ir][ir]    <    -1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	3	None	replace
21	[BUG]  [BUGGY]  int  order  =  ir.length  -  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  ir.length  -  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  ir.length  -  1;	  int    order    =    matrix.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
22	[BUG]  [BUGGY]  int  order  =  c[ir][ir]  /  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir]  /  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir]  /  1;	  int    order    =    c[ir][ir]    +    1;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
23	[BUG]  [BUGGY]  int  order  =  c[ir][ir]  -  0xff;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir]  -  0xff;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir]  -  0xff;	  int    order    =    c[ir][ir]    &    0xff;    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
24	[BUG]  [BUGGY]  c[ir][ir],  ir,  small,  sqrt);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  ir,  small,  sqrt);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  ir,  small,  sqrt);	  c[ir][ir],    ir,    small);    	non-compiled	[CE]  not  a  statement	2	None	replace
25	[BUG]  [BUGGY]  if(ir  <  order)  {  if(ir  <  order)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  order)  {  if(ir  <  order)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    order)    {    if(ir  <  order)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
26	[BUG]  [BUGGY]  if(ir  <  order)  {  If(ir  <  order)  {  [CE]  ';'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  order)  {  If(ir  <  order)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    order)    {    If(ir  <  order)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
27	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -small)  {  if(ir  <  0  ||  c[ir][ir]  <  -small)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -small)  {  if(ir  <  0  ||  c[ir][ir]  <  -small)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    0    ||    c[ir][ir]    <    -small)    {    if(ir  <  0  ||  c[ir][ir]  <  -small)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
28	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -small)  {  If(ir  <  0  ||  c[ir][ir]  <  -small)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  <  -small)  {  If(ir  <  0  ||  c[ir][ir]  <  -small)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    0    ||    c[ir][ir]    <    -small)    {    If(ir  <  0  ||  c[ir][ir]  <  -small)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
29	[BUG]  [BUGGY]  int  order  =  c[ir][ir],  isi;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir],  isi;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir],  isi;	  int    order    =    c[ir][ir],    ij;    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
30	[BUG]  [BUGGY]  int  order  =  c[ir][ir],  isij;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir],  isij;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir],  isij;	  int    order    =    c[ir][ir],    ij;    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
31	[BUG]  [BUGGY]  if(ir  <  =  order)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  =  order)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  =  order)  {	  if(ir    <    order)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
32	[BUG]  [BUGGY]  int  order  =  c[ir][ir]  -  2;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir]  -  2;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir]  -  2;	  int    order    =    c[ir][ir]    -    1;    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
33	[BUG]  [BUGGY]  int  order  =  c[ir].length  -  1;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir].length  -  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir].length  -  1;	  int    order    =    c[ir].length;    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
34	[BUG]  [BUGGY]  int  order  =  c[ir][ir].length;  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir].length;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir].length;	  int    order    =    c[ir].length;    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
35	[BUG]  [BUGGY]  r  =  c[ir][ij]  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  r  =  c[ir][ij]  +  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	r  =  c[ir][ij]  +  1;	  r    =    c[ir][ij];    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  ==  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(ir  <  0  ||  c[ir][ir]  ==  -1)  {	  if(ir    <    0    ||    c[ir][ir]!=    -1)    {    	compilable	  [FE]  AssertionError  	21	2	replace
37	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]  ==  -1)  {  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  ==  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  0  ||  c[ir][ir]  ==  -1)  {	  if(ir    <    0    ||    c[ir][ir]!=    -1)    {    	compilable	  [FE]  AssertionError  	21	2	replace
38	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  >  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(small  >  0)  {	  if(small    ==    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	2	replace
39	[BUG]  [BUGGY]  if(small  >  0)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  >  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small  >  0)  {	  if(small    ==    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	2	replace
40	[BUG]  [BUGGY]  if(ir  ==  0)  {  If(ir  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  ==  0)  {  If(ir  <  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  ==  0)  {  If(ir  <  0)  {	  if(ir    <    0)    {    If(ir    <    0)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
41	[BUG]  [BUGGY]  c[ir][ir],  ij,  size);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  ij,  size);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  ij,  size);	  c[ir][ir],    ir,    size);    	non-compiled	[CE]  not  a  statement	23	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  ==  -small)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(ir  <  0  ||  c[ir][ir]  ==  -small)  {	  if(ir    <    0    ||    c[ir][ir]    <    -small)    {    	compilable	  [FE]  AssertionError  	27	2	replace
43	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]  ==  -small)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]  ==  -small)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  0  ||  c[ir][ir]  ==  -small)  {	  if(ir    <    0    ||    c[ir][ir]    <    -small)    {    	compilable	  [FE]  AssertionError  	27	2	replace
44	[BUG]  [BUGGY]  if(small  ==  0)  {  If(small  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  ==  0)  {  If(small  ==  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small    ==    0)    {    If(small  ==  0)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
45	[BUG]  [BUGGY]  int  order  =  matrix.length  -  2;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  matrix.length  -  2;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  matrix.length  -  2;	  int    order    =    matrix.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(c[ir][ir]  <  -small)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(c[ir][ir]  <  -small)  {	  if(ir    <    order)    {    	compilable	  [FE]  AssertionError  	25	2	replace
47	[BUG]  [BUGGY]  if(c[ir][ir]  <  -small)  {  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(c[ir][ir]  <  -small)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(c[ir][ir]  <  -small)  {	  if(ir    <    order)    {    	compilable	  [FE]  AssertionError  	25	2	replace
48	[BUG]  [BUGGY]  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  If(ir  <  0  ||  c[ir][ir]!=  -1)  {  [CE]  ';'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  c[ir][ir]!=  -1)  {  If(ir  <  0  ||  c[ir][ir]!=  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir    <    0    ||    c[ir][ir]!=    -1)    {    If(ir  <  0  ||  c[ir][ir]!=  -1)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
49	[BUG]  [BUGGY]  c[ir][ir],  ir,  j);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  ir,  j);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  ir,  j);	  c[ir][ir],    ir,    small);    	non-compiled	[CE]  not  a  statement	2	None	replace
50	[BUG]  [BUGGY]  c[ir][ir],  ij,  small);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  ij,  small);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  ij,  small);	  c[ir][ir],    ir,    small);    	non-compiled	[CE]  not  a  statement	2	None	replace
51	[BUG]  [BUGGY]  if(ir  <  order)  {  If(ir  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  order)  {  If(ir  <  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  order)  {  If(ir  <  0)  {	  if(ir    <    0)    {    If(ir    <    0)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
52	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  ir  <  c.length)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(ir  <  0  ||  ir  <  c.length)  {	  if(ir    <    0)    {    if(ir    <    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	4	2	replace
53	[BUG]  [BUGGY]  if(ir  <  0  ||  ir  <  c.length)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  0  ||  ir  <  c.length)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  0  ||  ir  <  c.length)  {	  if(ir    <    0)    {    if(ir    <    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	4	2	replace
54	[BUG]  [BUGGY]  int  order  =  c[ir][ir]  &  0xff  &  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir]  &  0xff  &  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir]  &  0xff  &  1;	  int    order    =    c[ir][ir]    &    0xff;    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
55	[BUG]  [BUGGY]  r  =  c[ir][ir]  /  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  r  =  c[ir][ir]  /  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	r  =  c[ir][ir]  /  1;	  r    =    c[ir][ir]    +    1;    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
56	[BUG]  [BUGGY]  c[ir][ir],  small,  size);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  small,  size);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  small,  size);	  c[ir][ir],    ir,    size);    	non-compiled	[CE]  not  a  statement	23	None	replace
57	[BUG]  [BUGGY]  int  order  =  c[ir][ir  +  1]  &  0xff;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  c[ir][ir  +  1]  &  0xff;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  c[ir][ir  +  1]  &  0xff;	  int    order    =    c[ir][ir    +    1];    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
58	[BUG]  [BUGGY]  c[ir][ir],  ir,  tmp);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  c[ir][ir],  ir,  tmp);  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	c[ir][ir],  ir,  tmp);	  c[ir][ir],    ir,    small);    	non-compiled	[CE]  not  a  statement	2	None	replace
59	[BUG]  [BUGGY]  if(small  ==  0)  {  if(small  {  0)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  ==  0)  {  if(small  {  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small    ==    0)    {    if(small  {  0)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
60	[BUG]  [BUGGY]  if(ir  <  tmp)  {  [CE]  cannot  find  symbol  tmp  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  <  tmp)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  <  tmp)  {	  if(ir    <    order)    {    	non-compiled	[CE]  cannot  find  symbol  tmp	25	None	replace
61	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  >=  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	add	if(ir  >=  0)  {	  if(ir    ==    0)    {    if(ir    >=    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	10	2	replace
62	[BUG]  [BUGGY]  if(ir  >=  0)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(ir  >=  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(ir  >=  0)  {	  if(ir    ==    0)    {    if(ir    >=    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	10	2	replace
63	[BUG]  [BUGGY]  int  order  =  swap[ir][ir].doubleValue();  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  swap[ir][ir].doubleValue();  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  swap[ir][ir].doubleValue();	  int    order    =    matrix[ir][ir].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
64	[BUG]  [BUGGY]  if(small  ||  c[ir][ir]  <  -1  ||  c[ir][ir]  <  -1)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  if(small  ||  c[ir][ir]  <  -1  ||  c[ir][ir]  <  -1)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	if(small  ||  c[ir][ir]  <  -1  ||  c[ir][ir]  <  -1)  {	  if(small    ||    c[ir][ir]    <    -1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	3	None	replace
65	[BUG]  [BUGGY]  int  order  =  swap.length  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  swap.length  -  1;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  swap.length  -  1;	  int    order    =    c.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
66	[BUG]  [BUGGY]  int  order  =  ij;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  ij;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  ij;	  int    order    =    ir;    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
67	[BUG]  [BUGGY]  int  order  =  ii;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {      [BUGGY]  int  order  =  ii;  [BUGGY]      if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	100	100	2	replace	int  order  =  ii;	  int    order    =    ir;    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
