projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(r==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100r=c[ir][ir];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c.length;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(small){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=matrix.length;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ij];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(sqrt==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir].doubleValue();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=ir;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100c[ir][ir],ir,small);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(small||c[ir][ir]<-1){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<0){if(ir<0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<0){If(ir<0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir]+1;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(small==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir==0){if(ir==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir==0){if(ir>=0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100doubleorder=c[ir][ir].doubleValue();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c.length-1;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir].length;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100r=c[ir][ir]+1;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir]-1;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=matrix.length-1;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100r=c[ir][ij];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir+1];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir],ij;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<0||c[ir][ir]!=-1){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir==0){If(ir==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100c[ir][ir],ir,size);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<order){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<0||c[ir][ir]<-small){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=matrix[ir][ir].doubleValue();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir]&0xff;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir!=0){
