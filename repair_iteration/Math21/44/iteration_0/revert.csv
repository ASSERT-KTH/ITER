projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(r==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(ir<0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100r=c[ir][ir];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c.length;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(small){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=matrix.length;
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ij];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100if(sqrt==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java100intorder=c[ir][ir].doubleValue();
