bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]!=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]!=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]!=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	1	None	replace
2	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	1	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	37	2	add
4	[BUG]  [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	37	2	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	37	3	add
6	[BUG]  [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	37	3	add
7	[BUG]  [BUGGY]  if(c[i][i]  >  c[i][i])  {  swap[r]  =  tmp;  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[i][i]  >  c[i][i])  {  swap[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[i][i]  >  c[i][i])  {  swap[r]  =  tmp;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
8	[BUG]  [BUGGY]  if(c[ii][i]  >  c[i][i])  {  swap[r]  =  tmp;  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][i]  >  c[i][i])  {  swap[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][i]  >  c[i][i])  {  swap[r]  =  tmp;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  ii	9	None	replace
9	[BUG]  [BUGGY]  if(tmp!=  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp!=  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp!=  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	17	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	                tmp        =        index[r];        index[r]        =        index[swap[r]];        tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];	  	compilable	  [FE]  AssertionError  	11	3	add
11	[BUG]  [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	                tmp        =        index[r];        index[r]        =        index[swap[r]];        tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];	  	compilable	  [FE]  AssertionError  	11	3	add
12	[BUG]  [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	                tmp        =        index[r];        index[r]        =        index[swap[r]];        tmp    =    index[r];    index[r]    =    index[swap[r]];    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];	  	non-compiled	[CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	                tmp        =        index[r];        index[r]        =        index[swap[r]];        tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];	  	compilable	  [FE]  AssertionError  	11	3	add
14	[BUG]  [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	                tmp        =        index[r];        index[r]        =        index[swap[r]];        tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];	  	compilable	  [FE]  AssertionError  	11	3	add
15	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	3	None	replace
16	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	3	None	replace
17	[BUG]  [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	7	None	replace
18	[BUG]  [BUGGY]  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  tmp  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                    AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  tmp  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  tmp  +  1;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	7	None	replace
19	[BUG]  [BUGGY]  if(c[ii][ii]  >=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ii]  >=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ii]  >=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }	  if(c[ii][ii]    >=    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	30	None	replace
20	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }	  if(c[ii][ii]    >=    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	30	None	replace
21	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  i;  }	  if(tmp    <    0)    {    if(c[ii][i]    ==    c[isi][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  i;  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  i;  }	  if(tmp    <    0)    {    if(c[ii][i]    ==    c[isi][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  ii	15	None	replace
23	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ir],  small);  }  [CE]  cannot  find  symbol  ii  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ir],  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ir],  small);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii],    small);    }    	non-compiled	[CE]  cannot  find  symbol  ii	23	None	replace
24	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ir],  ir,  small);  }  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ir],  ir,  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ir],  ir,  small);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii],    small);    }    	non-compiled	[CE]  cannot  find  symbol  ii	23	None	replace
25	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij],  small);  }  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij],  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij],  small);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ij],       "   ");    }    	non-compiled	[CE]  cannot  find  symbol  ii	14	None	replace
26	[BUG]  [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij]);  }  [CE]  cannot  find  symbol  ii  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij]);  }	          if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii]);    }    	non-compiled	[CE]  cannot  find  symbol  ii	24	None	replace
27	[BUG]  [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][i]);  }  [CE]  cannot  find  symbol  ii  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][i]);  }	          if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii]);    }    	non-compiled	[CE]  cannot  find  symbol  ii	24	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    c.length;    i++)    {    if(!loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
29	[BUG]  [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    c.length;    i++)    {    if(!loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
30	[BUG]  [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i],   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i],   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
32	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]  ==  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]  ==  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][ii]  ==  c[isi][isi])  {  swap[r]  =  i  +  1;  }	  if(tmp    <    0)    {    if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  int  r  =  index[r];  index[r]  =  index[swap[r]]  +  2;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  int  r  =  index[r];  index[r]  =  index[swap[r]]  +  2;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	int  r  =  index[r];  index[r]  =  index[swap[r]]  +  2;	  int    r    =    index[r];    index[r]    =    index[swap[r]]    +    1;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	4	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(swap[r]    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	21	2	add
35	[BUG]  [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	21	2	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(swap[r]    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	21	3	add
37	[BUG]  [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	21	3	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(swap[r]    >=    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	28	3	add
39	[BUG]  [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]    >=    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	28	3	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(swap[r]    >=    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	28	3	add
41	[BUG]  [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]    >=    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	28	3	add
42	[BUG]  [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >>  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(swap[r]  >>  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]    >=    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(swap[r]  >>  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	non-compiled	[CE]  incompatible  types	28	None	add
43	[BUG]  [BUGGY]  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	int  tmp  =  index[r];  index[r]  =  index[swap[r]];	          tmp    =    index[r];    index[r]    =    index[swap[r]];    int    tmp    =    index[r];    index[r]    =    index[swap[r]];    	non-compiled	[CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
45	[BUG]  [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
46	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]!=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]!=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]!=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]  ==  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]  ==  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][ii]  ==  c[isi][isi])  {  swap[r]  =  i;  }	  if(tmp    <    0)    {    if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  b[swap[r]]  =  c;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  b[swap[r]]  =  c;  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	b[swap[r]]  =  c;	  b[swap[r]]    =    tmp;    	non-compiled	[CE]  incompatible  types	10	None	replace
51	[BUG]  [BUGGY]  safeTree(swap);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  safeTree(swap);  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	safeTree(swap);	  safeTree(tmp);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
52	[BUG]  [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	          if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
53	[BUG]  [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ",  tmp);  }  [CE]  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ",  tmp);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ",  tmp);  }	          if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp    ==    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	35	3	add
55	[BUG]  [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp    ==    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	35	3	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp    ==    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	35	3	add
57	[BUG]  [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  if(tmp!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp    ==    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    if(tmp!=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	35	3	add
58	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
59	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    c.length;    i++)    {    if(!loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
60	[BUG]  [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  If(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  If(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    If(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	non-compiled	[CE]  ';'  expected	37	None	add
61	[BUG]  [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	1	None	replace
62	[BUG]  [BUGGY]  if(c[ii][ij]  >=  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ij]  >=  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ij]  >=  c[isi][isi])  {  swap[r]  =  i  +  1;  }	  if(c[ii][ii]    >=    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	30	None	replace
63	[BUG]  [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  If(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  If(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp    ==    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    If(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  	non-compiled	[CE]  ';'  expected	35	None	add
64	[BUG]  [BUGGY]  MutableMatrix.throwException( " ");  [CE]  cannot  find  symbol  MutableMatrix  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  MutableMatrix.throwException( " ");  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	MutableMatrix.throwException( " ");	  aughtException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableMatrix	17	None	replace
65	[BUG]  [BUGGY]  MutableMatrix.exception( " ");  [CE]  cannot  find  symbol  MutableMatrix  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  MutableMatrix.exception( " ");  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	MutableMatrix.exception( " ");	  aughtException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableMatrix	17	None	replace
66	[BUG]  [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  i;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  ii	9	None	replace
67	[BUG]  [BUGGY]  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  tmp;  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][i]  >  c[isi][i])  {  swap[r]  =  tmp;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  ii	9	None	replace
68	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ii],  small);  }  [CE]  cannot  find  symbol  ii  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ii],  small);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ii],  small);  }	          if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii]);    }    	non-compiled	[CE]  cannot  find  symbol  ii	24	None	replace
70	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][i]  ==  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][i]  ==  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][i]  ==  c[isi][isi])  {  swap[r]  =  i;  }	  if(tmp    <    0)    {    if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][i]  >=  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][i]  >=  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][i]  >=  c[isi][isi])  {  swap[r]  =  i;  }	  if(tmp    <    0)    {    if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  if(tmp  >=  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  >=  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  >=  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	3	None	replace
73	[BUG]  [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    int    tmp    =    index[r];    index[r]    =    index[swap[r]];    	non-compiled	[CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	replace
74	[BUG]  [BUGGY]  safeTree(swap,  tmp);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  safeTree(swap,  tmp);  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	safeTree(swap,  tmp);	  safeTree(tmp);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
75	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ii],  ir,  small);  }  [CE]  cannot  find  symbol  ii  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ii],  ir,  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ii],  ir,  small);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii],    small);    }    	non-compiled	[CE]  cannot  find  symbol  ii	23	None	replace
76	[BUG]  [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  i  +  1;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	7	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
78	[BUG]  [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
80	[BUG]  [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
81	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],  small);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],  small);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],  small);  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i],   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
82	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij],  ir,  small);  }  [CE]  cannot  find  symbol  ii  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij],  ir,  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij],  ir,  small);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ij]);    }    	non-compiled	[CE]  cannot  find  symbol  ii	19	None	replace
83	[BUG]  [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  else  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  else  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(swap[r]  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  else  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    int    tmp    =    index[r];    index[r]    =    index[swap[r]];    	non-compiled	[CE]  variable  tmp  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	replace
84	[BUG]  [BUGGY]  b[swap[r]]  =  tmp  +  1;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  b[swap[r]]  =  tmp  +  1;  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	b[swap[r]]  =  tmp  +  1;	  b[swap[r]]    =    tmp;    	non-compiled	[CE]  incompatible  types	10	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
86	[BUG]  [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
88	[BUG]  [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	          tmp    =    index[r];    index[r]    =    index[swap[r]];    tmp    =    index[r];    index[r]    =    index[swap[r]];    	compilable	  [FE]  AssertionError  	12	3	replace
89	[BUG]  [BUGGY]  safeTree(tmp,  c);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  safeTree(tmp,  c);  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	safeTree(tmp,  c);	  safeTree(tmp);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
90	[BUG]  [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  tmp;  }  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ij]  >  c[isi][isi])  {  swap[r]  =  tmp;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  ii	9	None	replace
91	[BUG]  [BUGGY]  if(c[ii][ij]  >=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ij]  >=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ij]  >=  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }	  if(c[ii][ii]    >=    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	30	None	replace
92	[BUG]  [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij]  +  ' "'  +  tmp);  }  [CE]  cannot  find  symbol  ii  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij]  +  ' "'  +  tmp);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][ij]  +  ' "'  +  tmp);  }	          if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][ii]    +    '   "'    +    tmp);    }    	non-compiled	[CE]  cannot  find  symbol  ii	26	None	replace
93	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  i  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  i  +  1;  }	  if(tmp    <    0)    {    if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
94	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],   " ");  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i],   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],  small);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],  small);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i],  small);  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i],   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]    	non-compiled	[CE]  ')'  expected	3	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	add	if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    	compilable	  [FE]  AssertionError  	38	3	replace
98	[BUG]  [BUGGY]  if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  >=  0)  {  tmp  =  index[r];  index[r]  =  index[swap[r]];  }	  if(tmp    <    0)    {    tmp    =    index[r];    index[r]    =    index[swap[r]];    }    	compilable	  [FE]  AssertionError  	38	3	replace
99	[BUG]  [BUGGY]  try  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  try  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	try  {  for(int  i  =  0;  i  <  c.length;  i++)  {  if(c[i][i]  >=  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i]);  }	          if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(c[i][i]    >=    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i]);    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
100	[BUG]  [BUGGY]  try  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  try  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	try  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i]);    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	33	None	replace
101	[BUG]  [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }  [BUGGY]      }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  for(int  i  =  0;  i  <  tmp;  i++)  {  if(!  loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][i][i]);  }	  if(tmp    >    0)    {    for(int    i    =    0;    i    <    tmp;    i++)    {    if(!    loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
102	[BUG]  [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  if(c[ii][ii]!=  c[isi][isi])  {  swap[r]  =  i;  }	  if(tmp    <    0)    {    if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
103	[BUG]  [BUGGY]  if(c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [CE]  cannot  find  symbol  ii  [FE]                  AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  tmp  +  1;  }	  if(c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  ii	7	None	replace
104	[BUG]  [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][i],  small);  }  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];      [BUGGY]  if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][i],  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	93	93	2	replace	if(tmp  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ii][i],  small);  }	  if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(c[ii][i]);    }    	non-compiled	[CE]  cannot  find  symbol  ii	20	None	replace
