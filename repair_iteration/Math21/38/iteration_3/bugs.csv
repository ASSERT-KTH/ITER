bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  c.length;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank  -=  c.length;	  rank    -=    loop;    	compilable	  [FE]  AssertionError  	5	2	replace
2	[BUG]  [BUGGY]  rank  -=  c.length;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  c.length;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  c.length;	  rank    -=    loop;    	compilable	  [FE]  AssertionError  	5	2	replace
3	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop    ==    0)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  tmp  =  matrix.getMatrix(switch  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  tmp  =  matrix.getMatrix(switch  +  1);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	tmp  =  matrix.getMatrix(switch  +  1);	  tmp    =    matrix.getMatrix(switch);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  int  rank  -=  r;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  int  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	int  rank  -=  r;	  rank    -=    r;    int    rank    -=    r;    	non-compiled	[CE]  ';'  expected	10	None	replace
6	[BUG]  [BUGGY]  int  rank  -=  r  +  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  int  rank  -=  r  +  1;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	int  rank  -=  r  +  1;	  rank    -=    r;    int    rank    -=    r;    	non-compiled	[CE]  ';'  expected	10	None	replace
7	[BUG]  [BUGGY]  for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  f;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  f;  }  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  f;  }	  if(loop    >    0)    {    for(AssertionError    <    AssertionError    >=    c[ij][ii]    =    f;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
8	[BUG]  [BUGGY]  for(AssertionError  <  AssertionError  >=  c[ij][ii]  =  f;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(AssertionError  <  AssertionError  >=  c[ij][ii]  =  f;  }  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(AssertionError  <  AssertionError  >=  c[ij][ii]  =  f;  }	  if(loop    >    0)    {    for(AssertionError    <    AssertionError    >=    c[ij][ii]    =    f;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
9	[BUG]  [BUGGY]  rank  -=  isi;  [CE]  cannot  find  symbol  isi  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  isi;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  isi;	  rank    -=    ij;    	non-compiled	[CE]  cannot  find  symbol  isi	33	None	replace
10	[BUG]  [BUGGY]  b[i][ij]  =  tmp;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][ij]  =  tmp;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][ij]  =  tmp;	          b[i][ii]    =    tmp;    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
11	[BUG]  [BUGGY]  b[i][j]  =  tmp;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  tmp;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  tmp;	          b[i][ii]    =    tmp;    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  rank  -=  r;  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank        -=        r;        rank    -=    r;    rank  -=  r;  rank  -=  r;	  	compilable	  [FE]  AssertionError  	11	2	add
13	[BUG]  [BUGGY]  rank    -=    r;    rank  -=  r;  rank  -=  r;  rank  -=  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  rank  -=  r;  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        rank    -=    r;    rank  -=  r;  rank  -=  r;	  	compilable	  [FE]  AssertionError  	11	2	add
14	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]      AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  r  -=  r;  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank        -=        r;        rank    -=    r;    r  -=  r;  rank  -=  r;	  	compilable	  [FE]  NotStrictlyPositiveException  	11	3	add
15	[BUG]  [BUGGY]  rank    -=    r;    rank  -=  r;  r  -=  r;  rank  -=  r;  [FE]  NotStrictlyPositiveException  [FE]      AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  r  -=  r;  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        rank    -=    r;    r  -=  r;  rank  -=  r;	  	compilable	  [FE]  NotStrictlyPositiveException  	11	3	add
16	[BUG]  [BUGGY]  rank    -=    r;    rank  -=  r;  int  ij  -=  r;  rank  -=  r;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  int  ij  -=  r;  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        rank    -=    r;    int  ij  -=  r;  rank  -=  r;	  	non-compiled	[CE]  ';'  expected	11	None	add
17	[BUG]  [BUGGY]  b[i][ir]  =  c[ij][ii];  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][ir]  =  c[ij][ii];  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][ir]  =  c[ij][ii];	          b[i][ii]    =    c[ij][ii];    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
18	[BUG]  [BUGGY]  b[i][j]  =  c[ij][j];  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  c[ij][j];  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  c[ij][j];	          b[i][ii]    =    c[ij][ii];    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	32	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	32	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  variable  root  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  variable  root  might  not  have  been  initialized	35	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	35	None	replace
23	[BUG]  [BUGGY]  r  =  matrix.getMatrix(loop);  [CE]  cannot  find  symbol  loop  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  =  matrix.getMatrix(loop);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	r  =  matrix.getMatrix(loop);	  r    =    matrix.getMatrix();    	non-compiled	[CE]  cannot  find  symbol  loop	1	None	replace
24	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }	  if(loop!=    0)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
25	[BUG]  [BUGGY]  if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }	  if(loop!=    0)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
26	[BUG]  [BUGGY]  rank  -=  e;  [CE]  cannot  find  symbol  e  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  e;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  e;	  rank    -=    l;    	non-compiled	[CE]  cannot  find  symbol  e	6	None	replace
27	[BUG]  [BUGGY]  rank  -=  f;  [CE]  cannot  find  symbol  f  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  f;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  f;	  rank    -=    l;    	non-compiled	[CE]  cannot  find  symbol  f	6	None	replace
28	[BUG]  [BUGGY]  r  -=  ij;  [CE]  cannot  find  symbol  ij  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  -=  ij;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	r  -=  ij;	  rank    -=    r;    rank    -=    r;    	non-compiled	[CE]  cannot  find  symbol  ij	12	None	replace
29	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	r  -=  r;	  rank    -=    r;    r    -=    r;    	compilable	  [FE]  NotStrictlyPositiveException  	9	3	replace
30	[BUG]  [BUGGY]  r  -=  r;  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	r  -=  r;	  rank    -=    r;    r    -=    r;    	compilable	  [FE]  NotStrictlyPositiveException  	9	3	replace
31	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  if(loop    >    0)    {    for(int    ij    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(b[i][i]);  }  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(b[i][i]);    }    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	27	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(b[i][i]);  }  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(b[i][i]);    }    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	27	None	replace
34	[BUG]  [BUGGY]  b[i][ij]  =  f;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][ij]  =  f;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][ij]  =  f;	          b[i][ii]    =    f;    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
35	[BUG]  [BUGGY]  b[ij][ii]  =  f;  [CE]  cannot  find  symbol  ij  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[ij][ii]  =  f;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[ij][ii]  =  f;	          b[i][ii]    =    f;    	non-compiled	[CE]  cannot  find  symbol  ij	13	None	replace
36	[BUG]  [BUGGY]  RealMatrix  matrix  =  c.getMatrix();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  RealMatrix  matrix  =  c.getMatrix();  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	RealMatrix  matrix  =  c.getMatrix();	  RealMatrix    matrix    =    matrix.getMatrix();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	34	None	replace
37	[BUG]  [BUGGY]  RealMatrix  matrix  =  loop.getMatrix();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  RealMatrix  matrix  =  loop.getMatrix();  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	RealMatrix  matrix  =  loop.getMatrix();	  RealMatrix    matrix    =    matrix.getMatrix();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	34	None	replace
38	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(sw,  index);  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  matrix.getMatrix(sw,  index);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  matrix.getMatrix(sw,  index);	  b[i][j]    =    matrix.getMatrix(sw);    	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
39	[BUG]  [BUGGY]  for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  loop;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  loop;  }  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  loop;  }	  if(loop    >    0)    {    for(AssertionError    <    AssertionError    >>    c[ij][ii]    =    f;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  =  c.length;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank  =  c.length;	  rank    =    c;    	compilable	  [FE]  AssertionError  	24	2	replace
41	[BUG]  [BUGGY]  rank  =  c.length;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  =  c.length;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  =  c.length;	  rank    =    c;    	compilable	  [FE]  AssertionError  	24	2	replace
42	[BUG]  [BUGGY]  tmp  =  matrix.getMatrix(small,  ii);  [CE]  cannot  find  symbol  tmp  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  tmp  =  matrix.getMatrix(small,  ii);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	tmp  =  matrix.getMatrix(small,  ii);	  tmp    =    matrix.getMatrix(loop,    ii);    	non-compiled	[CE]  cannot  find  symbol  tmp	20	None	replace
43	[BUG]  [BUGGY]  Matrix  tmp  =  matrix.getMatrix(loop);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  Matrix  tmp  =  matrix.getMatrix(loop);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	Matrix  tmp  =  matrix.getMatrix(loop);	  Matrix    tmp    =    matrix.getMatrix();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
44	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    r  -=  r;  rank  -=  r;  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank        -=        r;        r    -=    r;    rank  -=  r;  r  -=  r;	  	compilable	  [FE]  NotStrictlyPositiveException  	8	3	add
45	[BUG]  [BUGGY]  rank    -=    r;    r  -=  r;  rank  -=  r;  r  -=  r;  [FE]  NotStrictlyPositiveException  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    r  -=  r;  rank  -=  r;  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        r    -=    r;    rank  -=  r;  r  -=  r;	  	compilable	  [FE]  NotStrictlyPositiveException  	8	3	add
46	[BUG]  [BUGGY]  rank    -=    r;    r  -=  r;  int  rank  -=  r;  r  -=  r;  [CE]  ';'  expected  [FE]      NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    r  -=  r;  int  rank  -=  r;  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        r    -=    r;    int  rank  -=  r;  r  -=  r;	  	non-compiled	[CE]  ';'  expected	8	None	add
47	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]        NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    r  -=  r;  r  -=  r;  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank        -=        r;        r    -=    r;    r  -=  r;  r  -=  r;	  	compilable	  [FE]  NotStrictlyPositiveException  	8	3	add
48	[BUG]  [BUGGY]  rank    -=    r;    r  -=  r;  r  -=  r;  r  -=  r;  [FE]  NotStrictlyPositiveException  [FE]        NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    r  -=  r;  r  -=  r;  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        r    -=    r;    r  -=  r;  r  -=  r;	  	compilable	  [FE]  NotStrictlyPositiveException  	8	3	add
49	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  small);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  small);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  matrix.getMatrix(loop,  small);	  b[i][j]    =    matrix.getMatrix(small);    	non-compiled	[CE]  cannot  find  symbol  i	18	None	replace
50	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(switch  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  matrix.getMatrix(switch  +  1);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  matrix.getMatrix(switch  +  1);	  b[i][j]    =    matrix.getMatrix(switch);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  tmp  =  matrix.getMatrix(loop,  small);  [CE]  cannot  find  symbol  tmp  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  tmp  =  matrix.getMatrix(loop,  small);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	tmp  =  matrix.getMatrix(loop,  small);	  tmp    =    matrix.getMatrix(small,    ij);    	non-compiled	[CE]  cannot  find  symbol  tmp	43	None	replace
52	[BUG]  [BUGGY]  int  r  =  matrix.getColumnCount();  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  int  r  =  matrix.getColumnCount();  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	int  r  =  matrix.getColumnCount();	          int    r    =    matrix.getRowCount();    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	39	None	replace
53	[BUG]  [BUGGY]  int  r  =  matrix.getRowCount()  +  1;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  int  r  =  matrix.getRowCount()  +  1;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	int  r  =  matrix.getRowCount()  +  1;	          int    r    =    matrix.getRowCount();    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	39	None	replace
54	[BUG]  [BUGGY]  if(c!=  null)  {  if(loop  >  0)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(c!=  null)  {  if(loop  >  0)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(c!=  null)  {  if(loop  >  0)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }	          if(loop    >    0)    {    for(int    i    =    0;    i    <    c.length;    ++i)    {    b[i][i]    =    f;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
55	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  ==  0)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  ==  0)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }	          if(loop    >    0)    {    for(int    i    =    0;    i    <    c.length;    ++i)    {    b[i][i]    =    f;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
56	[BUG]  [BUGGY]  rank  -=  tmp;  [CE]  cannot  find  symbol  tmp  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  tmp;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  tmp;	  rank    -=    l;    	non-compiled	[CE]  cannot  find  symbol  tmp	6	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  variable  root  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  variable  root  might  not  have  been  initialized	35	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  variable  root  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  variable  root  might  not  have  been  initialized	35	None	replace
59	[BUG]  [BUGGY]  for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  f;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(AssertionError  <  AssertionError  >>  c[ij][ii]  =  f;	  if(loop    >    0)    {    for(AssertionError    <    AssertionError    >>    c[ij][ii]    =    f;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
60	[BUG]  [BUGGY]  Matrix  tmp  =  matrix.getMatrix(short);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  Matrix  tmp  =  matrix.getMatrix(short);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	Matrix  tmp  =  matrix.getMatrix(short);	  Matrix    tmp    =    matrix.getMatrix();    	non-compiled	[CE]  '.class'  expected	40	None	replace
61	[BUG]  [BUGGY]  rank  -=  size;  [CE]  cannot  find  symbol  size  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  size;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  size;	  rank    -=    loop;    	non-compiled	[CE]  cannot  find  symbol  size	5	None	replace
62	[BUG]  [BUGGY]  rank    -=    r;    rank  -=  r;  int  r  =  matrix.length;  rank  -=  r;  rank  -=  r;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  int  r  =  matrix.length;  rank  -=  r;  rank  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        rank    -=    r;    int  r  =  matrix.length;  rank  -=  r;  rank  -=  r;	  	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(b[i][i]);  }  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(b[i][i]);    }    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	27	None	replace
64	[BUG]  [BUGGY]  tmp  =  matrix.getMatrix(small,  ij,  ii);  [CE]  cannot  find  symbol  tmp  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  tmp  =  matrix.getMatrix(small,  ij,  ii);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	tmp  =  matrix.getMatrix(small,  ij,  ii);	  tmp    =    matrix.getMatrix(small,    ij);    	non-compiled	[CE]  cannot  find  symbol  tmp	43	None	replace
65	[BUG]  [BUGGY]  b[i][ij]  =  matrix[ij][ii];  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][ij]  =  matrix[ij][ii];  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][ij]  =  matrix[ij][ii];	          b[i][ii]    =    c[ij][ii];    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
66	[BUG]  [BUGGY]  RealMatrix  matrix  =  root.getMatrix();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  RealMatrix  matrix  =  root.getMatrix();  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	RealMatrix  matrix  =  root.getMatrix();	  RealMatrix    matrix    =    matrix.getMatrix();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	34	None	replace
67	[BUG]  [BUGGY]  if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop    >    0)    {    for(int    ij    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
68	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  b[i][i]  =  f;  }	          if(loop    >    0)    {    for(int    i    =    0;    i    <    c.length;    ++i)    {    b[i][i]    =    f;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
69	[BUG]  [BUGGY]  for(int  ij  =  0;  i  <  loop;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  ij  =  0;  i  <  loop;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  ij  =  0;  i  <  loop;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  if(loop    >    0)    {    for(int    ij    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	4	None	replace
70	[BUG]  [BUGGY]  rank  -=  isi;  r  -=  r;  [CE]  cannot  find  symbol  isi  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  isi;  r  -=  r;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  isi;  r  -=  r;	  rank    -=    r;    r    -=    r;    	non-compiled	[CE]  cannot  find  symbol  isi	9	None	replace
71	[BUG]  [BUGGY]  r  =  matrix.getMatrix(short);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  =  matrix.getMatrix(short);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	r  =  matrix.getMatrix(short);	  r    =    matrix.getMatrix();    	non-compiled	[CE]  '.class'  expected	1	None	replace
72	[BUG]  [BUGGY]  b[i][j]  =  f;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  f;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  f;	          b[i][ii]    =    f;    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
73	[BUG]  [BUGGY]  int  r  =  matrix.getRowCount()  -  1;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  int  r  =  matrix.getRowCount()  -  1;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	int  r  =  matrix.getRowCount()  -  1;	          int    r    =    matrix.getRowCount();    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	39	None	replace
74	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  c[i][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  c[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  ==  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  c[i][i]);  }	  if(loop    ==    0)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
75	[BUG]  [BUGGY]  Matrix  tmp  =  matrix.getMatrix(small);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  Matrix  tmp  =  matrix.getMatrix(small);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	Matrix  tmp  =  matrix.getMatrix(small);	  Matrix    tmp    =    matrix.getMatrix();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
76	[BUG]  [BUGGY]  if(loop  <  =  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  <  =  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  <  =  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop    >    0)    {    for(int    ij    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  small;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank  -=  small;	  rank    -=    ij;    	compilable	  [FE]  AssertionError  	33	2	replace
78	[BUG]  [BUGGY]  rank  -=  small;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  small;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  small;	  rank    -=    ij;    	compilable	  [FE]  AssertionError  	33	2	replace
79	[BUG]  [BUGGY]  b[i][ii]  =  matrix[ij][ii];  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][ii]  =  matrix[ij][ii];  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][ii]  =  matrix[ij][ii];	          b[i][ii]    =    c[ij][ii];    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
80	[BUG]  [BUGGY]  rank    -=    r;    rank  -=  r;  rank  -=  l;  rank  -=  l;  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    rank  -=  r;  rank  -=  l;  rank  -=  l;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        rank    -=    r;    rank  -=  l;  rank  -=  l;	  	non-compiled	[CE]  cannot  find  symbol  l	11	None	add
81	[BUG]  [BUGGY]  if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop!=  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  if(loop    ==    0)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  -=  rank;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	r  -=  rank;	  rank    -=    r;    r    -=    r;    	compilable	  [FE]  AssertionError  	9	2	replace
83	[BUG]  [BUGGY]  r  -=  rank;  [FE]  AssertionError  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  -=  rank;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	r  -=  rank;	  rank    -=    r;    r    -=    r;    	compilable	  [FE]  AssertionError  	9	2	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	32	None	replace
85	[BUG]  [BUGGY]  tmp  =  matrix.getMatrix(switch,  ij);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  tmp  =  matrix.getMatrix(switch,  ij);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	tmp  =  matrix.getMatrix(switch,  ij);	  tmp    =    matrix.getMatrix(loop,    ij);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
86	[BUG]  [BUGGY]  b[i][ij]  =  t;  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][ij]  =  t;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][ij]  =  t;	          b[i][ii]    =    tmp;    	non-compiled	[CE]  cannot  find  symbol  i	14	None	replace
87	[BUG]  [BUGGY]  if(loop  <  =  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop  <  =  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop  <  =  0)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	  if(loop    >    0)    {    for(int    ij    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
88	[BUG]  [BUGGY]  b[i][i]  =  f;  [CE]  cannot  find  symbol  i  [FE]        AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][i]  =  f;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][i]  =  f;	          if(loop    >    0)    {    for(int    i    =    0;    i    <    c.length;    ++i)    {    b[i][i]    =    f;    }    	non-compiled	[CE]  cannot  find  symbol  i	36	None	replace
89	[BUG]  [BUGGY]  r  =  matrix.getMatrix(small);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  r  =  matrix.getMatrix(small);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	r  =  matrix.getMatrix(small);	  r    =    matrix.getMatrix();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
90	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(stack);  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  b[i][j]  =  matrix.getMatrix(stack);  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	b[i][j]  =  matrix.getMatrix(stack);	  b[i][j]    =    matrix.getMatrix(small);    	non-compiled	[CE]  cannot  find  symbol  i	18	None	replace
91	[BUG]  [BUGGY]  rank    -=    r;    r  -=  r;  rank  -=  l;  r  -=  l;  [CE]  cannot  find  symbol  l  [FE]    NotStrictlyPositiveException    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank    -=    r;    r  -=  r;  rank  -=  l;  r  -=  l;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank        -=        r;        r    -=    r;    rank  -=  l;  r  -=  l;	  	non-compiled	[CE]  cannot  find  symbol  l	8	None	add
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  r  +  1;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	add	rank  -=  r  +  1;	  rank    -=    r;    rank    -=    r;    	compilable	  [FE]  AssertionError  	12	2	replace
93	[BUG]  [BUGGY]  rank  -=  r  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  rank  -=  r  +  1;  [BUGGY]      root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	rank  -=  r  +  1;	  rank    -=    r;    rank    -=    r;    	compilable	  [FE]  AssertionError  	12	2	replace
94	[BUG]  [BUGGY]  if(loop!=  1)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  }        [BUGGY]  if(loop!=  1)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }  [BUGGY]      rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	143	143	2	replace	if(loop!=  1)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(b[i][i]);  }	  if(loop!=    0)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(b[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
