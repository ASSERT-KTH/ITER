increase failing tests,72,replace, [FE] AssertionError testMath789,index[i] = i; ,index[i] = 0;
increase failing tests,72,replace, [FE] AssertionError testMath789,index[i] = i; , 
increase failing tests,70,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] index = new int[order]; ,int[] index = new int[order - 1];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789,final double[][] b = new double[order][order]; ,final double[][] b = new double[0][order];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789,final double[][] b = new double[order][order]; ,final double[][] b = new double[2][order];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789,final double[][] b = new double[order][order]; ,final double[][] b = new double[1][order];
increase failing tests,71,replace, [FE] AssertionError testMath789,for (int i = 0; i < order; ++i) { ,for(int i = 0; i < 0; ++i) {
increase failing tests,70,add, [FE] ArrayStoreException testMath789,,  System.arraycopy(c, 0, swap, 0, order);
increase failing tests,70,add, [FE] AssertionError testMath789,,  System.arraycopy(c, 0, b, 0, order);
increase failing tests,76,replace, [FE] NotStrictlyPositiveException testMath789,for (boolean loop = true; loop;) { ,for(boolean loop = false; loop;) {
increase failing tests,75,replace, [FE] AssertionError testMath789,int r = 0; ,int r = 1;
increase failing tests,69,add, [FE] AssertionError testMath789,,  System.arraycopy(c, 0, b, 0, order);
increase failing tests,69,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] swap= new int[order]; ,int[] swap = new int[order - 1];
increase failing tests,69,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] swap= new int[order]; ,int[] swap = new int[2];
increase failing tests,70,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] index = new int[order]; ,int[] index = new int[2];
increase failing tests,70,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] index = new int[order]; ,int[] index = new int[1];
increase failing tests,76,replace, [FE] NotStrictlyPositiveException testMath789,for (boolean loop = true; loop;) { ,for(boolean loop = false; loop = false;) {
increase failing tests,76,replace, [FE] ArrayIndexOutOfBoundsException testMath789,for (boolean loop = true; loop;) { ,for(boolean loop = false; loop = true;) {
increase failing tests,75,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int r = 0; ,int r = 0xFFFF;
increase failing tests,75,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int r = 0; ,int r =(int)c.length;
increase failing tests,70,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] index = new int[order]; ,int[] index = new int[0];
increase failing tests,75,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int r = 0; ,int r = -1;
increase failing tests,69,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] swap= new int[order]; ,int[] swap = new int[0];
increase failing tests,69,replace, [FE] ArrayIndexOutOfBoundsException testMath789,int[] swap= new int[order]; ,int[] swap = new int[1];
increase failing tests,72,replace, [FE] ArrayIndexOutOfBoundsException testMath789,index[i] = i; ,index[i] = b.length;
