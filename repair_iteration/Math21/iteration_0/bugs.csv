bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throws NonPositiveDefiniteMatrixException { [FE] AssertionError testMath789 [CONTEXT] [BUGGY] throws NonPositiveDefiniteMatrixException { [BUGGY]  final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] [BUGGY] [BUGGY] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	add	
3	[BUG] [BUGGY] final int order = matrix.getRowDimension(); [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { [BUGGY] final int order = matrix.getRowDimension(); [BUGGY] final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { [BUGGY] [BUGGY] final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	add	
5	[BUG] [BUGGY] final double[][] c = matrix.getData(); [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); [BUGGY] final double[][] c = matrix.getData(); [BUGGY] final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) { [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); [BUGGY] [BUGGY] final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) { [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	add	
7	[BUG] [BUGGY] final double[][] b = new double[order][order]; [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); [BUGGY] final double[][] b = new double[order][order]; [BUGGY]  int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); [BUGGY] [BUGGY] final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	add	
9	[BUG] [BUGGY] int[] swap= new int[order]; [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; [BUGGY] int[] swap= new int[order]; [BUGGY] int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; [BUGGY] [BUGGY] int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	add	
11	[BUG] [BUGGY] int[] index = new int[order]; [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; [BUGGY] int[] index = new int[order]; [BUGGY] for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; [BUGGY] [BUGGY] int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	add	
13	[BUG] [BUGGY] for (int i = 0; i < order; ++i) { [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; [BUGGY] for (int i = 0; i < order; ++i) { [BUGGY] index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; [BUGGY] [BUGGY] for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	add	
15	[BUG] [BUGGY] index[i] = i; [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { [BUGGY] index[i] = i; [BUGGY] } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] throws NonPositiveDefiniteMatrixException { final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { [BUGGY] [BUGGY] index[i] = i; } int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	
17	[BUG] [BUGGY] int r = 0; [FE] AssertionError testMath789 [CONTEXT] final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } [BUGGY] int r = 0; [BUGGY] for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; if (c[ii][ii] > c[isi][isi]) { swap[r] = i; } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] final int order = matrix.getRowDimension(); final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } [BUGGY] [BUGGY] int r = 0; for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; if (c[ii][ii] > c[isi][isi]) { swap[r] = i; } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	add	
19	[BUG] [BUGGY] for (boolean loop = true; loop;) { [FE] AssertionError testMath789 [CONTEXT] final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; [BUGGY] for (boolean loop = true; loop;) { [BUGGY]   swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; if (c[ii][ii] > c[isi][isi]) { swap[r] = i; } } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError testMath789 [CONTEXT] final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; [BUGGY] [BUGGY] for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; if (c[ii][ii] > c[isi][isi]) { swap[r] = i; } } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	add	
