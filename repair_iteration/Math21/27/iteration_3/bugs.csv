bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  scale);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  scale);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  scale);	  final    double    inverse    =    FastMath.sqrt(c[ir][ir],    scale);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None	replace
2	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  size);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  size);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  size);	  final    double    inverse    =    FastMath.sqrt(c[ir][ir],    scale);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None	replace
3	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[	  if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    final    int    i    =    index[i];    final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[i    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  scale);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  scale);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  scale);	  final    double    inverse    =    FastMath.sqrt(c[i][ir],    scale);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
5	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  size);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  size);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  size);	  final    double    inverse    =    FastMath.sqrt(c[i][ir],    scale);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
6	[BUG]  [BUGGY]  final  double  ii  =  sqrt[i];  [CE]  array  required,  but  double  found  [FE]              AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  ii  =  sqrt[i];  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  ii  =  sqrt[i];	  final    int    ii    =    sqrt[i];    	non-compiled	[CE]  array  required,  but  double  found	1	None	replace
7	[BUG]  [BUGGY]  final  int  ii  =  c[i];  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  c[i];  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  ii  =  c[i];	  final    int    ii    =    sqrt[i];    	non-compiled	[CE]  incompatible  types	1	None	replace
8	[BUG]  [BUGGY]  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][ir];  b[i][i]  -=  inverse  *  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][ir];  b[i][i]  -=  inverse  *  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][ir];  b[i][i]  -=  inverse  *	  final    int    i    =    index[i];    final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  final  int  ii  =  sqrt[i]  +  1;  [CE]  array  required,  but  double  found  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  sqrt[i]  +  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  ii  =  sqrt[i]  +  1;	  final    int    ii    =    size[i]    +    1;    	non-compiled	[CE]  array  required,  but  double  found	27	None	replace
10	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  /  2;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	add	final  int  ii  =  index[i]  /  2;	  final    int    ii    =    index[i]    /    1;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	21	3	replace
11	[BUG]  [BUGGY]  final  int  ii  =  index[i]  /  2;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  /  2;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  ii  =  index[i]  /  2;	  final    int    ii    =    index[i]    /    1;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	21	3	replace
12	[BUG]  [BUGGY]  final  int  ii  =  size[i]  /  1;  [CE]  cannot  find  symbol  size  [FE]      AssertionError    [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  size[i]  /  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  ii  =  size[i]  /  1;	  final    int    ii    =    index[i]    /    1;    	non-compiled	[CE]  cannot  find  symbol  size	21	None	replace
13	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ii][ir],  scale);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ii][ir],  scale);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[ii][ir],  scale);	  final    double    inverse    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	25	None	replace
14	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[i  +  1][i  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[i  +  1][i  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[i  +  1][i	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[i    	non-compiled	[CE]  ']'  expected	24	None	replace
15	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  int  ii  =  index[i]  +  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	add	int  ii  =  index[i]  +  1;	  final    int    ii    =    index[i]    +    1;    int    ii    =    index[i]    +    1;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	9	3	replace
16	[BUG]  [BUGGY]  int  ii  =  index[i]  +  1;  [FE]  NonPositiveDefiniteMatrixException  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  int  ii  =  index[i]  +  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	int  ii  =  index[i]  +  1;	  final    int    ii    =    index[i]    +    1;    int    ii    =    index[i]    +    1;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	9	3	replace
17	[BUG]  [BUGGY]  final  double  order[][]  =  sqrt;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  order[][]  =  sqrt;  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  order[][]  =  sqrt;	  final    double    order[][]    =    inverse;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
18	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  sqrt[  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  sqrt[  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  sqrt[	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  final  double  order[]  =  sqrt;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  order[]  =  sqrt;  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  order[]  =  sqrt;	  final    double    order[]    =    inverse;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	4	None	replace
20	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  e  *  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  e  *  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  e  *	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(matrix[i]);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(matrix[i]);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(matrix[i]);	  final    double    inverse    =    FastMath.sqrt(small[i]);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	replace
22	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][i],  scale);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][i],  scale);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[i][i],  scale);	  final    double    inverse    =    FastMath.sqrt(c[i][i]);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	10	None	replace
23	[BUG]  [BUGGY]  final  int  ii  =  index[i]  /  1;  final  int  ii  =  index[i]  /  1;  [CE]  variable  ii  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  /  1;  final  int  ii  =  index[i]  /  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final    int    ii    =    index[i]    /    1;    final  int  ii  =  index[i]  /  1;	  	non-compiled	[CE]  variable  ii  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	20	None	add
24	[BUG]  [BUGGY]  final  int  ii  =  index[i]  /  1;  final  int  ii  =  index[i]  /  2;  [CE]  variable  ii  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError    [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  /  1;  final  int  ii  =  index[i]  /  2;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final    int    ii    =    index[i]    /    1;    final  int  ii  =  index[i]  /  2;	  	non-compiled	[CE]  variable  ii  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	20	None	add
25	[BUG]  [BUGGY]  final  int  ii  =  scale[i]  -  1;  [CE]  cannot  find  symbol  scale  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  scale[i]  -  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  ii  =  scale[i]  -  1;	  final    int    ii    =    size[i]    -    1;    	non-compiled	[CE]  cannot  find  symbol  scale	7	None	replace
26	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[i  +  1  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[i  +  1  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  c[i  +  1	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[i    	non-compiled	[CE]  ']'  expected	24	None	replace
27	[BUG]  [BUGGY]  final  double  e  =  inverse  *  b[i][i];  b[i][i]  -=  inverse  *  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  b[i][i];  b[i][i]  -=  inverse  *  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  b[i][i];  b[i][i]  -=  inverse  *	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  final  int  ii  =  index[i]  /  1;  Final  int  ii  =  index[i]  /  1;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  /  1;  Final  int  ii  =  index[i]  /  1;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final    int    ii    =    index[i]    /    1;    Final  int  ii  =  index[i]  /  1;	  	non-compiled	[CE]  not  a  statement	20	None	add
29	[BUG]  [BUGGY]  final  double  e  =  inverse  *  b[i][i];  b[i][i]  -=  inverse  *  c[  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  b[i][i];  b[i][i]  -=  inverse  *  c[  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  b[i][i];  b[i][i]  -=  inverse  *  c[	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  final  int  i  =  index[i];  final  double  e  =  inverse  *  c[i][i];  b[i][i]  -=  inverse  *	  if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    final    int    i    =    index[i];    final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[i    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  +  2;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	add	final  int  ii  =  index[i]  +  2;	  final    int    ii    =    index[i]    +    1;    final    int    ii    =    index[i]    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	3	replace
32	[BUG]  [BUGGY]  final  int  ii  =  index[i]  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  int  ii  =  index[i]  +  2;  [BUGGY]      final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  int  ii  =  index[i]  +  2;	  final    int    ii    =    index[i]    +    1;    final    int    ii    =    index[i]    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	3	replace
33	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  small);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  small);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[i][ir],  scale,  small);	  final    double    inverse    =    FastMath.sqrt(c[i][ir],    scale);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
34	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  small);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  small);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(c[ir][ir],  scale,  small);	  final    double    inverse    =    FastMath.sqrt(c[ir][ir],    scale);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None	replace
35	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[0][i];  b[0][i]  -=  inverse  *  c[0  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  e  =  inverse  *  c[0][i];  b[0][i]  -=  inverse  *  c[0  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  e  =  inverse  *  c[0][i];  b[0][i]  -=  inverse  *  c[0	  final    double    e    =    inverse    *    c[i][i];    b[i][i]    -=    inverse    *    c[i    	non-compiled	[CE]  ']'  expected	24	None	replace
36	[BUG]  [BUGGY]  final  double  order[]  =  inverse  +  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  order[]  =  inverse  +  1;  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  order[]  =  inverse  +  1;	  final    double    order[]    =    inverse;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	4	None	replace
37	[BUG]  [BUGGY]  final  double  inverse  =  FastMath.sqrt(b[ii][ir]);  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {      [BUGGY]  final  double  inverse  =  FastMath.sqrt(b[ii][ir]);  [BUGGY]      final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	125	125	2	replace	final  double  inverse  =  FastMath.sqrt(b[ii][ir]);	  final    double    inverse    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	25	None	replace
