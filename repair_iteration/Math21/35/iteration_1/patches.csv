bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];	  	compilable	  [FE]  AssertionError  	18	2	add
2	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];	  	compilable	  [FE]  AssertionError  	18	2	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  -=  e  *  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  -=  e  *  f;	      	compilable	  [FE]  AssertionError  	6	3	replace
4	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  -=  e  *  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  -=  e  *  f;	      	compilable	  [FE]  AssertionError  	6	3	replace
5	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  e;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  =  e;	  c[ii][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	replace
6	[BUG]  [BUGGY]  c[ii][ij]  =  e;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  e;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  =  e;	  c[ii][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	        c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	7	2	add
8	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	7	2	add
9	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f);  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f);	  	non-compiled	[CE]  ';'  expected	7	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]    =    f;    c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	1	2	add
11	[BUG]  [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    f;    c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	1	2	add
12	[BUG]  [BUGGY]  c[ii][ij]  =  f;  for(int  ii][ij]  =  f;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  for(int  ii][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    f;    for(int  ii][ij]  =  f;	  	non-compiled	[CE]  ';'  expected	1	None	add
13	[BUG]  [BUGGY]  c[ii][ij]  =  f;  int[ii][ij]  =  f;  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  int[ii][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    f;    int[ii][ij]  =  f;	  	non-compiled	[CE]  ']'  expected	1	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  e;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  e;	      c[ij][ii]    -=    f;    	compilable	  [FE]  AssertionError  	10	2	replace
15	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  e;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e;	      c[ij][ii]    -=    f;    	compilable	  [FE]  AssertionError  	10	2	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  f  *  e;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  f  *  e;	      c[ij][ii]    -=    f;    	compilable	  [FE]  AssertionError  	10	2	replace
17	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  f  *  e;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  f  *  e;	      c[ij][ii]    -=    f;    	compilable	  [FE]  AssertionError  	10	2	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  f  *  b[j][r];	      c[ij][ii]    -=    e    *    b[j][r];    	compilable	  [FE]  AssertionError  	19	2	replace
19	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  f  *  b[j][r];	      c[ij][ii]    -=    e    *    b[j][r];    	compilable	  [FE]  AssertionError  	19	2	replace
20	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  ']'  expected	15	None	replace
21	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  ']'  expected	15	None	replace
22	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  b;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ii]  -=  e  *  b;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  -=  e  *  b;	      c[ii][ii]    -=    e    *    f;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	17	None	replace
23	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  b;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  e  *  b;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  b;	      c[ij][ii]    -=    e    *    f;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	8	None	replace
24	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]    =    f;    c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	3	3	add
27	[BUG]  [BUGGY]  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    f;    c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	3	3	add
28	[BUG]  [BUGGY]  c[ij][ij]  =  f;  for(int  ij][ij]  =  f;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  for(int  ij][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    f;    for(int  ij][ij]  =  f;	  	non-compiled	[CE]  ';'  expected	3	None	add
29	[BUG]  [BUGGY]  c[ij][ij]  =  f;  int[ij][ij]  =  f;  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  int[ij][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    f;    int[ij][ij]  =  f;	  	non-compiled	[CE]  ']'  expected	3	None	add
30	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
31	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  not  a  statement	13	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	        c[ij][ii]    -=    f;    c[ij][ii]  -=  f;	  	compilable	  [FE]  AssertionError  	9	2	add
33	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    c[ij][ii]  -=  f;	  	compilable	  [FE]  AssertionError  	9	2	add
34	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  f);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  f);  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    c[ij][ii]  -=  f);	  	non-compiled	[CE]  ';'  expected	9	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	        c[ij][ii]    -=    f;    c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	9	2	add
36	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	9	2	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  e;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]  =  e;	  c[ij][ij]    =    f;    	compilable	  [FE]  AssertionError  	4	3	replace
38	[BUG]  [BUGGY]  c[ij][ij]  =  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  e;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]  =  e;	  c[ij][ij]    =    f;    	compilable	  [FE]  AssertionError  	4	3	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	11	3	add
40	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	11	3	add
41	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  inverse;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  inverse;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    inverse;    for(int  ij][ij]  =  inverse;	  	non-compiled	[CE]  ';'  expected	11	None	add
42	[BUG]  [BUGGY]      if(switch  ==  null)  {  for(int  i  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      if(switch  ==  null)  {  for(int  i  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        if(switch  ==  null)  {  for(int  i  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	16	3	add
44	[BUG]  [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	16	3	add
45	[BUG]  [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f);  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f);	  	non-compiled	[CE]  ';'  expected	16	None	add
46	[BUG]  [BUGGY]  inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f	      	non-compiled	[CE]  ';'  expected	6	None	replace
48	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  inverse;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  =  inverse;	  c[ii][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	replace
49	[BUG]  [BUGGY]  c[ii][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  inverse;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  =  inverse;	  c[ii][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  f  *  sqrt;	      c[ij][ii]    -=    f;    	compilable	  [FE]  AssertionError  	10	2	replace
51	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  f  *  sqrt;	      c[ij][ii]    -=    f;    	compilable	  [FE]  AssertionError  	10	2	replace
52	[BUG]  [BUGGY]  c[ij][ij]  =  f;  final  double  c[ij][ij]  =  f;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  final  double  c[ij][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    f;    final  double  c[ij][ij]  =  f;	  	non-compiled	[CE]  ']'  expected	3	None	add
53	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  final  double  c[ij][ii]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  final  double  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    b[j][r];    final  double  c[ij][ii]  -=  e  *  b[j][r];	  	non-compiled	[CE]  ']'  expected	18	None	add
54	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][l];  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][l];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][l];	  	non-compiled	[CE]  cannot  find  symbol  l	18	None	add
55	[BUG]  [BUGGY]      c[ii][ii]  -=  e  *  f;  final  double  c[ii][ii]  -=  e  *  f;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  final  double  c[ii][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ii][ii]    -=    e    *    f;    final  double  c[ii][ii]  -=  e  *  f;	  	non-compiled	[CE]  ']'  expected	16	None	add
56	[BUG]  [BUGGY]      c[ii][ii]  -=  e  *  f;  for(int  ii][ii]  -=  e  *  f;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  for(int  ii][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ii][ii]    -=    e    *    f;    for(int  ii][ii]  -=  e  *  f;	  	non-compiled	[CE]  ';'  expected	16	None	add
57	[BUG]  [BUGGY]  c[ii][ij]  =  f;  final  double  c[ii][ij]  =  f;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  final  double  c[ii][ij]  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    f;    final  double  c[ii][ij]  =  f;	  	non-compiled	[CE]  ']'  expected	1	None	add
58	[BUG]  [BUGGY]      inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        inverse  =  inverse  *  sqrt;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e	  	non-compiled	[CE]  ';'  expected	5	None	add
59	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  final  double  c[ij][ii]  -=  f;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  final  double  c[ij][ii]  -=  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    final  double  c[ij][ii]  -=  f;	  	non-compiled	[CE]  ']'  expected	9	None	add
60	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  for(ij][ii]  -=  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  for(ij][ii]  -=  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    for(ij][ii]  -=  f;	  	non-compiled	[CE]  not  a  statement	9	None	add
61	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  f;  final  double  c[ij][ii]  -=  e  *  f;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  f;  final  double  c[ij][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    f;    final  double  c[ij][ii]  -=  e  *  f;	  	non-compiled	[CE]  ']'  expected	7	None	add
62	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  f;  for(ij][ii]  -=  e  *  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  f;  for(ij][ii]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    f;    for(ij][ii]  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	7	None	add
63	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  final  double  c[ij][ij]  =  inverse;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  inverse;  final  double  c[ij][ij]  =  inverse;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    inverse;    final  double  c[ij][ij]  =  inverse;	  	non-compiled	[CE]  ']'  expected	11	None	add
64	[BUG]  [BUGGY]  c[ij][ij]  =  f;  c[ij][ij].  =  f;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  c[ij][ij].  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    f;    c[ij][ij].  =  f;	  	non-compiled	[CE]  <identifier>  expected	3	None	add
65	[BUG]  [BUGGY]  c[ij][ij]  =  f;  c[ij][ij],  =  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  f;  c[ij][ij],  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    f;    c[ij][ij],  =  f;	  	non-compiled	[CE]  not  a  statement	3	None	add
66	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ii]  =  f;  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ii]  =  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ii]  =  f;	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	15	None	replace
67	[BUG]  [BUGGY]  c[ii][ij]  =  f;  c[ii][ij].  =  f;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  c[ii][ij].  =  f;  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    f;    c[ii][ij].  =  f;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
68	[BUG]  [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    f;    c[ii][ij]  =  f;  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
69	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii],  -=  e  *  b[j][r];  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii],  -=  e  *  b[j][r];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii],  -=  e  *  b[j][r];	  	non-compiled	[CE]  not  a  statement	18	None	add
70	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }	      	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	6	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	      	non-compiled	[CE]  ']'  expected	6	None	replace
72	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  ij  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  if(loop  >  0)  {  for(int  ij  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >  0)  {  for(int  ij  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	        c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	16	3	add
74	[BUG]  [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	16	3	add
75	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  }	  	non-compiled	[CE]  <identifier>  expected	11	None	add
76	[BUG]  [BUGGY]      for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [BUGGY]    }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        for(int  i  =  j  +  1;  i  <  i;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	add
77	[BUG]  [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii],  -=  e  *  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  e  *  f;  c[ij][ii],  -=  e  *  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    e    *    f;    c[ij][ii],  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	7	None	add
78	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][!=  ']'  expected;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][!=  ']'  expected;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][!=  ']'  expected;	      if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii],  -=  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii],  -=  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    c[ij][ii],  -=  f;	  	non-compiled	[CE]  not  a  statement	9	None	add
80	[BUG]  [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii].  -=  f;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]      c[ij][ii]  -=  f;  c[ij][ii].  -=  f;  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	        c[ij][ii]    -=    f;    c[ij][ii].  -=  f;	  	non-compiled	[CE]  <identifier>  expected	9	None	add
81	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  b[j][l];  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]    final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;    [BUGGY]  c[ij][ii]  -=  e  *  b[j][l];  [BUGGY]    c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  b[j][l];	      c[ij][ii]    -=    e    *    b[j][r];    	non-compiled	[CE]  cannot  find  symbol  l	19	None	replace
