bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  c[ii][ii]  -=  e  *  f;  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ii][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ii][ii]  -=  e  *  f;	          c[ii][ii]    -=    e    *    f;    final    double    c[ii][ii]    -=    e    *    f;    	non-compiled	[CE]  ']'  expected	55	None	replace
2	[BUG]  [BUGGY]  c[ii][ij].  =  f;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij].  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij].  =  f;	  c[ii][ij]    =    f;    c[ii][ij].    =    f;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
3	[BUG]  [BUGGY]  final  double  c[ij][ii]  -=  f;  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ij][ii]  -=  f;	          c[ij][ii]    -=    f;    final    double    c[ij][ii]    -=    f;    	non-compiled	[CE]  ']'  expected	59	None	replace
4	[BUG]  [BUGGY]  int[ij][ij]  =  f;  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  int[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	int[ij][ij]  =  f;	  c[ij][ij]    =    f;    int[ij][ij]    =    f;    	non-compiled	[CE]  ']'  expected	29	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	26	3	add
6	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	26	3	add
7	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij],  f;  c[ij][ij]  =  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij],  f;  c[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij],  f;  c[ij][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	26	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	26	3	add
9	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	26	3	add
10	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][	  if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[i];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
11	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][	  if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[i];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ij][ii]        -=        f;        c[ij][ii]    -=    e;    c[ij][ii]  -=  f;  c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	35	2	add
13	[BUG]  [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        f;        c[ij][ii]    -=    e;    c[ij][ii]  -=  f;  c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	35	2	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ij][ii]        -=        f;        c[ij][ii]    -=    e;    c[ij][ii]  -=  e;  c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	35	2	add
15	[BUG]  [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        f;        c[ij][ii]    -=    e;    c[ij][ii]  -=  e;  c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	35	2	add
16	[BUG]  [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii],  -=  f;  c[ij][ii]  -=  e;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii],  -=  f;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        f;        c[ij][ii]    -=    e;    c[ij][ii],  -=  f;  c[ij][ii]  -=  e;	  	non-compiled	[CE]  not  a  statement	35	None	add
17	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  ==  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][	  if(loop    ==    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ij][ii]        -=        e        *        b[j][r];        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];	  	compilable	  [FE]  AssertionError  	1	2	add
19	[BUG]  [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        e        *        b[j][r];        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];	  	compilable	  [FE]  AssertionError  	1	2	add
20	[BUG]  [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r]  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r]  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        e        *        b[j][r];        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r]	  	non-compiled	[CE]  ';'  expected	1	None	add
21	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  f);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  f);  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  -=  e  *  f);	          c[ii][ii]    -=    e    *    f;    c[ii][ii]    -=    e    *    f);    	non-compiled	[CE]  ';'  expected	45	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	  for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  ']'  expected	71	None	replace
23	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;	  for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	71	None	replace
24	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii],  -=  f  *  b[j][r];  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii],  -=  f  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii],  -=  f  *  b[j][r];	          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii],    -=    e    *    b[j][r];    	non-compiled	[CE]  not  a  statement	69	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ij][ii]        -=        f;        c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  f;	  	compilable	  [FE]  AssertionError  	32	2	add
26	[BUG]  [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  c[ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        f;        c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  f;	  	compilable	  [FE]  AssertionError  	32	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  c[ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ij][ii]        -=        f;        c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  f;	  	compilable	  [FE]  AssertionError  	32	2	add
28	[BUG]  [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  c[ij][ii]  -=  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii]  -=  e;  c[ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        f;        c[ij][ii]    -=    f;    c[ij][ii]  -=  e;  c[ij][ii]  -=  f;	  	compilable	  [FE]  AssertionError  	32	2	add
29	[BUG]  [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii],  -=  f;  c[ij][ii]  -=  f;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    f;    c[ij][ii]  -=  f;  c[ij][ii],  -=  f;  c[ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        f;        c[ij][ii]    -=    f;    c[ij][ii],  -=  f;  c[ij][ii]  -=  f;	  	non-compiled	[CE]  not  a  statement	32	None	add
30	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f	  inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    f    	non-compiled	[CE]  ';'  expected	47	None	replace
31	[BUG]  [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f	  inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    f    	non-compiled	[CE]  ';'  expected	47	None	replace
32	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][r];	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii]    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	31	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	10	2	add
34	[BUG]  [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	10	2	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij]  =  e;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	10	2	add
36	[BUG]  [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij]  =  e;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	10	2	add
37	[BUG]  [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij],  f;  c[ii][ij]  =  f;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij],  f;  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij],  f;  c[ii][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	10	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ij][ii]        -=        e        *        f;        c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	7	2	add
39	[BUG]  [BUGGY]          c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        e        *        f;        c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	7	2	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  f  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    f    *    b[j][r];    c[ij][ii]  -=  f  *  b[j][r];	  	compilable	  [FE]  AssertionError  	18	2	add
41	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  f  *  b[j][r];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  f  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    b[j][r];    c[ij][ii]  -=  f  *  b[j][r];	  	compilable	  [FE]  AssertionError  	18	2	add
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    f    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];	  	compilable	  [FE]  AssertionError  	18	2	add
43	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];	  	compilable	  [FE]  AssertionError  	18	2	add
44	[BUG]  [BUGGY]  for(int  ij][ij]  =  inverse;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  ij][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  ij][ij]  =  inverse;	  c[ij][ij]    =    inverse;    for(int    ij][ij]    =    inverse;    	non-compiled	[CE]  ';'  expected	41	None	replace
45	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  ij;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  ij;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]  =  inverse;  for(int  ij][ij]  =  ij;	  c[ij][ij]    =    inverse;    for(int    ij][ij]    =    inverse;    	non-compiled	[CE]  ';'  expected	41	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  e  *  sqrt;	  c[ij][ii]    -=    f    *    sqrt;    	compilable	  [FE]  AssertionError  	51	2	replace
47	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  sqrt;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  sqrt;	  c[ij][ii]    -=    f    *    sqrt;    	compilable	  [FE]  AssertionError  	51	2	replace
48	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  ij;  i  <  swap.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(c!=  null)  {  for(int  i  =  ij;  i  <  swap.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(c!=  null)  {  for(int  i  =  ij;  i  <  swap.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }	          if(switch    ==    null)    {    for(int    i    =    ij;    i    <    c.length;    ++i)    {    System.arraycopy(c[i][i]    +    f,    0,    c[i][ij]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
49	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  ij  =  ij;  i  <  swap.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(c!=  null)  {  for(int  ij  =  ij;  i  <  swap.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(c!=  null)  {  for(int  ij  =  ij;  i  <  swap.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }	          if(switch    ==    null)    {    for(int    i    =    ij;    i    <    c.length;    ++i)    {    System.arraycopy(c[i][i]    +    f,    0,    c[i][ij]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
50	[BUG]  [BUGGY]  c[ij][ij].  =  f;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij].  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij].  =  f;	  c[ij][ij]    =    f;    c[ij][ij].    =    f;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    f    *    e;    c[ij][ii]  -=  f  *  e;	  	compilable	  [FE]  AssertionError  	16	2	add
52	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  f  *  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    e;    c[ij][ii]  -=  f  *  e;	  	compilable	  [FE]  AssertionError  	16	2	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  e  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    f    *    e;    c[ij][ii]  -=  e  *  e;	  	compilable	  [FE]  AssertionError  	16	2	add
54	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  e  *  e;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  e  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    e;    c[ij][ii]  -=  e  *  e;	  	compilable	  [FE]  AssertionError  	16	2	add
55	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  f  *  e);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii]  -=  f  *  e);  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    e;    c[ij][ii]  -=  f  *  e);	  	non-compiled	[CE]  ';'  expected	16	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ii][ii]        -=        e        *        f;        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	43	3	add
57	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	43	3	add
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    e;    c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	14	2	add
59	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    c[ij][ii]  -=  e;	  	compilable	  [FE]  AssertionError  	14	2	add
60	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii]  -=  e);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii]  -=  e);  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    c[ij][ii]  -=  e);	  	non-compiled	[CE]  ';'  expected	14	None	add
61	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  (c[ij][ii]  -=  e;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  (c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    (c[ij][ii]  -=  e;	  	non-compiled	[CE]  ')'  expected	14	None	add
62	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *	  inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
63	[BUG]  [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *	  inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
64	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ii]  =  f;	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	66	3	replace
65	[BUG]  [BUGGY]  c[ii][ii]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  =  f;	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	66	3	replace
66	[BUG]  [BUGGY]  c[ii][ij]  =  e;  int[ii][ij]  =  f;  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  int[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  =  e;  int[ii][ij]  =  f;	  c[ii][ij]    =    f;    int[ii][ij]    =    f;    	non-compiled	[CE]  ']'  expected	13	None	replace
67	[BUG]  [BUGGY]  for(int  ii][ii]  -=  e  *  f;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  ii][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  ii][ii]  -=  e  *  f;	          c[ii][ii]    -=    e    *    f;    for(int    ii][ii]    -=    e    *    f;    	non-compiled	[CE]  ';'  expected	56	None	replace
68	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e	          inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    e    	non-compiled	[CE]  ';'  expected	58	None	replace
69	[BUG]  [BUGGY]  final  double  c[ij][ij]  =  f;  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ij][ij]  =  f;	  c[ij][ij]    =    f;    final    double    c[ij][ij]    =    f;    	non-compiled	[CE]  ']'  expected	52	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  0;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  j  +  1;  i  <  0;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  0;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }	  for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    =    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	70	None	replace
71	[BUG]  [BUGGY]  for(ij][ii]  -=  e  *  f;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(ij][ii]  -=  e  *  f;	          c[ij][ii]    -=    e    *    f;    for(ij][ii]    -=    e    *    f;    	non-compiled	[CE]  not  a  statement	62	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  e  *  e;	  c[ij][ii]    -=    e;    	compilable	  [FE]  AssertionError  	15	2	replace
73	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  e;	  c[ij][ii]    -=    e;    	compilable	  [FE]  AssertionError  	15	2	replace
74	[BUG]  [BUGGY]  final  double  c[ij][ij]  =  inverse;  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ij][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ij][ij]  =  inverse;	  c[ij][ij]    =    inverse;    final    double    c[ij][ij]    =    inverse;    	non-compiled	[CE]  ']'  expected	63	None	replace
75	[BUG]  [BUGGY]  if(loop  ==  1)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  ==  1)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  ==  1)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	  if(loop    ==    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	if(ij  <  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }	  c[ij][ij]    =    inverse;    c[ij][ij]    =    inverse;    	compilable	  [FE]  AssertionError  	40	2	replace
77	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(ij  <  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }	  c[ij][ij]    =    inverse;    c[ij][ij]    =    inverse;    	compilable	  [FE]  AssertionError  	40	2	replace
78	[BUG]  [BUGGY]  final  double  c[ij][ii]  -=  e  *  f;  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ij][ii]  -=  e  *  f;	          c[ij][ii]    -=    e    *    f;    final    double    c[ij][ii]    -=    e    *    f;    	non-compiled	[CE]  ']'  expected	61	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	3	3	add
80	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	3	3	add
81	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  f;  int[ii][ij]  -=  e  *  f;  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  f;  int[ii][ij]  -=  e  *  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    -=    e    *    f;    int[ii][ij]  -=  e  *  f;	  	non-compiled	[CE]  ']'  expected	3	None	add
82	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  f);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  f);  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  f);	          c[ij][ii]    -=    e    *    f;    c[ij][ii]    -=    e    *    f);    	non-compiled	[CE]  ';'  expected	9	None	replace
83	[BUG]  [BUGGY]  for(int  ij][ij]  =  f;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  ij][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  ij][ij]  =  f;	  c[ij][ij]    =    f;    for(int    ij][ij]    =    f;    	non-compiled	[CE]  ';'  expected	28	None	replace
84	[BUG]  [BUGGY]  c[ij][ij]  =  f;  for(int  ij][ij]  =  ij;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  f;  for(int  ij][ij]  =  ij;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]  =  f;  for(int  ij][ij]  =  ij;	  c[ij][ij]    =    f;    for(int    ij][ij]    =    f;    	non-compiled	[CE]  ';'  expected	28	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ii][ii]        -=        e        *        f;        c[ii][ij]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	73	3	add
86	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ij]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	73	3	add
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ii][ii]        -=        e        *        f;        c[ii][ij]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	73	3	add
88	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ij]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	73	3	add
89	[BUG]  [BUGGY]  final  double  c[ii][ij]  =  f;  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ii][ij]  =  f;	  c[ii][ij]    =    f;    final    double    c[ii][ij]    =    f;    	non-compiled	[CE]  ']'  expected	57	None	replace
90	[BUG]  [BUGGY]  for(int  ii][ij]  =  f;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  ii][ij]  =  f;	  c[ii][ij]    =    f;    for(int    ii][ij]    =    f;    	non-compiled	[CE]  ';'  expected	12	None	replace
91	[BUG]  [BUGGY]  c[ii][ij]  =  f;  for(int  ij]  =  ij;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  f;  for(int  ij]  =  ij;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  =  f;  for(int  ij]  =  ij;	  c[ii][ij]    =    f;    for(int    ii][ij]    =    f;    	non-compiled	[CE]  ';'  expected	12	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]        =        inverse;        c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	39	3	add
93	[BUG]  [BUGGY]  c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]        =        inverse;        c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	39	3	add
94	[BUG]  [BUGGY]  c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij],  inverse;  c[ij][ij]  =  inverse;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;  c[ij][ij],  inverse;  c[ij][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]        =        inverse;        c[ij][ij]    =    inverse;    c[ij][ij],  inverse;  c[ij][ij]  =  inverse;	  	non-compiled	[CE]  not  a  statement	39	None	add
95	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	add
96	[BUG]  [BUGGY]  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	add
97	[BUG]  [BUGGY]  c[ii][ij]  =  inverse;  for(int  ii][ij]  =  inverse;  [CE]  ';'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  inverse;  for(int  ii][ij]  =  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    inverse;    for(int  ii][ij]  =  inverse;	  	non-compiled	[CE]  ';'  expected	48	None	add
98	[BUG]  [BUGGY]  final  double  c[ij][ii]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  c[ij][ii]  -=  e  *  b[j][r];	          c[ij][ii]    -=    e    *    b[j][r];    final    double    c[ij][ii]    -=    e    *    b[j][r];    	non-compiled	[CE]  ']'  expected	53	None	replace
99	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;	          for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    f;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	76	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  0;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  j  +  1;  i  <  0;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  0;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }	          for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	76	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  -=  e  *  b[j][r];	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][!=    ']'    expected;    	compilable	  [FE]  AssertionError  	78	3	replace
102	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  b[j][r];  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  -=  e  *  b[j][r];	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][!=    ']'    expected;    	compilable	  [FE]  AssertionError  	78	3	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e  *  c[ii][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  =  e  *  c[ii][r];	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][!=    ']'    expected;    	compilable	  [FE]  AssertionError  	78	3	replace
104	[BUG]  [BUGGY]  c[ii][ij]  =  e  *  c[ii][r];  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e  *  c[ii][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  =  e  *  c[ii][r];	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][!=    ']'    expected;    	compilable	  [FE]  AssertionError  	78	3	replace
105	[BUG]  [BUGGY]  c[ij][ij],  =  f;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij],  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij],  =  f;	  c[ij][ij]    =    f;    c[ij][ij],    =    f;    	non-compiled	[CE]  not  a  statement	65	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ij]    =    e;    c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	37	3	add
107	[BUG]  [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    e;    c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	37	3	add
108	[BUG]  [BUGGY]  c[ij][ij]  =  e;  for(int  ij][ij]  =  e;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  e;  for(int  ij][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    e;    for(int  ij][ij]  =  e;	  	non-compiled	[CE]  ';'  expected	37	None	add
109	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  c[ii][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]    =    e;    c[ii][ij]  =  e;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	add
110	[BUG]  [BUGGY]  c[ii][ij]  =  e;  c[ii][ij]  =  e;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  c[ii][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    e;    c[ii][ij]  =  e;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	add
111	[BUG]  [BUGGY]  c[ii][ij]  =  e;  c[ii][ij]  =  e);  [CE]  ';'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  c[ii][ij]  =  e);  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    e;    c[ii][ij]  =  e);	  	non-compiled	[CE]  ';'  expected	5	None	add
112	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  b[ij][ii];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ii]  -=  e  *  b[ij][ii];	  c[ii][ii]    -=    e    *    b;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	22	3	replace
113	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  b[ij][ii];  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  b[ij][ii];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  -=  e  *  b[ij][ii];	  c[ii][ii]    -=    e    *    b;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	22	3	replace
114	[BUG]  [BUGGY]  c[ij][ii],  -=  e  *  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii],  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii],  -=  e  *  f;	          c[ij][ii]    -=    e    *    f;    c[ij][ii],    -=    e    *    f;    	non-compiled	[CE]  not  a  statement	77	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  c[ij][ii]  -=  f  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    f    *    sqrt;    c[ij][ii]  -=  f  *  sqrt;	  	compilable	  [FE]  AssertionError  	50	2	add
116	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  c[ij][ii]  -=  f  *  sqrt;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  c[ij][ii]  -=  f  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    sqrt;    c[ij][ii]  -=  f  *  sqrt;	  	compilable	  [FE]  AssertionError  	50	2	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  c[ij][ii]  -=  e  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]    -=    f    *    sqrt;    c[ij][ii]  -=  e  *  sqrt;	  	compilable	  [FE]  AssertionError  	50	2	add
118	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  c[ij][ii]  -=  e  *  sqrt;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  c[ij][ii]  -=  e  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    sqrt;    c[ij][ii]  -=  e  *  sqrt;	  	compilable	  [FE]  AssertionError  	50	2	add
119	[BUG]  [BUGGY]  for(ij][ii]  -=  f;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(ij][ii]  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(ij][ii]  -=  f;	          c[ij][ii]    -=    f;    for(ij][ii]    -=    f;    	non-compiled	[CE]  not  a  statement	60	None	replace
120	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  b;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  b;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  -=  e  *  b;	  c[ii][ij]    -=    e    *    f;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	4	None	replace
121	[BUG]  [BUGGY]  if(loop  <  =  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  <  =  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  <  =  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  -=  f  *  e;	          c[ii][ii]    -=    e    *    f;    c[ii][ij]    -=    e    *    f;    	compilable	  [FE]  AssertionError  	74	3	replace
123	[BUG]  [BUGGY]  c[ii][ij]  -=  f  *  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  -=  f  *  e;	          c[ii][ii]    -=    e    *    f;    c[ii][ij]    -=    e    *    f;    	compilable	  [FE]  AssertionError  	74	3	replace
124	[BUG]  [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  ij;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  ij;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(inverse!=  0)  {  c[ij][ij]  =  inverse;  for(int  ij][ij]  =  ij;  }	  c[ij][ij]    =    inverse;    for(int    ij][ij]    =    inverse;    	non-compiled	[CE]  ';'  expected	41	None	replace
125	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ij][ii]  -=  f;  final  double  c[ij][ii]  -=  f;  }  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(ij  <  0)  {  c[ij][ii]  -=  f;  final  double  c[ij][ii]  -=  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(ij  <  0)  {  c[ij][ii]  -=  f;  final  double  c[ij][ii]  -=  f;  }	          c[ij][ii]    -=    f;    final    double    c[ij][ii]    -=    f;    	non-compiled	[CE]  ']'  expected	59	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }	          for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	76	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }	          for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	76	None	replace
128	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  ij  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(c!=  null)  {  for(int  ij  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(c!=  null)  {  for(int  ij  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }	          if(switch    ==    null)    {    for(int    i    =    ij;    i    <    c.length;    ++i)    {    System.arraycopy(c[i][i]    +    f,    0,    c[i][ij]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  if(switch!=  null)  {  for(int  ij  =  index[i];  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(switch!=  null)  {  for(int  ij  =  index[i];  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(switch!=  null)  {  for(int  ij  =  index[i];  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }	          if(switch    ==    null)    {    for(int    i    =    ij;    i    <    c.length;    ++i)    {    System.arraycopy(c[i][i]    +    f,    0,    c[i][ij]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
130	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ii]  =  f;  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ii]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ii]  =  f;	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ii]    =    f;    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	66	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	  for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  ']'  expected	71	None	replace
132	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ir];  c[ii][ij]  =  f;  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ir];  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[i][ir];  c[ii][ij]  =  f;	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][!=    ']'    expected;    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	78	None	replace
133	[BUG]  [BUGGY]  c[ii][ij]  =  e;  for(int  ii][ij]  =  e;  [CE]  ';'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  for(int  ii][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    e;    for(int  ii][ij]  =  e;	  	non-compiled	[CE]  ';'  expected	5	None	add
134	[BUG]  [BUGGY]  c[ii][ij]  =  e;  int  c[ii][ij]  =  e;  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  int  c[ii][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    e;    int  c[ii][ij]  =  e;	  	non-compiled	[CE]  ']'  expected	5	None	add
135	[BUG]  [BUGGY]  c[ij][ii],  -=  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii],  -=  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii],  -=  f;	          c[ij][ii]    -=    f;    c[ij][ii],    -=    f;    	non-compiled	[CE]  not  a  statement	79	None	replace
136	[BUG]  [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][l];  c[ij][ii]  -=  e  *  b[j][r];  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][r];  c[ij][ii]  -=  e  *  b[j][l];  c[ij][ii]  -=  e  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        e        *        b[j][r];        c[ij][ii]    -=    e    *    b[j][r];    c[ij][ii]  -=  e  *  b[j][l];  c[ij][ii]  -=  e  *  b[j][r];	  	non-compiled	[CE]  cannot  find  symbol  l	1	None	add
137	[BUG]  [BUGGY]  c[ii][ij]  =  f;  for(int  ii][ij]  =  ij;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  f;  for(int  ii][ij]  =  ij;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  =  f;  for(int  ii][ij]  =  ij;	  c[ii][ij]    =    f;    for(int    ii][ij]    =    f;    	non-compiled	[CE]  ';'  expected	12	None	replace
138	[BUG]  [BUGGY]  if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
139	[BUG]  [BUGGY]  c[ii][ij]  =  inverse;  c[ii][ij],  inverse;  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  inverse;  c[ii][ij],  inverse;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    inverse;    c[ii][ij],  inverse;	  	non-compiled	[CE]  not  a  statement	48	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  f  *  sqrt  +  1;	  c[ij][ii]    -=    f    *    sqrt;    	compilable	  [FE]  AssertionError  	51	2	replace
141	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  sqrt  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  f  *  sqrt  +  1;	  c[ij][ii]    -=    f    *    sqrt;    	compilable	  [FE]  AssertionError  	51	2	replace
142	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii],  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii],  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ii]    -=    e    *    f;    c[ii][ii],  -=  e  *  f;  c[ii][ii]  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	43	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	                c[ii][ii]        -=        e        *        f;        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	43	3	add
144	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	43	3	add
145	[BUG]  [BUGGY]  if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  ']'  expected	21	None	replace
146	[BUG]  [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e	  inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    	non-compiled	[CE]  ';'  expected	46	None	replace
147	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ii],  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ij]  -=  e  *  f;  c[ii][ii],  -=  e  *  f;  c[ii][ij]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ij]    -=    e    *    f;    c[ii][ii],  -=  e  *  f;  c[ii][ij]  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	73	None	add
148	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  ==  0)  {  for(int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  ==  0)  {  for(int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	  if(loop    ==    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
149	[BUG]  [BUGGY]  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
150	[BUG]  [BUGGY]  if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  >=  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii]    	non-compiled	[CE]  not  a  statement	31	None	replace
151	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  final  double  c[ij][ii]  -=  e;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  final  double  c[ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    final  double  c[ij][ii]  -=  e;	  	non-compiled	[CE]  ']'  expected	14	None	add
152	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  for(ij][ii]  -=  e;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  for(ij][ii]  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    for(ij][ii]  -=  e;	  	non-compiled	[CE]  not  a  statement	14	None	add
153	[BUG]  [BUGGY]  c[ij][ij]  =  e;  final  double  c[ij][ij]  =  e;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  e;  final  double  c[ij][ij]  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    e;    final  double  c[ij][ij]  =  e;	  	non-compiled	[CE]  ']'  expected	37	None	add
154	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  final  double  c[ij][ii]  -=  f  *  sqrt;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  sqrt;  final  double  c[ij][ii]  -=  f  *  sqrt;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    sqrt;    final  double  c[ij][ii]  -=  f  *  sqrt;	  	non-compiled	[CE]  ']'  expected	50	None	add
155	[BUG]  [BUGGY]  inverse  =  inverse  *  f;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  inverse  =  inverse  *  f;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  f;  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  f	  inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    f    	non-compiled	[CE]  ';'  expected	47	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  b[ij][ij];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ij][ii]  -=  e  *  b[ij][ij];	  c[ij][ii]    -=    e    *    b;    	compilable	  [FE]  AssertionError  	23	2	replace
157	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  b[ij][ij];  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  b[ij][ij];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  b[ij][ij];	  c[ij][ii]    -=    e    *    b;    	compilable	  [FE]  AssertionError  	23	2	replace
158	[BUG]  [BUGGY]          c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii],  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;  c[ij][ii],  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ij][ii]        -=        e        *        f;        c[ij][ii]    -=    e    *    f;    c[ij][ii],  -=  e  *  f;  c[ij][ii]  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	7	None	add
159	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  f;  final  double  c[ii][ij]  -=  e  *  f;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  f;  final  double  c[ii][ij]  -=  e  *  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    -=    e    *    f;    final  double  c[ii][ij]  -=  e  *  f;	  	non-compiled	[CE]  ']'  expected	3	None	add
160	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  f;  for(int  ii][ij]  -=  e  *  f;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  f;  for(int  ii][ij]  -=  e  *  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    -=    e    *    f;    for(int  ii][ij]  -=  e  *  f;	  	non-compiled	[CE]  ';'  expected	3	None	add
161	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  b  *  b[j][r];  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  b[j][r];  c[ij][ii]  -=  b  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    b[j][r];    c[ij][ii]  -=  b  *  b[j][r];	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	18	None	add
162	[BUG]  [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  final  double  c[ij][ij]  =  inverse;  }  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  final  double  c[ij][ij]  =  inverse;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(inverse!=  0)  {  c[ij][ij]  =  inverse;  final  double  c[ij][ij]  =  inverse;  }	  c[ij][ij]    =    inverse;    final    double    c[ij][ij]    =    inverse;    	non-compiled	[CE]  ']'  expected	63	None	replace
163	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  final  double  c[ij][ii]  -=  f  *  e;  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  final  double  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    e;    final  double  c[ij][ii]  -=  f  *  e;	  	non-compiled	[CE]  ']'  expected	16	None	add
164	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ij][ii]  -=  f;  for(ij][ii]  -=  f;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(ij  <  0)  {  c[ij][ii]  -=  f;  for(ij][ii]  -=  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(ij  <  0)  {  c[ij][ii]  -=  f;  for(ij][ii]  -=  f;  }	          c[ij][ii]    -=    f;    for(ij][ii]    -=    f;    	non-compiled	[CE]  not  a  statement	60	None	replace
165	[BUG]  [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij].  =  f;  c[ii][ij]  =  f;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij].  =  f;  c[ii][ij]  =  f;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij].  =  f;  c[ii][ij]  =  f;	  	non-compiled	[CE]  <identifier>  expected	10	None	add
166	[BUG]  [BUGGY]  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }	  for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    =    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	70	None	replace
167	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  =  ']'  expected;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  =  ']'  expected;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  =  ']'  expected;	  final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][!=    ']'    expected;    	non-compiled	[CE]  ';'  expected	78	None	replace
168	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  tmp;  [CE]  cannot  find  symbol  tmp  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e  *  tmp;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]  -=  e  *  tmp;	          c[ij][ii]    -=    e    *    f;    c[ij][ii]    -=    e    *    f;    	non-compiled	[CE]  cannot  find  symbol  tmp	8	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  order;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  j  +  1;  i  <  order;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  order;  ++i)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  f;  }	          for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	76	None	replace
170	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  tmp;  [CE]  cannot  find  symbol  tmp  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e  *  tmp;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  -=  e  *  tmp;	          c[ii][ii]    -=    e    *    f;    c[ii][ij]    -=    e    *    f;    	non-compiled	[CE]  cannot  find  symbol  tmp	74	None	replace
171	[BUG]  [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	inverse  =  inverse  *  c[ii][j];  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][j];  b[i][ii]  -=  e  *  e	          inverse    =    inverse    *    sqrt;    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][j];    b[i][ii]    -=    e    *    e    	non-compiled	[CE]  ';'  expected	58	None	replace
172	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ij]  -=  e;	  c[ii][ij]    =    e;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
173	[BUG]  [BUGGY]  c[ii][ij]  -=  e;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  -=  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]  -=  e;	  c[ii][ij]    =    e;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
174	[BUG]  [BUGGY]  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  int  ij  =  index[i];  c[ii][ij]  -=  e  *  b[j][	  if(loop    >    0)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[i];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
175	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii],  -=  e;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii],  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    c[ij][ii],  -=  e;	  	non-compiled	[CE]  not  a  statement	14	None	add
176	[BUG]  [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii].  -=  e;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  e;  c[ij][ii].  -=  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    e;    c[ij][ii].  -=  e;	  	non-compiled	[CE]  <identifier>  expected	14	None	add
177	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ii]  -=  e  *  f  +  1;	          c[ii][ii]    -=    e    *    f;    c[ii][ii]    -=    e    *    f);    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	45	3	replace
178	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  f  +  1;  [FE]  NonPositiveDefiniteMatrixException  [FE]          AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  -=  e  *  f  +  1;	          c[ii][ii]    -=    e    *    f;    c[ii][ii]    -=    e    *    f);    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	45	3	replace
179	[BUG]  [BUGGY]  c[ii][ij]  =  e;  c[ii][ij].  =  e;  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  c[ii][ij].  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    e;    c[ii][ij].  =  e;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
180	[BUG]  [BUGGY]  c[ii][ij]  =  e;  c[ii][ij],  e;  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ij]  =  e;  c[ii][ij],  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ij]    =    e;    c[ii][ij],  e;	  	non-compiled	[CE]  not  a  statement	5	None	add
181	[BUG]  [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii]	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii]    	non-compiled	[CE]  not  a  statement	31	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	for(int  i  =  j  +  1;  i  <  ij;  ++i)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  }	  for(int    i    =    j    +    1;    i    <    i;    ++i)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    =    f;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	70	None	replace
183	[BUG]  [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  b[ii][ij];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	c[ii][ii]  -=  e  *  b[ii][ij];	  c[ii][ii]    -=    e    *    b;    	compilable	  [FE]  AssertionError  	22	2	replace
185	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  b[ii][ij];  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  b[ii][ij];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  -=  e  *  b[ii][ij];	  c[ii][ii]    -=    e    *    b;    	compilable	  [FE]  AssertionError  	22	2	replace
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	add	if(inverse!=  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }	  c[ij][ij]    =    inverse;    c[ij][ij]    =    inverse;    }    	compilable	  [FE]  AssertionError  	75	3	replace
187	[BUG]  [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(inverse!=  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(inverse!=  0)  {  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  }	  c[ij][ij]    =    inverse;    c[ij][ij]    =    inverse;    }    	compilable	  [FE]  AssertionError  	75	3	replace
188	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii],  e  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]          c[ii][ii]    -=    e    *    f;    c[ii][ii]  -=  e  *  f;  c[ii][ii],  e  -=  e  *  f;  c[ii][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	                c[ii][ii]        -=        e        *        f;        c[ii][ii]    -=    e    *    f;    c[ii][ii],  e  -=  e  *  f;  c[ii][ii]  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	43	None	add
189	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii],  -=  f  *  e;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ii]  -=  f  *  e;  c[ij][ii],  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ii]    -=    f    *    e;    c[ij][ii],  -=  f  *  e;	  	non-compiled	[CE]  not  a  statement	16	None	add
190	[BUG]  [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][i	  if(loop    ==    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][i    	non-compiled	[CE]  ']'  expected	20	None	replace
191	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(c!=  null)  {  for(int  i  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(c!=  null)  {  for(int  i  =  ij;  i  <  c.length;  ++i)  {  System.arraycopy(c[i][i]  +  f,  0,  c[i][ij]);  }	          if(switch    ==    null)    {    for(int    i    =    ij;    i    <    c.length;    ++i)    {    System.arraycopy(c[i][i]    +    f,    0,    c[i][ij]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
192	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
193	[BUG]  [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  <  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][	  if(loop    >    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
194	[BUG]  [BUGGY]  if(loop  <  =  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  if(loop  <  =  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	if(loop  <  =  0)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  c[ii][ij]  -=  e  *  b[j][	  if(loop    ==    0)    {    for(int    j    =    ij    +    1;    j    <    i;    ++j)    {    final    int    ij    =    index[j];    c[ii][ij]    -=    e    *    b[j][    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
195	[BUG]  [BUGGY]  c[ij][ij]  =  e;  c[ij][ij].  =  e;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij].  =  e;  [BUGGY]      }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ij][ij]    =    e;    c[ij][ij].  =  e;	  	non-compiled	[CE]  <identifier>  expected	37	None	add
196	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  tmp;  [CE]  cannot  find  symbol  tmp  [FE]    AssertionError    [CONTEXT]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;      [BUGGY]  c[ii][ii]  -=  e  *  tmp;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	133	133	2	replace	c[ii][ii]  -=  e  *  tmp;	          c[ii][ii]    -=    e    *    f;    c[ii][ii]    -=    e    *    f;    	non-compiled	[CE]  cannot  find  symbol  tmp	44	None	replace
