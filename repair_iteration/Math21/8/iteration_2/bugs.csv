bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  j  =  matrix.getColumnDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	int  j  =  matrix.getColumnDimension();	      int    j    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	12	3	replace
2	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  j  =  matrix.getColumnDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getColumnDimension();	      int    j    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	12	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	int  j  =  matrix.getRowDimension()  +  1;	      int    j    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	12	3	replace
4	[BUG]  [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getRowDimension()  +  1;	      int    j    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	12	3	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];	  	compilable	  [FE]  AssertionError  	6	3	add
6	[BUG]  [BUGGY]      b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];	  	compilable	  [FE]  AssertionError  	6	3	add
7	[BUG]  [BUGGY]      b[i]  =  c[swap[i]];  int  b[i]  =  c[swap[i]];  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  c[swap[i]];  int  b[i]  =  c[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    c[swap[i]];    int  b[i]  =  c[swap[i]];	  	non-compiled	[CE]  ']'  expected	6	None	add
8	[BUG]  [BUGGY]  b[i]  =  c.doubleValue()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  c.doubleValue()  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c.doubleValue()  +  1;	      b[i]    =    c.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
9	[BUG]  [BUGGY]  double[][]  b  =  new  double[index[swap[i]];  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  double[][]  b  =  new  double[index[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double[][]  b  =  new  double[index[swap[i]];	      double[][]    b    =    new    double[swap[i]];    	non-compiled	[CE]  ']'  expected	1	None	replace
10	[BUG]  [BUGGY]  b[i]  =  swap[swap[i]];  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  swap[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  swap[swap[i]];	      b[i]    =    c[swap[i]];    	non-compiled	[CE]  incompatible  types	7	None	replace
11	[BUG]  [BUGGY]  int  i  =  swap[swap[i]];  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  i  =  swap[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  swap[swap[i]];	      int    i    =    index[swap[i]];    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
12	[BUG]  [BUGGY]  int  i  =  index[swap[i]]  +  1;  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  i  =  index[swap[i]]  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  index[swap[i]]  +  1;	      int    i    =    index[swap[i]];    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
13	[BUG]  [BUGGY]      int  ij  =  matrix.getRowDimension();  int  ij  =  matrix.getRowDimension();  [CE]  variable  ij  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      int  ij  =  matrix.getRowDimension();  int  ij  =  matrix.getRowDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        int    ij    =    matrix.getRowDimension();    int  ij  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  ij  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	9	None	add
14	[BUG]  [BUGGY]      int  ij  =  matrix.getRowDimension();  Int  ij  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      int  ij  =  matrix.getRowDimension();  Int  ij  =  matrix.getRowDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        int    ij    =    matrix.getRowDimension();    Int  ij  =  matrix.getRowDimension();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
15	[BUG]  [BUGGY]  int[][]  b  =  new  double[swap[i]];  for(int  i  =  0;  i  <  size;  ++i)  {  index[i]  =  b[i];  }  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int[][]  b  =  new  double[swap[i]];  for(int  i  =  0;  i  <  size;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int[][]  b  =  new  double[swap[i]];  for(int  i  =  0;  i  <  size;  ++i)  {  index[i]  =  b[i];  }	      double[][]    b    =    new    double[swap[i]];    for(int    i    =    0;    i    <    size;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	replace
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  swap.length;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]  =  swap.length;	  index[i]    =    swap;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	3	replace
17	[BUG]  [BUGGY]  index[i]  =  swap.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  swap.length;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  swap.length;	  index[i]    =    swap;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	3	replace
18	[BUG]  [BUGGY]      int  j  =  matrix.getRowDimension();  int  j  =  matrix.getRowDimension();  [CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      int  j  =  matrix.getRowDimension();  int  j  =  matrix.getRowDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        int    j    =    matrix.getRowDimension();    int  j  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	add
19	[BUG]  [BUGGY]      int  j  =  matrix.getRowDimension();  Int  j  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      int  j  =  matrix.getRowDimension();  Int  j  =  matrix.getRowDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        int    j    =    matrix.getRowDimension();    Int  j  =  matrix.getRowDimension();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
20	[BUG]  [BUGGY]  index[i]  =  b;  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  b;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  b;	  index[i]    =    c;    	non-compiled	[CE]  incompatible  types	5	None	replace
21	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  b.length;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]  =  b.length;	  index[i]    =    c;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	3	replace
22	[BUG]  [BUGGY]  index[i]  =  b.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  b.length;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  b.length;	  index[i]    =    c;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	3	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  ij  =  matrix.getColumnDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	int  ij  =  matrix.getColumnDimension();	      int    ij    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	10	3	replace
24	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  ij  =  matrix.getColumnDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getColumnDimension();	      int    ij    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	10	3	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	int  ij  =  matrix.getRowDimension()  +  1;	      int    ij    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	10	3	replace
26	[BUG]  [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getRowDimension()  +  1;	      int    ij    =    matrix.getRowDimension();    	compilable	  [FE]  AssertionError  	10	3	replace
27	[BUG]  [BUGGY]  int[][]  b  =  new  double[swap[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int[][]  b  =  new  double[swap[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int[][]  b  =  new  double[swap[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      double[][]    b    =    new    double[swap[i]];    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
28	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension(i);  [CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  j  =  matrix.getColumnDimension(i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getColumnDimension(i);	      int    j    =    matrix.getRowDimension();    	non-compiled	[CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;	12	None	replace
29	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension(i);  [CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  ij  =  matrix.getColumnDimension(i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getColumnDimension(i);	      int    ij    =    matrix.getRowDimension();    	non-compiled	[CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;	10	None	replace
30	[BUG]  [BUGGY]      b[i]  =  c[swap[i]];  double  b[i]  =  c[swap[i]];  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  c[swap[i]];  double  b[i]  =  c[swap[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    c[swap[i]];    double  b[i]  =  c[swap[i]];	  	non-compiled	[CE]  ']'  expected	6	None	add
31	[BUG]  [BUGGY]  double[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  double[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      double[][]    b    =    new    double[swap[i]];    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
32	[BUG]  [BUGGY]  b[i]  =  matrix.doubleValue();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.doubleValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.doubleValue();	      b[i]    =    c.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
33	[BUG]  [BUGGY]  index[i]  =  c.toString();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.toString();  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.toString();	  index[i]    =    c;    	non-compiled	[CE]  incompatible  types	5	None	replace
34	[BUG]  [BUGGY]  double[][]  b  =  new  double[c[i]];  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  double[][]  b  =  new  double[c[i]];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double[][]  b  =  new  double[c[i]];	      double[][]    b    =    new    double[swap[i]];    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
35	[BUG]  [BUGGY]  int  i  =  index[swap[i]]  -  1;  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int  i  =  index[swap[i]]  -  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  index[swap[i]]  -  1;	      int    i    =    index[swap[i]];    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
36	[BUG]  [BUGGY]      b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]].;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]].;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]].;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
37	[BUG]  [BUGGY]  b[i]  =  c[swap[i]]  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  c[swap[i]]  +  1;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c[swap[i]]  +  1;	      b[i]    =    c[swap[i]];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	7	None	replace
