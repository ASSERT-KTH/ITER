bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  b[i]  =  c[swap[i]];  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  b[i]  =  c[swap[i]];	          b[i]    =    c[swap[i]];    int    b[i]    =    c[swap[i]];    	non-compiled	[CE]  ']'  expected	7	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	int  ij  =  matrix.getColumnDimension()  +  1;	  int    ij    =    matrix.getRowDimension()    +    1;    	compilable	  [FE]  AssertionError  	26	3	replace
3	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension()  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getColumnDimension()  +  1;	  int    ij    =    matrix.getRowDimension()    +    1;    	compilable	  [FE]  AssertionError  	26	3	replace
4	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension();  int  j  =  matrix.getColumnDimension();  [CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension();  int  j  =  matrix.getColumnDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    j    =    matrix.getColumnDimension();    int  j  =  matrix.getColumnDimension();	  	non-compiled	[CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	add
5	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension();  Int  j  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension();  Int  j  =  matrix.getColumnDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    j    =    matrix.getColumnDimension();    Int  j  =  matrix.getColumnDimension();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	int  j  =  matrix.getColumnDimension()  +  1;	  int    j    =    matrix.getColumnDimension();    	compilable	  [FE]  AssertionError  	2	3	replace
7	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension()  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getColumnDimension()  +  1;	  int    j    =    matrix.getColumnDimension();    	compilable	  [FE]  AssertionError  	2	3	replace
8	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  final  double[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	final  double[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	  double[][]    b    =    new    double[index[i]];    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	31	None	replace
9	[BUG]  [BUGGY]  int[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int[][]  b  =  new  double[index[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	  double[][]    b    =    new    double[index[i]];    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	31	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length;  index[i]  =  swap.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]    =    swap.length;    index[i]  =  swap.length;	  	compilable	  [FE]  AssertionError  	16	2	add
11	[BUG]  [BUGGY]  index[i]  =  swap.length;  index[i]  =  swap.length;  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length;  index[i]  =  swap.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    swap.length;    index[i]  =  swap.length;	  	compilable	  [FE]  AssertionError  	16	2	add
12	[BUG]  [BUGGY]  index[i]  =  swap.length;  i]  =  swap.length;  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length;  i]  =  swap.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    swap.length;    i]  =  swap.length;	  	non-compiled	[CE]  not  a  statement	16	None	add
13	[BUG]  [BUGGY]  index[i]  =  swap.length;  int  i]  =  swap.length;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length;  int  i]  =  swap.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    swap.length;    int  i]  =  swap.length;	  	non-compiled	[CE]  ';'  expected	16	None	add
14	[BUG]  [BUGGY]  int  i  =  swap[swap[i]]  -  1;  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  i  =  swap[swap[i]]  -  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  swap[swap[i]]  -  1;	  int    i    =    swap[swap[i]];    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  b.length;  index[i]  =  b.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]    =    b.length;    index[i]  =  b.length;	  	compilable	  [FE]  AssertionError  	21	2	add
16	[BUG]  [BUGGY]  index[i]  =  b.length;  index[i]  =  b.length;  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  b.length;  index[i]  =  b.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    b.length;    index[i]  =  b.length;	  	compilable	  [FE]  AssertionError  	21	2	add
17	[BUG]  [BUGGY]  index[i]  =  b.length;  i]  =  b.length;  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  b.length;  i]  =  b.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    b.length;    i]  =  b.length;	  	non-compiled	[CE]  not  a  statement	21	None	add
18	[BUG]  [BUGGY]  index[i]  =  b.length;  b[i]  =  b.length;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  b.length;  b[i]  =  b.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    b.length;    b[i]  =  b.length;	  	non-compiled	[CE]  incompatible  types	21	None	add
19	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension();  int  ij  =  matrix.getColumnDimension();  [CE]  variable  ij  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension();  int  ij  =  matrix.getColumnDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    ij    =    matrix.getColumnDimension();    int  ij  =  matrix.getColumnDimension();	  	non-compiled	[CE]  variable  ij  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None	add
20	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension();  Int  ij  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension();  Int  ij  =  matrix.getColumnDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    ij    =    matrix.getColumnDimension();    Int  ij  =  matrix.getColumnDimension();	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
21	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension(index,  i);  [CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension(index,  i);  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getColumnDimension(index,  i);	  int    ij    =    matrix.getColumnDimension(i);    	non-compiled	[CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;	29	None	replace
22	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension(c,  i);  [CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension(c,  i);  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getColumnDimension(c,  i);	  int    ij    =    matrix.getColumnDimension(i);    	non-compiled	[CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;	29	None	replace
23	[BUG]  [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  int  ij  =  matrix.getRowDimension()  +  1;  [CE]  variable  ij  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  int  ij  =  matrix.getRowDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    ij    =    matrix.getRowDimension()    +    1;    int  ij  =  matrix.getRowDimension()  +  1;	  	non-compiled	[CE]  variable  ij  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	25	None	add
24	[BUG]  [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  Int  ij  =  matrix.getRowDimension()  +  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getRowDimension()  +  1;  Int  ij  =  matrix.getRowDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    ij    =    matrix.getRowDimension()    +    1;    Int  ij  =  matrix.getRowDimension()  +  1;	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
25	[BUG]  [BUGGY]  b[i]  =  swap[c[i]];  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  swap[c[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  swap[c[i]];	  b[i]    =    swap[swap[i]];    	non-compiled	[CE]  incompatible  types	10	None	replace
26	[BUG]  [BUGGY]  int[][]  b  =  new  double[index[swap[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  new  double[index[swap[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int[][]  b  =  new  double[index[swap[i]];  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	  int[][]    b    =    new    double[swap[i]];    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	27	None	replace
27	[BUG]  [BUGGY]  double[][]  b  =  new  double[index[i]];  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  double[][]  b  =  new  double[index[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double[][]  b  =  new  double[index[i]];	  double[][]    b    =    new    double[c[i]];    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	34	None	replace
28	[BUG]  [BUGGY]  int  i  =  swap[swap[i]]  +  1;  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  i  =  swap[swap[i]]  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  swap[swap[i]]  +  1;	  int    i    =    index[swap[i]]    +    1;    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
29	[BUG]  [BUGGY]  double[][]  b  =  new  double[index[swap[i]]  +  1;  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  double[][]  b  =  new  double[index[swap[i]]  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double[][]  b  =  new  double[index[swap[i]]  +  1;	  double[][]    b    =    new    double[index[swap[i]];    	non-compiled	[CE]  ']'  expected	9	None	replace
30	[BUG]  [BUGGY]  index[i]  =  b.toString();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  b.toString();  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  b.toString();	  index[i]    =    c.toString();    	non-compiled	[CE]  incompatible  types	33	None	replace
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  c.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]  =  c.length;	  index[i]    =    b.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	3	replace
32	[BUG]  [BUGGY]  index[i]  =  c.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  c.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.length;	  index[i]    =    b.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	3	replace
33	[BUG]  [BUGGY]  b[i]  =  c[swap[i]].;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  c[swap[i]].;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c[swap[i]].;	          b[i]    =    c[swap[i]];    b[i]    =    c[swap[i]].;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
34	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension(c,  i);  [CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension(c,  i);  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getColumnDimension(c,  i);	  int    j    =    matrix.getColumnDimension(i);    	non-compiled	[CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;	28	None	replace
35	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension(index,  i);  [CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension(index,  i);  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getColumnDimension(index,  i);	  int    j    =    matrix.getColumnDimension(i);    	non-compiled	[CE]  method  getColumnDimension  in  interface  AnyMatrix  cannot  be  applied  to  given  types;	28	None	replace
36	[BUG]  [BUGGY]  double  b[i]  =  c[swap[i]];  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  double  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double  b[i]  =  c[swap[i]];	          b[i]    =    c[swap[i]];    double    b[i]    =    c[swap[i]];    	non-compiled	[CE]  ']'  expected	30	None	replace
37	[BUG]  [BUGGY]  int[][]  b  =  new  double[size][swap[i]];  for(int  i  =  0;  i  <  size;  ++i)  {  index[i]  =  b[i];  }  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  new  double[size][swap[i]];  for(int  i  =  0;  i  <  size;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int[][]  b  =  new  double[size][swap[i]];  for(int  i  =  0;  i  <  size;  ++i)  {  index[i]  =  b[i];  }	  int[][]    b    =    new    double[swap[i]];    for(int    i    =    0;    i    <    size;    ++i)    {    index[i]    =    b[i];    }    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	15	None	replace
38	[BUG]  [BUGGY]  b[i]  =  swap[swap[i]]  +  1;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  swap[swap[i]]  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  swap[swap[i]]  +  1;	  b[i]    =    c[swap[i]]    +    1;    	non-compiled	[CE]  incompatible  types	37	None	replace
39	[BUG]  [BUGGY]  b[i]  =  swap[c[i]]  +  1;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  swap[c[i]]  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  swap[c[i]]  +  1;	  b[i]    =    c[swap[i]]    +    1;    	non-compiled	[CE]  incompatible  types	37	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap[swap[i]];  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]  =  swap[swap[i]];	  index[i]    =    swap.length;    	compilable	  [FE]  AssertionError  	17	3	replace
41	[BUG]  [BUGGY]  index[i]  =  swap[swap[i]];  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap[swap[i]];  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  swap[swap[i]];	  index[i]    =    swap.length;    	compilable	  [FE]  AssertionError  	17	3	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length  -  1;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]  =  swap.length  -  1;	  index[i]    =    swap.length;    	compilable	  [FE]  AssertionError  	17	3	replace
43	[BUG]  [BUGGY]  index[i]  =  swap.length  -  1;  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length  -  1;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  swap.length  -  1;	  index[i]    =    swap.length;    	compilable	  [FE]  AssertionError  	17	3	replace
44	[BUG]  [BUGGY]  int  j  =  matrix.getRowDimension();  Integer  j  =  matrix.getRowDimension();  [CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getRowDimension();  Integer  j  =  matrix.getRowDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getRowDimension();  Integer  j  =  matrix.getRowDimension();	          int    j    =    matrix.getRowDimension();    Int    j    =    matrix.getRowDimension();    	non-compiled	[CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	19	None	replace
45	[BUG]  [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  int  j  =  matrix.getRowDimension()  +  1;  [CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  int  j  =  matrix.getRowDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    j    =    matrix.getRowDimension()    +    1;    int  j  =  matrix.getRowDimension()  +  1;	  	non-compiled	[CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	add
46	[BUG]  [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  Int  j  =  matrix.getRowDimension()  +  1;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getRowDimension()  +  1;  Int  j  =  matrix.getRowDimension()  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int    j    =    matrix.getRowDimension()    +    1;    Int  j  =  matrix.getRowDimension()  +  1;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	                b[i]        =        c[swap[i]];        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];	  	compilable	  [FE]  AssertionError  	5	3	add
48	[BUG]  [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	                b[i]        =        c[swap[i]];        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];	  	compilable	  [FE]  AssertionError  	5	3	add
49	[BUG]  [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[Swap[i]];  b[i]  =  c[swap[i]];  [CE]  cannot  find  symbol  Swap  [FE]      AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[Swap[i]];  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	                b[i]        =        c[swap[i]];        b[i]    =    c[swap[i]];    b[i]  =  c[Swap[i]];  b[i]  =  c[swap[i]];	  	non-compiled	[CE]  cannot  find  symbol  Swap	5	None	add
50	[BUG]  [BUGGY]  int  i  =  swap[index[swap[i]];  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  i  =  swap[index[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  swap[index[swap[i]];	  int    i    =    swap[swap[i]];    	non-compiled	[CE]  ']'  expected	11	None	replace
51	[BUG]  [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  int  b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  int  b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	                b[i]        =        c[swap[i]];        b[i]    =    c[swap[i]];    int  b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]];	  	non-compiled	[CE]  ']'  expected	5	None	add
52	[BUG]  [BUGGY]  int  i  =  index[swap[i]]  -  1  +  1;  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  i  =  index[swap[i]]  -  1  +  1;  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  i  =  index[swap[i]]  -  1  +  1;	  int    i    =    index[swap[i]]    -    1;    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	35	None	replace
53	[BUG]  [BUGGY]  int  j  =  matrix.getColumnDimension();  Int  j  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  matrix.getColumnDimension();  Int  j  =  matrix.getRowDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  j  =  matrix.getColumnDimension();  Int  j  =  matrix.getRowDimension();	          int    j    =    matrix.getRowDimension();    Int    j    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
54	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length  +  1;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	index[i]  =  swap.length  +  1;	  index[i]    =    swap.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	3	replace
55	[BUG]  [BUGGY]  index[i]  =  swap.length  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  swap.length  +  1;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  swap.length  +  1;	  index[i]    =    swap.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	3	replace
56	[BUG]  [BUGGY]  b[i]  =  swap[index[i]];  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  swap[index[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  swap[index[i]];	  b[i]    =    swap[swap[i]];    	non-compiled	[CE]  incompatible  types	10	None	replace
57	[BUG]  [BUGGY]  int  ij  =  matrix.getColumnDimension();  Int  ij  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  ij  =  matrix.getColumnDimension();  Int  ij  =  matrix.getRowDimension();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int  ij  =  matrix.getColumnDimension();  Int  ij  =  matrix.getRowDimension();	          int    ij    =    matrix.getRowDimension();    Int    ij    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
58	[BUG]  [BUGGY]  index[i]  =  b.length;  int  i]  =  b.length;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  index[i]  =  b.length;  int  i]  =  b.length;  [BUGGY]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]    =    b.length;    int  i]  =  b.length;	  	non-compiled	[CE]  ';'  expected	21	None	add
59	[BUG]  [BUGGY]  b[i]  =  root.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  root.doubleValue();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  root.doubleValue();	  b[i]    =    matrix.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
60	[BUG]  [BUGGY]  double[][]  b  =  new  double[c[swap[i]];  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  double[][]  b  =  new  double[c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	double[][]  b  =  new  double[c[swap[i]];	  double[][]    b    =    new    double[index[swap[i]];    	non-compiled	[CE]  ']'  expected	9	None	replace
61	[BUG]  [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]],  b[i]  =  c[swap[i]];  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]],  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	                b[i]        =        c[swap[i]];        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]],  b[i]  =  c[swap[i]];	  	non-compiled	[CE]  ';'  expected	5	None	add
62	[BUG]  [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]].;  b[i]  =  c[swap[i]];  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]          b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]];  b[i]  =  c[swap[i]].;  b[i]  =  c[swap[i]];  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	                b[i]        =        c[swap[i]];        b[i]    =    c[swap[i]];    b[i]  =  c[swap[i]].;  b[i]  =  c[swap[i]];	  	non-compiled	[CE]  <identifier>  expected	5	None	add
63	[BUG]  [BUGGY]  b[i]  =  c[swap[i]].doubleValue();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i]  =  c[swap[i]].doubleValue();  [BUGGY]      index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c[swap[i]].doubleValue();	          b[i]    =    c[swap[i]];    b[i]    =    c[swap[i]].;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
