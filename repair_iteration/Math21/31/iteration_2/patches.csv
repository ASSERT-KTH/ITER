bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[ii][	  if(loop    >    0)    {    for(int    i    =    r    +    1;    i    <    i;    ++i)    {    final    int    j    =    index[i];    final    double    f    =    c[ii][ij]    -    e    *    b[ii][    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
3	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  For(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [CE]  '.class'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  For(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    For(int  j  =  index.length  -  1;  j  <  i;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	7	None	add
4	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    int  j  =  index.length  -  1;  j  <  i;  ++j)  {	  	non-compiled	[CE]  >  expected	7	None	add
5	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e    +    1;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	16	3	add
6	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e    +    1;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	16	3	add
7	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii]  -=  e  *  d;  c[ii][ii]  -=  e  *  d  +  1;  [CE]  cannot  find  symbol  d  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii]  -=  e  *  d;  c[ii][ii]  -=  e  *  d  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e    +    1;    c[ii][ii]  -=  e  *  d;  c[ii][ii]  -=  e  *  d  +  1;	  	non-compiled	[CE]  cannot  find  symbol  d	16	None	add
8	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  double  f  =  c[ii][ij]  -  e  *  c[i][	  final    double    f    =    c[ii][ij]    -    e    *    b[i][    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[ii][r  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[ii][r  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[ii][r	  final    double    f    =    c[ii][ij]    -    e    *    b[ii][i    	non-compiled	[CE]  ']'  expected	23	None	replace
10	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  ==  0)  {  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  ==  0)  {  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][	  if(loop    ==    0)    {    for(int    i    =    r    +    1;    i    <    i;    ++i)    {    final    int    j    =    index[i];    final    double    f    =    c[ii][ij]    -    e    *    b[i][i    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
11	[BUG]  [BUGGY]  int  j  =  i  +  1;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  int  j  =  i  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	int  j  =  i  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  >  expected	43	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  int  j  =  i  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  type  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  int  j  =  i  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  0;  ++j)  {  int  j  =  i  +  1;  j  <  0;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  >=  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  -  1;  j  >=  i;  ++j)  {	  for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	3	replace
14	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  >=  i;  ++j)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  >=  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  -  1;  j  >=  i;  ++j)  {	  for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	3	replace
15	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  -  1;  j  <  0;  ++j)  {	  for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
16	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  0;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  -  1;  j  <  0;  ++j)  {	  for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
17	[BUG]  [BUGGY]  int  c[ii][ii]  -=  e  *  e;  [CE]  ']'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  int  c[ii][ii]  -=  e  *  e;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	int  c[ii][ii]  -=  e  *  e;	          c[ii][ii]    -=    e    *    e;    int    c[ii][ii]    -=    e    *    e;    	non-compiled	[CE]  ']'  expected	37	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  index  +  1;  j  <  =  order;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index  +  1;  j  <  =  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index  +  1;  j  <  =  order;  ++j)  {	  for(int    j    =    index    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
19	[BUG]  [BUGGY]  final  int  j  =  i  +  1;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  int  j  =  i  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  int  j  =  i  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    final    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  >  expected	42	None	replace
20	[BUG]  [BUGGY]  final  int  j  =  index[i];  [CE]  <identifier>  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  int  j  =  index[i];  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  int  j  =  index[i];	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    final    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
21	[BUG]  [BUGGY]  final  int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  int  j  =  index.length  +  1;  j  <  i;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    i;    ++j)    {    final    int    j    =    index.length    +    1;    j    <    i;    ++j)    {    	non-compiled	[CE]  >  expected	39	None	replace
22	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  -  1;  j  <  order;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	49	3	replace
23	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  order;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  -  1;  j  <  order;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	49	3	replace
24	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  =  order;  ++j)  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  =  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  +  1;  j  <  =  order;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  i  +  1;  j  >=  0;  ++j)  {	  for(int    j    =    i    +    1;    j    <    0;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	3	replace
26	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  >=  0;  ++j)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  >=  0;  ++j)  {	  for(int    j    =    i    +    1;    j    <    0;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	3	replace
27	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  ==  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  i  +  1;  j  ==  0;  ++j)  {	  for(int    j    =    i    +    1;    j    <    0;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
28	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  ==  0;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  ==  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  ==  0;  ++j)  {	  for(int    j    =    i    +    1;    j    <    0;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
29	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    0;    ++j)    {    for(int  j  =  i  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
30	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  For(int  j  =  i  +  1;  j  <  0;  ++j)  {  [CE]  '.class'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  For(int  j  =  i  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    0;    ++j)    {    For(int  j  =  i  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	25	None	add
31	[BUG]  [BUGGY]  for(int  j  =  index  +  1;  j  >=  0;  ++j)  {  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index  +  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index  +  1;  j  >=  0;  ++j)  {	  for(int    j    =    index    +    1;    j    <    0;    ++j)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	30	None	replace
32	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  e.doubleValue();  [CE]  <identifier>  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii]  -=  e  *  e.doubleValue();  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii]  -=  e  *  e.doubleValue();	          c[ii][ii]    -=    e    *    e;    c[ii][ii]    -=    e    *    e.doubleValue();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
33	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  sqrt.doubleValue();  [CE]  <identifier>  expected  [FE]              NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii]  -=  e  *  sqrt.doubleValue();  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii]  -=  e  *  sqrt.doubleValue();	          c[ii][ii]    -=    e    *    e;    c[ii][ii]    -=    e    *    e.doubleValue();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
34	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[i][  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  ==  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[i][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  ==  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[i][	  if(loop    >    0)    {    for(int    i    =    index[j];    i    <    i;    ++i)    {    final    int    j    =    index[j];    final    double    f    =    c[ii][ij]    -    e    *    b[i][    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
35	[BUG]  [BUGGY]  For(int  j  =  i  +  1;  j  <  0;  ++j)  {  [CE]  '.class'  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  For(int  j  =  i  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	For(int  j  =  i  +  1;  j  <  0;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    For(int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  '.class'  expected	12	None	replace
36	[BUG]  [BUGGY]  final  int  j  =  r  +  1;  j  <  order;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  int  j  =  r  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  int  j  =  r  +  1;  j  <  order;  ++j)  {	  for(int    j    =    r    +    1;    j    <    order;    ++j)    {    final    int    j    =    r    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  >  expected	50	None	replace
37	[BUG]  [BUGGY]  final  int  j  =  r  +  1;  j  <  order;  [CE]  >  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  int  j  =  r  +  1;  j  <  order;  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  int  j  =  r  +  1;  j  <  order;	  for(int    j    =    r    +    1;    j    <    order;    ++j)    {    final    int    j    =    r    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  >  expected	50	None	replace
38	[BUG]  [BUGGY]  For(int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [CE]  '.class'  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  For(int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	For(int  j  =  index.length  +  1;  j  <  i;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    i;    ++j)    {    For(int    j    =    index.length    +    1;    j    <    i;    ++j)    {    	non-compiled	[CE]  '.class'  expected	32	None	replace
39	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    0;    ++j)    {    for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
40	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  For(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [CE]  '.class'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  For(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    0;    ++j)    {    For(int  j  =  index.length  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	34	None	add
41	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  type  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    0;    ++j)    {    int  j  =  index.length  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
42	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  ==  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  ==  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][	  if(loop    >    0)    {    for(int    i    =    index[j];    i    <    i;    ++i)    {    final    int    j    =    index[j];    final    double    f    =    c[ii][ij]    -    e    *    b[ii][    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
43	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  i  =  index[i];  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  >  0)  {  for(int  i  =  index[i];  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  >  0)  {  for(int  i  =  index[i];  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][	  if(loop    >    0)    {    for(int    i    =    index[i];    i    <    i;    ++i)    {    final    int    j    =    index[j];    final    double    f    =    c[ii][ij]    -    e    *    b[ii][    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
44	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  sqrt  +  1;  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii]  -=  e  *  sqrt  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii]  -=  e  *  sqrt  +  1;	  c[ii][ii]    -=    e    *    sqrt;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
46	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  For(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [CE]  '.class'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  For(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    For(int  j  =  i  +  1;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	9	None	add
47	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    int  j  =  i  +  1;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  >  expected	9	None	add
48	[BUG]  [BUGGY]  if(loop  ==  0)  {  for(int  i  =  index[i];  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][i  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  ==  0)  {  for(int  i  =  index[i];  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][i  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  ==  0)  {  for(int  i  =  index[i];  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][i	  if(loop    >    0)    {    for(int    i    =    index[i];    i    <    i;    ++i)    {    final    int    j    =    index[i];    final    double    f    =    c[ii][ij]    -    e    *    b[i][i    	non-compiled	[CE]  ']'  expected	41	None	replace
49	[BUG]  [BUGGY]  c[ii][ii],  -=  e  *  e;  [CE]  not  a  statement  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii],  -=  e  *  e;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii],  -=  e  *  e;	          c[ii][ii]    -=    e    *    e;    c[ii][ii],    -=    e    *    e;    	non-compiled	[CE]  not  a  statement	38	None	replace
50	[BUG]  [BUGGY]  c[ii][ii],  -=  e  *  sqrt;  [CE]  not  a  statement  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii],  -=  e  *  sqrt;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii],  -=  e  *  sqrt;	          c[ii][ii]    -=    e    *    e;    c[ii][ii],    -=    e    *    e;    	non-compiled	[CE]  not  a  statement	38	None	replace
51	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  =  order;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  =  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  =  order;  ++j)  {	  for(int    j    =    r    +    1;    j    <    =    order;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  int  j  =  r  +  1;  j  <  order;  ++j)  {  [CE]  >  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  int  j  =  r  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	int  j  =  r  +  1;  j  <  order;  ++j)  {	  for(int    j    =    r    +    1;    j    <    order;    ++j)    {    int    j    =    r    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  >  expected	21	None	replace
53	[BUG]  [BUGGY]  for(int  j  =  r  +  1;  j  <  =  order;  ++j)  {  int  j  =  r  +  1;  j  <  =  order;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  r  +  1;  j  <  =  order;  ++j)  {  int  j  =  r  +  1;  j  <  =  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  r  +  1;  j  <  =  order;  ++j)  {  int  j  =  r  +  1;  j  <  =  order;  ++j)  {	  for(int    j    =    r    +    1;    j    <    order;    ++j)    {    int    j    =    r    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
54	[BUG]  [BUGGY]  int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	int  j  =  index.length  +  1;  j  <  i;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    i;    ++j)    {    int    j    =    index.length    +    1;    j    <    i;    ++j)    {    	non-compiled	[CE]  >  expected	40	None	replace
55	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  int  j  =  index[j];  [CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  int  j  =  index[j];  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  int  j  =  index[j];	  for(int    j    =    index.length    +    1;    j    <    i;    ++j)    {    int    j    =    index.length    +    1;    j    <    i;    ++j)    {    	non-compiled	[CE]  variable  j  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	40	None	replace
56	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  size;  ++j)  {  [CE]  cannot  find  symbol  size  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  size;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  size;  ++j)  {	  for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    	non-compiled	[CE]  cannot  find  symbol  size	10	None	replace
57	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  =  r);  ++j)  {  [CE]  illegal  start  of  expression  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  =  r);  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  =  r);  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    for(int    j    =    i    +    1;    j    <    r);    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[i][r	  final    double    f    =    c[ii][ij]    -    e    *    b[i][i    	non-compiled	[CE]  ']'  expected	27	None	replace
59	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	add
60	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	add
61	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  +  1;  j  >=  0;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    0;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	3	replace
62	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  >=  0;  ++j)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  +  1;  j  >=  0;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    0;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	3	replace
63	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    order;    ++j)    {    for(int  j  =  i  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
64	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  For(int  j  =  i  +  1;  j  <  order;  ++j)  {  [CE]  '.class'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  For(int  j  =  i  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    order;    ++j)    {    For(int  j  =  i  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
65	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  int  j  =  i  +  1;  j  <  order;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  int  j  =  i  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    order;    ++j)    {    int  j  =  i  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  >  expected	1	None	add
66	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  sqrt  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ij]  -=  e  *  sqrt  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ij]  -=  e  *  sqrt  +  1;	  c[ii][ij]    -=    e    *    sqrt;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
67	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  e  +  1;  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii]  -=  e  *  e  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii]  -=  e  *  e  +  1;	          c[ii][ii]    -=    e    *    e;    c[ii][ii]    -=    e    *    e    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
69	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  For(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [CE]  '.class'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  For(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    For(int  j  =  index.length  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	48	None	add
70	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    int  j  =  index.length  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  >  expected	48	None	add
71	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  final  int  j  =  i  +  1;  j  <  order;  ++j)  {  [CE]  >  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  final  int  j  =  i  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    order;    ++j)    {    final  int  j  =  i  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  >  expected	1	None	add
72	[BUG]  [BUGGY]  for(int  j  =  r  +  1;  j  <  0;  ++j)  {  int  j  =  r  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  type  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  r  +  1;  j  <  0;  ++j)  {  int  j  =  r  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  r  +  1;  j  <  0;  ++j)  {  int  j  =  r  +  1;  j  <  0;  ++j)  {	  for(int    j    =    r    +    1;    j    <    order;    ++j)    {    int    j    =    r    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
73	[BUG]  [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  int  j  =  ii  +  1;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  int  j  =  ii  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  int  j  =  ii  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  >  expected	43	None	replace
74	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  -  1;  j  >=  0;  ++j)  {	  for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	3	replace
75	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  >=  0;  ++j)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  >=  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  -  1;  j  >=  0;  ++j)  {	  for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	3	replace
76	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  int  j  =  index.length  +  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  int  j  =  index.length  +  1;  j  <  i;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    i;    ++j)    {    int    j    =    index.length    +    1;    j    <    i;    ++j)    {    	non-compiled	[CE]  >  expected	40	None	replace
77	[BUG]  [BUGGY]  if(loop  <  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  <  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  <  0)  {  for(int  i  =  index[j];  i  <  i;  ++i)  {  final  int  j  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[ii][	  if(loop    >    0)    {    for(int    i    =    index[j];    i    <    i;    ++i)    {    final    int    j    =    index[j];    final    double    f    =    c[ii][ij]    -    e    *    b[ii][    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
78	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  final  int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [CE]  >  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length;  ++j)  {  final  int  j  =  i  +  1;  j  <  index.length;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    final  int  j  =  i  +  1;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  >  expected	9	None	add
79	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii],  e  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  c[ii][ii],  e  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e    +    1;    c[ii][ii],  e  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;	  	non-compiled	[CE]  not  a  statement	16	None	add
80	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  int  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e  +  1;  int  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e    +    1;    int  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e  +  1;	  	non-compiled	[CE]  ']'  expected	16	None	add
81	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  final  int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  type  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  0;  ++j)  {  final  int  j  =  index.length  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    0;    ++j)    {    final  int  j  =  index.length  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
82	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  ii  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    for(int    j    =    i    +    1;    j    <    r;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	11	3	replace
83	[BUG]  [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  ii  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    for(int    j    =    i    +    1;    j    <    r;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	11	3	replace
84	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  final  int  j  =  i  +  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  type  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  0;  ++j)  {  final  int  j  =  i  +  1;  j  <  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    i    +    1;    j    <    0;    ++j)    {    final  int  j  =  i  +  1;  j  <  0;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  type	25	None	add
85	[BUG]  [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  final  int  j  =  ii  +  1;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  final  int  j  =  ii  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  ii  +  1;  j  <  r;  ++j)  {  final  int  j  =  ii  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    final    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  >  expected	42	None	replace
86	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  i.length;  ++j)  {  [CE]  int  cannot  be  dereferenced  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  i.length;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  +  1;  j  <  i.length;  ++j)  {	  for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
87	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  int  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [CE]  ']'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  int  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e;    int  c[ii][ii]  -=  e  *  e;  c[ii][ii]  -=  e  *  e;	  	non-compiled	[CE]  ']'  expected	14	None	add
88	[BUG]  [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii],  e  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]          c[ii][ii]    -=    e    *    e;    c[ii][ii]  -=  e  *  e;  c[ii][ii],  e  -=  e  *  e;  c[ii][ii]  -=  e  *  e;  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	                c[ii][ii]        -=        e        *        e;        c[ii][ii]    -=    e    *    e;    c[ii][ii],  e  -=  e  *  e;  c[ii][ii]  -=  e  *  e;	  	non-compiled	[CE]  not  a  statement	14	None	add
89	[BUG]  [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  final  int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  -  1;  j  <  i;  ++j)  {  final  int  j  =  index.length  -  1;  j  <  i;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    -    1;    j    <    i;    ++j)    {    final  int  j  =  index.length  -  1;  j  <  i;  ++j)  {	  	non-compiled	[CE]  >  expected	7	None	add
90	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  final  int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [CE]  >  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  order;  ++j)  {  final  int  j  =  index.length  +  1;  j  <  order;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    final  int  j  =  index.length  +  1;  j  <  order;  ++j)  {	  	non-compiled	[CE]  >  expected	48	None	add
91	[BUG]  [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[i][  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[i][  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  double  f  =  b[ii][ij]  -  e  *  c[i][	  final    double    f    =    c[ii][ij]    -    e    *    b[i][    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  int  j  =  i  +  1;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  order;  ++j)  {  int  j  =  i  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  order;  ++j)  {  int  j  =  i  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  >  expected	43	None	replace
93	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  ii;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  +  1;  j  <  ii;  ++j)  {	  for(int    j    =    index    +    1;    j    <    ii;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	53	3	replace
94	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  ii;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  ii;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  +  1;  j  <  ii;  ++j)  {	  for(int    j    =    index    +    1;    j    <    ii;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	53	3	replace
95	[BUG]  [BUGGY]  if(loop  ==  e)  {  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][i  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  if(loop  ==  e)  {  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][i  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	if(loop  ==  e)  {  for(int  i  =  r  +  1;  i  <  i;  ++i)  {  final  int  j  =  index[i];  final  double  f  =  c[ii][ij]  -  e  *  b[i][i	  if(loop    ==    0)    {    for(int    i    =    r    +    1;    i    <    i;    ++i)    {    final    int    j    =    index[i];    final    double    f    =    c[ii][ij]    -    e    *    b[i][i    	non-compiled	[CE]  ']'  expected	29	None	replace
96	[BUG]  [BUGGY]  c[ii][ii]  -=  e  *  e,  inverse  *  e.doubleValue();  [CE]  ';'  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  c[ii][ii]  -=  e  *  e,  inverse  *  e.doubleValue();  [BUGGY]      for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	c[ii][ii]  -=  e  *  e,  inverse  *  e.doubleValue();	          c[ii][ii]    -=    e    *    e;    c[ii][ii]    -=    e    *    e.doubleValue();    	non-compiled	[CE]  ';'  expected	18	None	replace
97	[BUG]  [BUGGY]  for(int  j  =  index  +  1;  j  <  =  0;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index  +  1;  j  <  =  0;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index  +  1;  j  <  =  0;  ++j)  {	  for(int    j    =    index    +    1;    j    <    0;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
98	[BUG]  [BUGGY]  For(int  j  =  i  +  1;  j  <  r;  ++j)  {  [CE]  '.class'  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  For(int  j  =  i  +  1;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	For(int  j  =  i  +  1;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    For(int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  '.class'  expected	12	None	replace
99	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  0;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    for(int    j    =    i    +    1;    j    <    r);    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
100	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  r;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  0;  j  <  r;  ++j)  {	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    for(int    j    =    i    +    1;    j    <    r);    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
101	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  2;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  index.length  +  1;  j  <  2;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	49	3	replace
102	[BUG]  [BUGGY]  for(int  j  =  index.length  +  1;  j  <  2;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  index.length  +  1;  j  <  2;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  index.length  +  1;  j  <  2;  ++j)  {	  for(int    j    =    index.length    +    1;    j    <    order;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	49	3	replace
103	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length  -  1;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	add	for(int  j  =  i  +  1;  j  <  index.length  -  1;  ++j)  {	  for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	10	3	replace
104	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length  -  1;  ++j)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index.length  -  1;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  index.length  -  1;  ++j)  {	  for(int    j    =    i    +    1;    j    <    index.length;    ++j)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	10	3	replace
105	[BUG]  [BUGGY]  for(int  j  =  i  +  1;  j  <  index;  ++j)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  for(int  j  =  i  +  1;  j  <  index;  ++j)  {  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	for(int  j  =  i  +  1;  j  <  index;  ++j)  {	  for(int    j    =    i    +    1;    j    <    order;    ++j)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	2	None	replace
106	[BUG]  [BUGGY]  final  int  j  =  i  +  1;  j  <  r;  [CE]  >  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]        final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;      [BUGGY]  final  int  j  =  i  +  1;  j  <  r;  [BUGGY]      final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	129	129	2	replace	final  int  j  =  i  +  1;  j  <  r;	  for(int    j    =    i    +    1;    j    <    r;    ++j)    {    final    int    j    =    i    +    1;    j    <    r;    ++j)    {    	non-compiled	[CE]  >  expected	42	None	replace
