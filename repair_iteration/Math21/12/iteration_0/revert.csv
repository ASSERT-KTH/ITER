projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80for(inti=r+1;i<order;++i){intc[i]=c[i];if(c[i]>c[i][i]){swap[r]=i;}
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80for(inti=r+1;i<order;++i){intc[i][i]=c[i];if(c[i]>c[i][i]){swap[r]=i;}
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80for(inti=r+1;i<order;++i){intc[i]=c[i];if(c[i]>c[i][i]){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80for(inti=r+1;i<order;++i){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80for(inti=r+1;i<0;++i){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80for(inti=r+1;i<swap.length;++i){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80intc=matrix[swap[i]];
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80intc=matrix.get(swap);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80intc=matrix.get(swap,r);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80intc=matrix.getC();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80intc=matrix.calculateClone();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java80intc=matrix.getC(r);
