bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i]  =  c[i];  if(c[i]  >  c[i][i])  {  swap[r]  =  i;  }  [CE]  ']'  expected  [FE]    AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i]  =  c[i];  if(c[i]  >  c[i][i])  {  swap[r]  =  i;  }  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i]  =  c[i];  if(c[i]  >  c[i][i])  {  swap[r]  =  i;  }		non-compiled	[CE]  ']'  expected	24	None	add
2	[BUG]  [BUGGY]    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i][i]  =  c[i];  if(c[i]  >  c[i][i])  {  swap[r]  =  i;  }  [CE]  ']'  expected  [FE]      AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i][i]  =  c[i];  if(c[i]  >  c[i][i])  {  swap[r]  =  i;  }  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i][i]  =  c[i];  if(c[i]  >  c[i][i])  {  swap[r]  =  i;  }		non-compiled	[CE]  ']'  expected	24	None	add
3	[BUG]  [BUGGY]    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i]  =  c[i];  if(c[i]  >  c[i][i])  {  [CE]  ']'  expected  [FE]        AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i]  =  c[i];  if(c[i]  >  c[i][i])  {  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    for(int  i  =  r  +  1;  i  <  order;  ++i)  {  int  c[i]  =  c[i];  if(c[i]  >  c[i][i])  {		non-compiled	[CE]  ']'  expected	24	None	add
4	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]  for(int  i  =  r  +  1;  i  <  0;  ++i)  {  [BUGGY]  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	add	for(int  i  =  r  +  1;  i  <  0;  ++i)  {	for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	23	3	replace
5	[BUG]  [BUGGY]  for(int  i  =  r  +  1;  i  <  0;  ++i)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]  for(int  i  =  r  +  1;  i  <  0;  ++i)  {  [BUGGY]  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	for(int  i  =  r  +  1;  i  <  0;  ++i)  {	for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	23	3	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]  for(int  i  =  r  +  1;  i  <  swap.length;  ++i)  {  [BUGGY]  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	add	for(int  i  =  r  +  1;  i  <  swap.length;  ++i)  {	for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	23	2	replace
7	[BUG]  [BUGGY]  for(int  i  =  r  +  1;  i  <  swap.length;  ++i)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]  for(int  i  =  r  +  1;  i  <  swap.length;  ++i)  {  [BUGGY]  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	for(int  i  =  r  +  1;  i  <  swap.length;  ++i)  {	for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	23	2	replace
8	[BUG]  [BUGGY]    int  c  =  matrix[swap[i]];  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    int  c  =  matrix[swap[i]];  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    int  c  =  matrix[swap[i]];		non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	add
9	[BUG]  [BUGGY]    int  c  =  matrix.get(swap);  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    int  c  =  matrix.get(swap);  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    int  c  =  matrix.get(swap);		non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	add
10	[BUG]  [BUGGY]    int  c  =  matrix.get(swap,  r);  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    int  c  =  matrix.get(swap,  r);  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    int  c  =  matrix.get(swap,  r);		non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	add
11	[BUG]  [BUGGY]    int  c  =  matrix.getC();  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    int  c  =  matrix.getC();  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    int  c  =  matrix.getC();		non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	add
12	[BUG]  [BUGGY]    int  c  =  matrix.calculateClone();  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    int  c  =  matrix.calculateClone();  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    int  c  =  matrix.calculateClone();		non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	add
13	[BUG]  [BUGGY]    int  c  =  matrix.getC(r);  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError  [CONTEXT]  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [BUGGY]    int  c  =  matrix.getC(r);  [BUGGY]  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	80	80	2	replace	    int  c  =  matrix.getC(r);		non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	add
