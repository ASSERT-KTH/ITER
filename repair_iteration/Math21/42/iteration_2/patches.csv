bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  size);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  size);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  size);	  b[i][j]    =    Math.max(b[i][j].doubleValue(),    scale);    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);	  	compilable	  [FE]  AssertionError  	5	2	add
3	[BUG]  [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);	  	compilable	  [FE]  AssertionError  	5	2	add
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);	  	compilable	  [FE]  AssertionError  	5	2	add
5	[BUG]  [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);	  	compilable	  [FE]  AssertionError  	5	2	add
6	[BUG]  [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);  [CE]  cannot  find  symbol  Root  [FE]        AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);	  	non-compiled	[CE]  cannot  find  symbol  Root	5	None	add
7	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  c[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  c[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  c[j]);	  root.setEntry(index[i],    index[j],    b[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	40	None	replace
8	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  b[j],  scale);  [CE]  cannot  find  symbol  scale  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  b[j],  scale);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  b[j],  scale);	  root.setEntry(index[i],    index[j],    b[j]);    	non-compiled	[CE]  cannot  find  symbol  scale	40	None	replace
9	[BUG]  [BUGGY]  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    c[i][j]    =    matrix.getEntry(index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	8	None	replace
10	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  b[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    c[i][j]    =    matrix.getEntry(index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	8	None	replace
11	[BUG]  [BUGGY]  root.setEntry(index[i],  index[i],  j  +  1]);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[i],  j  +  1]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[i],  j  +  1]);	  root.setEntry(index[i],    index[i],    j]);    	non-compiled	[CE]  ')'  expected	11	None	replace
12	[BUG]  [BUGGY]  root.setEntry(index[i],  index[i],  j,  r]);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[i],  j,  r]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[i],  j,  r]);	  root.setEntry(index[i],    index[i],    j]);    	non-compiled	[CE]  ')'  expected	11	None	replace
13	[BUG]  [BUGGY]  root.setEntry(b[i],  index[i],  j,  matrix[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(b[i],  index[i],  j,  matrix[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  index[i],  j,  matrix[i][j]);	  root.setEntry(matrix[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	10	None	replace
14	[BUG]  [BUGGY]  root.setEntry(index[i],  matrix[i],  j,  b[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  matrix[i],  j,  b[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  matrix[i],  j,  b[i][j]);	  root.setEntry(matrix[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	10	None	replace
15	[BUG]  [BUGGY]  Root.setEntry(b[i],  j,  index[j]);  [CE]  cannot  find  symbol  Root  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(b[i],  j,  index[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(b[i],  j,  index[j]);	  Root.setEntry(index[i],    j,    b[j]);    	non-compiled	[CE]  cannot  find  symbol  Root	26	None	replace
16	[BUG]  [BUGGY]  Root.setEntry(b[i],  index[j],  j);  [CE]  cannot  find  symbol  Root  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(b[i],  index[j],  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(b[i],  index[j],  j);	  Root.setEntry(index[i],    j,    b[j]);    	non-compiled	[CE]  cannot  find  symbol  Root	26	None	replace
17	[BUG]  [BUGGY]  root.setEntry(index[i],  b[i],  j,  c[i][j],  scale);  [CE]  cannot  find  symbol  scale  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  b[i],  j,  c[i][j],  scale);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[i],  j,  c[i][j],  scale);	  root.setEntry(index[i],    b[i],    j,    b[i][j],    scale);    	non-compiled	[CE]  cannot  find  symbol  scale	28	None	replace
18	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j  +  1);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(loop,  j  +  1);	  int    index[][]    b    =    matrix.getMatrix(loop,    j);    	non-compiled	[CE]  ';'  expected	33	None	replace
19	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j,  r);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j,  r);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(loop,  j,  r);	  int    index[][]    b    =    matrix.getMatrix(loop,    j);    	non-compiled	[CE]  ';'  expected	33	None	replace
20	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  r);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  r);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  r);	  b[i][j]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    }    	compilable	  [FE]  AssertionError  	39	3	replace
22	[BUG]  [BUGGY]  if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    }    	compilable	  [FE]  AssertionError  	39	3	replace
23	[BUG]  [BUGGY]  root.setEntry(b[i],  index[i],  j,  r,  c[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(b[i],  index[i],  j,  r,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  index[i],  j,  r,  c[i][j]);	  root.setEntry(b[i],    index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	9	None	replace
24	[BUG]  [BUGGY]  root.setEntry(c[i],  index[i],  j,  b[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(c[i],  index[i],  j,  b[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(c[i],  index[i],  j,  b[i][j]);	  root.setEntry(b[i],    index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	9	None	replace
25	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    	compilable	  [FE]  IllegalArgumentException  	6	3	replace
26	[BUG]  [BUGGY]  if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	if(j  >  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    	compilable	  [FE]  IllegalArgumentException  	6	3	replace
27	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(c,  j,  i);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(c,  j,  i);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(c,  j,  i);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    c);    	non-compiled	[CE]  ';'  expected	14	None	replace
28	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrix(c,  j,  i);  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int[][]  b  =  matrix.getMatrix(c,  j,  i);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int[][]  b  =  matrix.getMatrix(c,  j,  i);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	14	None	replace
29	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  index  +  1);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  index  +  1);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  index  +  1);	  b[i][j]    =    Math.max(b[i][j].doubleValue(),    index);    	non-compiled	[CE]  double  cannot  be  dereferenced	36	None	replace
30	[BUG]  [BUGGY]  root.setEntry(matrix[i],  b[i],  j,  b[i][j],  index);  [CE]  array  required,  but  RealMatrix  found  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(matrix[i],  b[i],  j,  b[i][j],  index);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(matrix[i],  b[i],  j,  b[i][j],  index);	  root.setEntry(index[i],    b[i],    j,    b[i][j],    matrix);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	29	None	replace
31	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  ii);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  ii);	  b[i][j]    =    Math.max(b[i][j].doubleValue(),    ii);    	non-compiled	[CE]  double  cannot  be  dereferenced	30	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  b[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	b[i][j]    =    Math.max(b[i][j],    rank);    b[i][j]  =  Math.max(b[i][j],  rank);	  	compilable	  [FE]  AssertionError  	37	3	add
33	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  b[i][j]  =  Math.max(b[i][j],  rank);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  b[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]    =    Math.max(b[i][j],    rank);    b[i][j]  =  Math.max(b[i][j],  rank);	  	compilable	  [FE]  AssertionError  	37	3	add
34	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  int[i][j]  =  Math.max(b[i][j],  rank);  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  int[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]    =    Math.max(b[i][j],    rank);    int[i][j]  =  Math.max(b[i][j],  rank);	  	non-compiled	[CE]  ']'  expected	37	None	add
35	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  B[i][j]  =  Math.max(b[i][j],  rank);  [CE]  cannot  find  symbol  B  [FE]        AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  B[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]    =    Math.max(b[i][j],    rank);    B[i][j]  =  Math.max(b[i][j],  rank);	  	non-compiled	[CE]  cannot  find  symbol  B	37	None	add
36	[BUG]  [BUGGY]  Root.setEntry(b[i],  j,  index[i][j]);  [CE]  array  required,  but  int  found  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(b[i],  j,  index[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(b[i],  j,  index[i][j]);	  Root.setEntry(index[i],    j,    b[i][j]);    	non-compiled	[CE]  array  required,  but  int  found	32	None	replace
37	[BUG]  [BUGGY]  Root.setEntry(b[i],  index[i],  j,  b[i][j]);  [CE]  cannot  find  symbol  Root  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(b[i],  index[i],  j,  b[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(b[i],  index[i],  j,  b[i][j]);	  Root.setEntry(index[i],    j,    b[i][j]);    	non-compiled	[CE]  cannot  find  symbol  Root	32	None	replace
38	[BUG]  [BUGGY]  Root.setEntry(index[i],  j,  c[i][j]);  [CE]  cannot  find  symbol  Root  [FE]        AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    Root.setEntry(index[i],    j,    c[i][j]);    	non-compiled	[CE]  cannot  find  symbol  Root	23	None	replace
39	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(j,  r);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(j,  r);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(j,  r);	  int    index[][]    b    =    matrix.getMatrix(r,    j);    	non-compiled	[CE]  ';'  expected	34	None	replace
40	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  ir,  j);  [CE]  cannot  find  symbol  ir  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  ir,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  ir,  j);	  b[i][j]    =    matrix.getMatrix(i,    ii,    j);    	non-compiled	[CE]  cannot  find  symbol  ir	2	None	replace
41	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  isi,  j);  [CE]  cannot  find  symbol  isi  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  isi,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  isi,  j);	  b[i][j]    =    matrix.getMatrix(i,    ii,    j);    	non-compiled	[CE]  cannot  find  symbol  isi	2	None	replace
42	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  index,  c);  [CE]  no  suitable  method  found  for  max(double,int[],double[][])  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  index,  c);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  index,  c);	  b[i][j]    =    Math.max(b[i][j],    index);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,int[],double[][])	25	None	replace
43	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  index,  scale);  [CE]  cannot  find  symbol  scale  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  index,  scale);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  index,  scale);	  b[i][j]    =    Math.max(b[i][j],    index);    	non-compiled	[CE]  cannot  find  symbol  scale	25	None	replace
44	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  j,  c);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  j,  c);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  j,  c);	  b[i][j]    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
45	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  r);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  r);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  j,  r);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    ii);    	non-compiled	[CE]  ';'  expected	31	None	replace
46	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  r,  ii);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  r,  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  j,  r,  ii);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    ii);    	non-compiled	[CE]  ';'  expected	31	None	replace
47	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  isi);  [CE]  cannot  find  symbol  isi  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  isi);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  isi);	  b[i][j]    =    Math.max(b[i][j],    rank);    	non-compiled	[CE]  cannot  find  symbol  isi	38	None	replace
48	[BUG]  [BUGGY]  int  index[i],  j,  c[i][j]);  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    int    index[i],    j,    c[i][j]);    	non-compiled	[CE]  ']'  expected	7	None	replace
49	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  int  index[i],  j,  c[i][j]);  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  int  index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  b[i][j]);  int  index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    int    index[i],    j,    c[i][j]);    	non-compiled	[CE]  ']'  expected	7	None	replace
50	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  j,  ir);  [CE]  cannot  find  symbol  ir  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  j,  ir);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(small,  j,  ir);	  b[i][j]    =    matrix.getMatrix(small,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  ir	43	None	replace
51	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  ij,  ir);  [CE]  cannot  find  symbol  ij  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  ij,  ir);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(small,  ij,  ir);	  b[i][j]    =    matrix.getMatrix(small,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  ij	43	None	replace
52	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(switch,  ii);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(switch,  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(switch,  ii);	  b[i][j]    =    matrix.createMatrix(loop,    ii);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  root.setEntry(index[i],  index[j],  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],    index[j],    j);    root.setEntry(index[i],  index[j],  j);	  	compilable	  [FE]  AssertionError  	16	3	add
54	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  j);  root.setEntry(index[i],  index[j],  j);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  root.setEntry(index[i],  index[j],  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    index[j],    j);    root.setEntry(index[i],  index[j],  j);	  	compilable	  [FE]  AssertionError  	16	3	add
55	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  j);  Root.setEntry(index[i],  index[j],  j);  [CE]  cannot  find  symbol  Root  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  Root.setEntry(index[i],  index[j],  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    index[j],    j);    Root.setEntry(index[i],  index[j],  j);	  	non-compiled	[CE]  cannot  find  symbol  Root	16	None	add
56	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  j);  root.setEntry(index[i],  index[j],  e);  [CE]  cannot  find  symbol  e  [FE]        AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  root.setEntry(index[i],  index[j],  e);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    index[j],    j);    root.setEntry(index[i],  index[j],  e);	  	non-compiled	[CE]  cannot  find  symbol  e	16	None	add
57	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(small,  j);  [CE]  method  createMatrix  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(small,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(small,  j);	  b[i][j]    =    matrix.createMatrix(small,    ii);    	non-compiled	[CE]  method  createMatrix  in  interface  RealMatrix  cannot  be  applied  to  given  types;	35	None	replace
58	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(symbol,  j);  [CE]  cannot  find  symbol  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(symbol,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(symbol,  j);	  b[i][j]    =    matrix.createMatrix(small,    ii);    	non-compiled	[CE]  cannot  find  symbol  symbol	35	None	replace
59	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  ii,  j);  [CE]  cannot  find  symbol  loop  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  ii,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(loop,  ii,  j);	  b[i][j]    =    matrix.getMatrix(loop,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  loop	1	None	replace
60	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(switch,  ii,  ir);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(switch,  ii,  ir);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(switch,  ii,  ir);	  b[i][j]    =    matrix.getMatrix(loop,    ii,    ir);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  b,  j);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  b,  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  b,  j);	  root.setEntry(index[i],    index[j],    j);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	17	None	replace
62	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  r,  j);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  r,  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  r,  j);	  root.setEntry(index[i],    index[j],    j);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	17	None	replace
63	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(ir,  ii,  j);  [CE]  cannot  find  symbol  ir  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(ir,  ii,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(ir,  ii,  j);	  b[i][j]    =    matrix.getMatrix(str,    ii,    j);    	non-compiled	[CE]  cannot  find  symbol  ir	27	None	replace
64	[BUG]  [BUGGY]  root.setEntry(b[i],  index[i],  j,  index[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(b[i],  index[i],  j,  index[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  index[i],  j,  index[j]);	  root.setEntry(index[i],    j,    b[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	15	None	replace
65	[BUG]  [BUGGY]  RealMatrix  matrix  =  matrix.getMatrix(i);  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  RealMatrix  matrix  =  matrix.getMatrix(i);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	RealMatrix  matrix  =  matrix.getMatrix(i);	  root.setEntry(index[i],    j,    c[i][j]);    RealMatrix    matrix    =    matrix.getMatrix(i);    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	replace
66	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  size,  c);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  size,  c);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  size,  c);	  b[i][j]    =    Math.max(b[i][j].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
67	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  i);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  i);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(loop,  i);	  int    index[][]    b    =    matrix.getMatrix(j,    i);    	non-compiled	[CE]  ';'  expected	13	None	replace
68	[BUG]  [BUGGY]  if(loop)  {  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }  [CE]  cannot  find  symbol  loop  [FE]        AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  if(loop)  {  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	if(loop)  {  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	39	None	replace
69	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  j  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  j  +  1);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  j  +  1);	  b[i][j]    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
70	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(r,  ii,  j);  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(r,  ii,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(r,  ii,  j);	  b[i][j]    =    matrix.getMatrix(str,    ii,    j);    	non-compiled	[CE]  cannot  find  symbol  ii	27	None	replace
71	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(str,  i);  [CE]  cannot  find  symbol  str  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(str,  i);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(str,  i);	  b[i][j]    =    matrix.createMatrix(small,    ii);    	non-compiled	[CE]  cannot  find  symbol  str	35	None	replace
72	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  j);  [CE]  cannot  find  symbol  loop  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(loop,  j);	  b[i][j]    =    matrix.getMatrix(ir,    j);    	non-compiled	[CE]  cannot  find  symbol  loop	42	None	replace
73	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  j);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(root,  j);	  int    index[][]    b    =    matrix.getMatrix(r,    j);    	non-compiled	[CE]  ';'  expected	34	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  r);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],  index[j],  r);	  root.setEntry(index[i],    index[j],    j);    	compilable	  [FE]  AssertionError  	17	3	replace
75	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  r);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  r);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  r);	  root.setEntry(index[i],    index[j],    j);    	compilable	  [FE]  AssertionError  	17	3	replace
76	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  i,  j);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  i,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(small,  i,  j);	  b[i][j]    =    matrix.getMatrix(small,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
77	[BUG]  [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [CE]  cannot  find  symbol  Root  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    Root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);	  	non-compiled	[CE]  cannot  find  symbol  Root	5	None	add
78	[BUG]  [BUGGY]  root.setEntry(c[i],  j,  c[i][j]);  int  index[i],  j,  c[i][j]);  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(c[i],  j,  c[i][j]);  int  index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(c[i],  j,  c[i][j]);  int  index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    int    index[i],    j,    c[i][j]);    	non-compiled	[CE]  ']'  expected	7	None	replace
79	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j],  b[i][j]);  int  index[i],  j,  c[i][j]);  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  j,  c[i][j],  b[i][j]);  int  index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  c[i][j],  b[i][j]);  int  index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    int    index[i],    j,    c[i][j]);    	non-compiled	[CE]  ']'  expected	7	None	replace
80	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  scale,  index);  [CE]  cannot  find  symbol  scale  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  scale,  index);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  scale,  index);	  b[i][j]    =    Math.max(b[i][j],    index);    	non-compiled	[CE]  cannot  find  symbol  scale	25	None	replace
81	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(small,  j);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(small,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(small,  j);	  int    index[][]    b    =    matrix.getMatrix(loop,    j);    	non-compiled	[CE]  ';'  expected	33	None	replace
82	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j,  ii);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j,  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(loop,  j,  ii);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    ii);    	non-compiled	[CE]  ';'  expected	31	None	replace
83	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  j);  RealMatrix  matrix  =  matrix.getMatrix(i);  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  RealMatrix  matrix  =  matrix.getMatrix(i);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    index[j],    j);    RealMatrix  matrix  =  matrix.getMatrix(i);	  	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	16	None	add
84	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  b[j],  c);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  j,  b[j],  c);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  b[j],  c);	  root.setEntry(index[i],    j,    b[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	15	None	replace
85	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(root,  ii,  ir);  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(root,  ii,  ir);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(root,  ii,  ir);	  b[i][j]    =    matrix.getMatrix(loop,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  ii	1	None	replace
86	[BUG]  [BUGGY]  root.setEntry(index[i],  b[j],  index[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  b[j],  index[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[j],  index[j]);	  root.setEntry(index[i],    index[j],    b[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	40	None	replace
87	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  b[j],  c[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  b[j],  c[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  b[j],  c[j]);	  root.setEntry(index[i],    index[j],    b[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	40	None	replace
88	[BUG]  [BUGGY]  root.setEntry(index[i],  b[i],  j,  matrix[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  b[i],  j,  matrix[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[i],  j,  matrix[i][j]);	  root.setEntry(matrix[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	10	None	replace
89	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(root,  ii);  [CE]  cannot  find  symbol  ii  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(root,  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(root,  ii);	  b[i][j]    =    matrix.createMatrix(loop,    ii);    	non-compiled	[CE]  cannot  find  symbol  ii	3	None	replace
90	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j],  b[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  j,  c[i][j],  b[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  c[i][j],  b[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    c[i][j]    =    matrix.getEntry(index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	8	None	replace
91	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  i,  j);  [CE]  cannot  find  symbol  loop  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  i,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(loop,  i,  j);	  b[i][j]    =    matrix.getMatrix(i,    ii,    j);    	non-compiled	[CE]  cannot  find  symbol  loop	2	None	replace
92	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  b[i],  c[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  j,  b[i],  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  b[i],  c[i][j]);	  root.setEntry(b[i],    index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	9	None	replace
93	[BUG]  [BUGGY]  root.setEntry(matrix[i],  index[i],  j,  c[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(matrix[i],  index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(matrix[i],  index[i],  j,  c[i][j]);	  root.setEntry(b[i],    index[i],    j,    c[i][j]);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	9	None	replace
94	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  int  b[i][j]  =  Math.max(b[i][j],  rank);  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  int  b[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]    =    Math.max(b[i][j],    rank);    int  b[i][j]  =  Math.max(b[i][j],  rank);	  	non-compiled	[CE]  ']'  expected	37	None	add
95	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  ii);  [CE]  cannot  find  symbol  ii  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  ii);	  b[i][j]    =    Math.max(b[i][j],    rank);    	non-compiled	[CE]  cannot  find  symbol  ii	38	None	replace
96	[BUG]  [BUGGY]  root.setEntry(index[i],  b[i],  index[i],  j,  matrix[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  b[i],  index[i],  j,  matrix[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[i],  index[i],  j,  matrix[i][j]);	  root.setEntry(matrix[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	10	None	replace
97	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  ii,  j);  [CE]  cannot  find  symbol  ii  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  ii,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(small,  ii,  j);	  b[i][j]    =    matrix.getMatrix(small,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  ii	43	None	replace
98	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  b[i][j]  =  Math.max(b[i][j],  ranking);  [CE]  cannot  find  symbol  ranking  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  b[i][j]  =  Math.max(b[i][j],  ranking);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]    =    Math.max(b[i][j],    rank);    b[i][j]  =  Math.max(b[i][j],  ranking);	  	non-compiled	[CE]  cannot  find  symbol  ranking	37	None	add
99	[BUG]  [BUGGY]  Root.setEntry(matrix[i],  j,  c[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]          AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(matrix[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(matrix[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    RealMatrix    matrix    =    matrix.getMatrix(i);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	24	None	replace
100	[BUG]  [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  if(loop)  {  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }  [CE]  cannot  find  symbol  loop  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  if(loop)  {  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],        j,        c[i][j]);        root.setEntry(index[i],    j,    c[i][j]);    if(loop)  {  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }	  	non-compiled	[CE]  cannot  find  symbol  loop	5	None	add
101	[BUG]  [BUGGY]  root.setEntry(b[i],  c[i],  index[i],  j,  b[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(b[i],  c[i],  index[i],  j,  b[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  c[i],  index[i],  j,  b[i][j]);	  root.setEntry(b[i],    index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	9	None	replace
102	[BUG]  [BUGGY]  root.setEntry(index[i],  b[i],  j,  c[i][j],  small);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  b[i],  j,  c[i][j],  small);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[i],  j,  c[i][j],  small);	  root.setEntry(b[i],    index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	9	None	replace
103	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(stack,  ii);  [CE]  cannot  find  symbol  stack  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(stack,  ii);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(stack,  ii);	  b[i][j]    =    matrix.createMatrix(symbol,    ii);    	non-compiled	[CE]  cannot  find  symbol  stack	4	None	replace
104	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(small,  ir);  [CE]  cannot  find  symbol  ir  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.createMatrix(small,  ir);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(small,  ir);	  b[i][j]    =    matrix.createMatrix(small,    ii);    	non-compiled	[CE]  cannot  find  symbol  ir	35	None	replace
105	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  ir);  [CE]  cannot  find  symbol  ir  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  ir);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  ir);	  root.setEntry(index[i],    index[j],    j);    	non-compiled	[CE]  cannot  find  symbol  ir	17	None	replace
106	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  ir,  j);  [CE]  cannot  find  symbol  ir  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  ir,  j);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  ir,  j);	  root.setEntry(index[i],    index[j],    j);    	non-compiled	[CE]  cannot  find  symbol  ir	17	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  if(root!=  null)  {  root.setEntry(index[i],  index[j],  j);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],    index[j],    j);    if(root!=  null)  {  root.setEntry(index[i],  index[j],  j);  }	  	compilable	  [FE]  AssertionError  	16	3	add
108	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  j);  if(root!=  null)  {  root.setEntry(index[i],  index[j],  j);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[j],  j);  if(root!=  null)  {  root.setEntry(index[i],  index[j],  j);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    index[j],    j);    if(root!=  null)  {  root.setEntry(index[i],  index[j],  j);  }	  	compilable	  [FE]  AssertionError  	16	3	add
109	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  rank);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  rank);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  rank);	  b[i][j]    =    Math.max(b[i][j].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
110	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  size,  index);  [CE]  cannot  find  symbol  size  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j],  size,  index);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  size,  index);	  b[i][j]    =    Math.max(b[i][j],    index);    	non-compiled	[CE]  cannot  find  symbol  size	25	None	replace
111	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  index);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  index);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale,  index);	  b[i][j]    =    Math.max(b[i][j].doubleValue(),    index);    	non-compiled	[CE]  double  cannot  be  dereferenced	36	None	replace
112	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(r,  j);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(r,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(r,  j);	  b[i][j]    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
113	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  ii,  j);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  ii,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(root,  ii,  j);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    ii);    	non-compiled	[CE]  ';'  expected	31	None	replace
114	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(c,  i);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(c,  i);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(c,  i);	  b[i][j]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
115	[BUG]  [BUGGY]  setEntry(index[i],  j,  c[i][j]);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  setEntry(index[i],  j,  c[i][j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	setEntry(index[i],  j,  c[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
116	[BUG]  [BUGGY]  if(c[i][j]!=  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  System.arraycopy(c[i],  0,  c[i][j]);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  if(c[i][j]!=  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  System.arraycopy(c[i],  0,  c[i][j]);  }  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	if(c[i][j]!=  0)  {  root.setEntry(index[i],  j,  c[i][j]);  }  else  {  System.arraycopy(c[i],  0,  c[i][j]);  }	  root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],    j,    c[i][j]);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	6	None	replace
117	[BUG]  [BUGGY]  root.setEntry(index[i],  index[i],  j,  c]);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(index[i],  index[i],  j,  c]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[i],  j,  c]);	  root.setEntry(index[i],    index[i],    j]);    	non-compiled	[CE]  ')'  expected	11	None	replace
118	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  j);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  j);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(small,  j);	  b[i][j]    =    matrix.getMatrix(ii,    j);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
119	[BUG]  [BUGGY]  root.setEntry(b[i],  index[j],  j,  b[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  root.setEntry(b[i],  index[j],  j,  b[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  index[j],  j,  b[j]);	  root.setEntry(index[i],    j,    b[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	15	None	replace
120	[BUG]  [BUGGY]  Root.setEntry(b[i],  index[j],  j,  b[j]);  [CE]  cannot  find  symbol  Root  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  Root.setEntry(b[i],  index[j],  j,  b[j]);  [BUGGY]      }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(b[i],  index[j],  j,  b[j]);	  Root.setEntry(index[i],    j,    b[j]);    	non-compiled	[CE]  cannot  find  symbol  Root	26	None	replace
121	[BUG]  [BUGGY]  int  c[][]  b  =  matrix.getMatrix(i,  j,  c);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {      [BUGGY]  int  c[][]  b  =  matrix.getMatrix(i,  j,  c);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  c[][]  b  =  matrix.getMatrix(i,  j,  c);	  int    index[][]    b    =    matrix.getMatrix(i,    j,    c);    	non-compiled	[CE]  ';'  expected	14	None	replace
