bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    b[i][j]  =  Math.max(b[i][j].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    b[i][j]  =  Math.max(b[i][j].doubleValue());  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    b[i][j]  =  Math.max(b[i][j].doubleValue());		non-compiled	[CE]  double  cannot  be  dereferenced	84	None	add
2	[BUG]  [BUGGY]    b[i][j]  =  matrix.getMatrix(i);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    b[i][j]  =  matrix.getMatrix(i);  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    b[i][j]  =  matrix.getMatrix(i);		non-compiled	[CE]  cannot  find  symbol	84	None	add
3	[BUG]  [BUGGY]    b[i][j]  =  Math.max(b[i][j],  size);  [CE]  cannot  find  symbol  size  [FE]        AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    b[i][j]  =  Math.max(b[i][j],  size);  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    b[i][j]  =  Math.max(b[i][j],  size);		non-compiled	[CE]  cannot  find  symbol  size	84	None	add
4	[BUG]  [BUGGY]  root.setEntry(b[i],  j,  index[i][j]);  [CE]  array  required,  but  int  found  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]  root.setEntry(b[i],  j,  index[i][j]);  [BUGGY]  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  j,  index[i][j]);	root.setEntry(index[i],  j,  b[i][j]);  	non-compiled	[CE]  array  required,  but  int  found	83	None	replace
5	[BUG]  [BUGGY]  root.setEntry(b[i],  index[i],  j,  b[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]  root.setEntry(b[i],  index[i],  j,  b[i][j]);  [BUGGY]  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  index[i],  j,  b[i][j]);	root.setEntry(index[i],  j,  b[i][j]);  	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	83	None	replace
6	[BUG]  [BUGGY]    b[i][j]  =  matrix.getMatrix();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    b[i][j]  =  matrix.getMatrix();  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    b[i][j]  =  matrix.getMatrix();		non-compiled	[CE]  cannot  find  symbol	84	None	add
7	[BUG]  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i,  j);  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i,  j);  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    int  index[][]  b  =  matrix.getMatrix(i,  j);		non-compiled	[CE]  ';'  expected	84	None	add
8	[BUG]  [BUGGY]  root.setEntry(b[i],  j,  index[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]  root.setEntry(b[i],  j,  index[j]);  [BUGGY]  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  j,  index[j]);	root.setEntry(index[i],  j,  b[i][j]);  	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	83	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],  j,  c[i][j]);	root.setEntry(index[i],  j,  b[i][j]);  	compilable	  [FE]  AssertionError  	83	3	replace
10	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  c[i][j]);	root.setEntry(index[i],  j,  b[i][j]);  	compilable	  [FE]  AssertionError  	83	3	replace
11	[BUG]  [BUGGY]    b[i][j]  =  matrix.createMatrix(str,  ii);  [CE]  cannot  find  symbol  str  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    b[i][j]  =  matrix.createMatrix(str,  ii);  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    b[i][j]  =  matrix.createMatrix(str,  ii);		non-compiled	[CE]  cannot  find  symbol  str	84	None	add
12	[BUG]  [BUGGY]    b[i][j]  =  matrix.getMatrix(str,  ii,  ir);  [CE]  cannot  find  symbol  str  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]    b[i][j]  =  matrix.getMatrix(str,  ii,  ir);  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	    b[i][j]  =  matrix.getMatrix(str,  ii,  ir);		non-compiled	[CE]  cannot  find  symbol  str	84	None	add
