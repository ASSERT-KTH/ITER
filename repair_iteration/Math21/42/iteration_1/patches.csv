bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  ii,  ir);  [CE]  cannot  find  symbol  loop  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(loop,  ii,  ir);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(loop,  ii,  ir);	      b[i][j]    =    matrix.getMatrix(str,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  loop	12	None	replace
2	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  ii,  j);  [CE]  cannot  find  symbol  ii  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  ii,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  ii,  j);	      b[i][j]    =    matrix.getMatrix(str,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  ii	12	None	replace
3	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(loop,  ii);  [CE]  cannot  find  symbol  loop  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.createMatrix(loop,  ii);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(loop,  ii);	      b[i][j]    =    matrix.createMatrix(str,    ii);    	non-compiled	[CE]  cannot  find  symbol  loop	11	None	replace
4	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(symbol,  ii);  [CE]  cannot  find  symbol  symbol  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.createMatrix(symbol,  ii);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(symbol,  ii);	      b[i][j]    =    matrix.createMatrix(str,    ii);    	non-compiled	[CE]  cannot  find  symbol  symbol	11	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);	  	compilable	  [FE]  AssertionError  	9	2	add
6	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);	  	compilable	  [FE]  AssertionError  	9	2	add
7	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  int  index[i],  j,  c[i][j]);  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  int  index[i],  j,  c[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    j,    c[i][j]);    int  index[i],  j,  c[i][j]);	  	non-compiled	[CE]  ']'  expected	9	None	add
8	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    j,    c[i][j]);    c[i][j]  =  matrix.getEntry(index[i],  j,  c[i][j]);	  	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	9	None	add
9	[BUG]  [BUGGY]  root.setEntry(b[i],  index[i],  j,  c[i][j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(b[i],  index[i],  j,  c[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(b[i],  index[i],  j,  c[i][j]);	  root.setEntry(b[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	5	None	replace
10	[BUG]  [BUGGY]  root.setEntry(matrix[i],  index[i],  j,  b[i][j]);  [CE]  array  required,  but  RealMatrix  found  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(matrix[i],  index[i],  j,  b[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(matrix[i],  index[i],  j,  b[i][j]);	  root.setEntry(b[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  array  required,  but  RealMatrix  found	5	None	replace
11	[BUG]  [BUGGY]  root.setEntry(index[i],  index[i],  j]);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  index[i],  j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[i],  j]);	  root.setEntry(b[i],    j,    index[i][j]);    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  scale);  [CE]  cannot  find  symbol  scale  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j],  scale);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  scale);	      b[i][j]    =    Math.max(b[i][j],    size);    	non-compiled	[CE]  cannot  find  symbol  scale	3	None	replace
13	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(j,  i);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  int  index[][]  b  =  matrix.getMatrix(j,  i);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(j,  i);	      int    index[][]    b    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  ';'  expected	7	None	replace
14	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  c);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  c);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  j,  c);	      int    index[][]    b    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  ';'  expected	7	None	replace
15	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  b[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  b[j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  j,  b[j]);	  root.setEntry(b[i],    j,    index[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	8	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  index[j],  j);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	root.setEntry(index[i],  index[j],  j);	  root.setEntry(b[i],    j,    index[j]);    	compilable	  [FE]  AssertionError  	8	3	replace
17	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  j);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  index[j],  j);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  j);	  root.setEntry(b[i],    j,    index[j]);    	compilable	  [FE]  AssertionError  	8	3	replace
18	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  c);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  c);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  c);	      b[i][j]    =    matrix.getMatrix(i);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
19	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  scale);	      b[i][j]    =    Math.max(b[i][j].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
20	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  size);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  size);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  size);	      b[i][j]    =    Math.max(b[i][j].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
21	[BUG]  [BUGGY]  root.setEntry(c[i],  j,  index[i][j]);  [CE]  array  required,  but  int  found  [FE]    AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(c[i],  j,  index[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(c[i],  j,  index[i][j]);	  root.setEntry(index[i],    j,    c[i][j]);    	non-compiled	[CE]  array  required,  but  int  found	10	None	replace
22	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  j);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(i,  j);	      b[i][j]    =    matrix.getMatrix(i);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
23	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);  [CE]  cannot  find  symbol  Root  [FE]    AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  Root.setEntry(index[i],  j,  c[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    j,    c[i][j]);    Root.setEntry(index[i],  j,  c[i][j]);	  	non-compiled	[CE]  cannot  find  symbol  Root	9	None	add
24	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  RealMatrix  matrix  =  matrix.getMatrix(i);  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  RealMatrix  matrix  =  matrix.getMatrix(i);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    j,    c[i][j]);    RealMatrix  matrix  =  matrix.getMatrix(i);	  	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	9	None	add
25	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  index);  [CE]  no  suitable  method  found  for  max(double,int[])  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j],  index);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  index);	      b[i][j]    =    Math.max(b[i][j],    size);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,int[])	3	None	replace
26	[BUG]  [BUGGY]  Root.setEntry(index[i],  j,  b[j]);  [CE]  cannot  find  symbol  Root  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  Root.setEntry(index[i],  j,  b[j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(index[i],  j,  b[j]);	  root.setEntry(b[i],    j,    index[j]);    	non-compiled	[CE]  cannot  find  symbol  Root	8	None	replace
27	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(str,  ii,  j);  [CE]  cannot  find  symbol  str  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(str,  ii,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(str,  ii,  j);	      b[i][j]    =    matrix.getMatrix(str,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  str	12	None	replace
28	[BUG]  [BUGGY]  root.setEntry(index[i],  b[i],  j,  b[i][j],  scale);  [CE]  cannot  find  symbol  scale  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  b[i],  j,  b[i][j],  scale);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[i],  j,  b[i][j],  scale);	  root.setEntry(b[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  cannot  find  symbol  scale	5	None	replace
29	[BUG]  [BUGGY]  root.setEntry(index[i],  b[i],  j,  b[i][j],  matrix);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  b[i],  j,  b[i][j],  matrix);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  b[i],  j,  b[i][j],  matrix);	  root.setEntry(b[i],    index[i],    j,    b[i][j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	5	None	replace
30	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  ii);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  ii);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  ii);	      b[i][j]    =    Math.max(b[i][j].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
31	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  ii);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  j,  ii);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  j,  ii);	      int    index[][]    b    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  ';'  expected	7	None	replace
32	[BUG]  [BUGGY]  Root.setEntry(index[i],  j,  b[i][j]);  [CE]  cannot  find  symbol  Root  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  Root.setEntry(index[i],  j,  b[i][j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	Root.setEntry(index[i],  j,  b[i][j]);	  root.setEntry(b[i],    j,    index[i][j]);    	non-compiled	[CE]  cannot  find  symbol  Root	4	None	replace
33	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  int  index[][]  b  =  matrix.getMatrix(loop,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(loop,  j);	      int    index[][]    b    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  ';'  expected	7	None	replace
34	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(r,  j);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  int  index[][]  b  =  matrix.getMatrix(r,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	int  index[][]  b  =  matrix.getMatrix(r,  j);	      int    index[][]    b    =    matrix.getMatrix(i,    j);    	non-compiled	[CE]  ';'  expected	7	None	replace
35	[BUG]  [BUGGY]  b[i][j]  =  matrix.createMatrix(small,  ii);  [CE]  cannot  find  symbol  ii  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.createMatrix(small,  ii);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.createMatrix(small,  ii);	      b[i][j]    =    matrix.createMatrix(str,    ii);    	non-compiled	[CE]  cannot  find  symbol  ii	11	None	replace
36	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  index);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j].doubleValue(),  index);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j].doubleValue(),  index);	      b[i][j]    =    Math.max(b[i][j].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	add	b[i][j]  =  Math.max(b[i][j],  rank);	      b[i][j]    =    Math.max(b[i][j],    size);    	compilable	  [FE]  AssertionError  	3	3	replace
38	[BUG]  [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  Math.max(b[i][j],  rank);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  Math.max(b[i][j],  rank);	      b[i][j]    =    Math.max(b[i][j],    size);    	compilable	  [FE]  AssertionError  	3	3	replace
39	[BUG]  [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  j,  c[i][j]);  root.setEntry(index[i],  j,  c[i][j]);  }  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],    j,    c[i][j]);    root.setEntry(index[i],  j,  c[i][j]);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
40	[BUG]  [BUGGY]  root.setEntry(index[i],  index[j],  b[j]);  [CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  root.setEntry(index[i],  index[j],  b[j]);  [BUGGY]    }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	root.setEntry(index[i],  index[j],  b[j]);	  root.setEntry(b[i],    j,    index[j]);    	non-compiled	[CE]  method  setEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	8	None	replace
41	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(ii,  j);  [CE]  cannot  find  symbol  ii  [FE]        AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(ii,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(ii,  j);	      b[i][j]    =    matrix.getMatrix();    	non-compiled	[CE]  cannot  find  symbol  ii	6	None	replace
42	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(ir,  j);  [CE]  cannot  find  symbol  ir  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(ir,  j);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(ir,  j);	      b[i][j]    =    matrix.getMatrix(i);    	non-compiled	[CE]  cannot  find  symbol  ir	2	None	replace
43	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  ii,  ir);  [CE]  cannot  find  symbol  ii  [FE]          AssertionError    [CONTEXT]      loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {    [BUGGY]  b[i][j]  =  matrix.getMatrix(small,  ii,  ir);  [BUGGY]    root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	147	147	2	replace	b[i][j]  =  matrix.getMatrix(small,  ii,  ir);	      b[i][j]    =    matrix.getMatrix(str,    ii,    ir);    	non-compiled	[CE]  cannot  find  symbol  ii	12	None	replace
