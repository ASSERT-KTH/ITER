bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  if  (c[ii][ii]  <  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  if  (c[ii][ii]  <  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][ii]    <    c[isi][isi])    {    if  (c[ii][ii]  <  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
2	[BUG]  [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  if  (c[ii][ii]  <  c[swap[i][isi])  {  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  if  (c[ii][ii]  <  c[swap[i][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][ii]    <    c[isi][isi])    {    if  (c[ii][ii]  <  c[swap[i][isi])  {	  	non-compiled	[CE]  ']'  expected	5	None	add
3	[BUG]  [BUGGY]  int  c[i]  =  index[swap[i]];  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  int  c[i]  =  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[i]  =  index[swap[i]];	      int    c[ii]    =    index[swap[i]];    	non-compiled	[CE]  ']'  expected	10	None	replace
4	[BUG]  [BUGGY]  c[ii][ii]  =  root[swap[i]];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  =  root[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  root[swap[i]];	      c[ii][ii]    =    matrix[swap[i]];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  if  (c[ii][i]  ==  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  if  (c[ii][i]  ==  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    ==    c[isi][isi])    {    if  (c[ii][i]  ==  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
6	[BUG]  [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  if  (c[ii][i]!=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  if  (c[ii][i]!=  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    ==    c[isi][isi])    {    if  (c[ii][i]!=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
7	[BUG]  [BUGGY]  c[i][i]  =  matrix[swap[i]];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[i][i]  =  matrix[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[i][i]  =  matrix[swap[i]];	      c[ii][i]    =    matrix[swap[i]];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  <  c[isi][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	6	3	replace
9	[BUG]  [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  <  c[isi][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	6	3	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[ii][i]  <  c[isi][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	6	3	replace
11	[BUG]  [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  <  c[isi][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	6	3	replace
12	[BUG]  [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  if  (c[ii][i]  >=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  if  (c[ii][i]  >=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    >=    c[isi][i])    {    if  (c[ii][i]  >=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
13	[BUG]  [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  if  (c[ii][i]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  if  (c[ii][i]!=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    >=    c[isi][i])    {    if  (c[ii][i]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
14	[BUG]  [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  if  (c[ii][i]  >>  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  if  (c[ii][i]  >>  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    >=    c[isi][i])    {    if  (c[ii][i]  >>  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
15	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  ==  c[isi][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
16	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  ==  c[isi][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]!=  c[isi][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	13	2	replace
18	[BUG]  [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]!=  c[isi][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	13	2	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]!=  c[isi][i])  {	  if(c[ii][ii]!=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	17	3	replace
20	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=  c[isi][i])  {	  if(c[ii][ii]!=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	17	3	replace
21	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]  ==  c[isi][i])  {	  if(c[ii][ii]!=    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	17	3	replace
22	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]  ==  c[isi][i])  {	  if(c[ii][ii]!=    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	17	3	replace
23	[BUG]  [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  if  (c[i][ii]  <  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  if  (c[i][ii]  <  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][ii]    <    c[isi][isi])    {    if  (c[i][ii]  <  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
24	[BUG]  [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  If  (c[i][ii]  <  c[isi][isi])  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  If  (c[i][ii]  <  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][ii]    <    c[isi][isi])    {    If  (c[i][ii]  <  c[isi][isi])  {	  	non-compiled	[CE]  ';'  expected	7	None	add
25	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  if(c[ii][ii]!=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  if(c[ii][ii]!=  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]!=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
26	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  if(c[ii][ii]  >=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  if(c[ii][ii]  >=  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]  >=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
27	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  if(c[ii][ii]  ==  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  if(c[ii][ii]  ==  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]  ==  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
28	[BUG]  [BUGGY]  c[ii][ii]  =  index[swap[i]]  +  1;  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  =  index[swap[i]]  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  index[swap[i]]  +  1;	      c[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	add
30	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	add
31	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  [CE]  '('  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	        c[ii][ii]    =    index[swap[i]];    if[ii][ii]  =  index[swap[i]];	  	non-compiled	[CE]  '('  expected	2	None	add
32	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  [CE]  not  a  statement  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	        c[ii][ii]    =    index[swap[i]];    c[ii][ii],  index[swap[i]];	  	non-compiled	[CE]  not  a  statement	2	None	add
33	[BUG]  [BUGGY]  c[ii][ii]  <  =  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  <  =  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  <  =  c[isi][isi])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  c[ii][ii]  >  swap[r][isi])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  >  swap[r][isi])  {  swap[r]  =  i;  }  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  >  swap[r][isi])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  ==  c[i][isi])  {	  if    (c[ii][i]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	15	3	replace
36	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  ==  c[i][isi])  {	  if    (c[ii][i]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	15	3	replace
37	[BUG]  [BUGGY]  int  c[i][i]  =  index[swap[i]]  +  1;  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  int  c[i][i]  =  index[swap[i]]  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[i][i]  =  index[swap[i]]  +  1;	      int    c[i][i]    =    index[swap[i]];    	non-compiled	[CE]  ']'  expected	4	None	replace
38	[BUG]  [BUGGY]  c[ii][i]  =  root[swap[i]];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][i]  =  root[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][i]  =  root[swap[i]];	      c[ii][i]    =    matrix[sqrt[i]];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
39	[BUG]  [BUGGY]  if  (c[ii][i]  >  swap[i][i])  {  [CE]  array  required,  but  int  found  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  >  swap[i][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  >  swap[i][i])  {	  if    (c[ii][ij]    >    c[isi][i])    {    	non-compiled	[CE]  array  required,  but  int  found	11	None	replace
40	[BUG]  [BUGGY]  if  (c[i][i]  >  swap[i][i])  {  [CE]  array  required,  but  int  found  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  >  swap[i][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  >  swap[i][i])  {	  if    (c[ii][ij]    >    c[isi][i])    {    	non-compiled	[CE]  array  required,  but  int  found	11	None	replace
41	[BUG]  [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  If  (c[ii][ii]  <  c[isi][isi])  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  If  (c[ii][ii]  <  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][ii]    <    c[isi][isi])    {    If  (c[ii][ii]  <  c[isi][isi])  {	  	non-compiled	[CE]  ';'  expected	5	None	add
42	[BUG]  [BUGGY]  if  (c[ii][ij]  <  c[isi][i])  {  [CE]  cannot  find  symbol  ij  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][ij]  <  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ij]  <  c[isi][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	6	None	replace
43	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[ii][ii]  ==  c[isi][isi])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
44	[BUG]  [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ii]  ==  c[isi][isi])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
45	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  int  c[ii][ii]  =  index[swap[i]];  [CE]  ']'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  int  c[ii][ii]  =  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	        c[ii][ii]    =    index[swap[i]];    int  c[ii][ii]  =  index[swap[i]];	  	non-compiled	[CE]  ']'  expected	2	None	add
46	[BUG]  [BUGGY]  int  c[ii]  =  index[swap[i]]  +  1;  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  int  c[ii]  =  index[swap[i]]  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[ii]  =  index[swap[i]]  +  1;	      int    c[ii]    =    index[swap[i]];    	non-compiled	[CE]  ']'  expected	10	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  ==  c[i][i])  {	  if    (c[ii][i]    ==    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	15	3	replace
48	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  ==  c[i][i])  {	  if    (c[ii][i]    ==    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	15	3	replace
49	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  ==  c[isi][isi])  {	  if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
50	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  ==  c[isi][isi])  {	  if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  >=  c[isi][i])  {	  if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	8	3	replace
52	[BUG]  [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  >=  c[isi][i])  {	  if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	8	3	replace
53	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[ii][i]  ==  c[isi][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
54	[BUG]  [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  ==  c[isi][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
55	[BUG]  [BUGGY]  c[ii][i]  =  matrix[symbol[i]];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][i]  =  matrix[symbol[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][i]  =  matrix[symbol[i]];	      c[ii][i]    =    matrix[sqrt[i]];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  c[ii][ii]  =  c[isi][ii])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  =  c[isi][ii])  {  swap[r]  =  i;  }  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  c[isi][ii])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
57	[BUG]  [BUGGY]  c[ii][ii]  >  c[isi][ij])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  >  c[isi][ij])  {  swap[r]  =  i;  }  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  >  c[isi][ij])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
58	[BUG]  [BUGGY]  if(c[ii][ij]!=  c[isi][i])  {  [CE]  cannot  find  symbol  ij  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ij]!=  c[isi][i])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ij]!=  c[isi][i])  {	  if(c[ii][ii]!=    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	17	None	replace
59	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[isi][ij])  {  [CE]  cannot  find  symbol  ij  [FE]      AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[ii][ii]  ==  c[isi][ij])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]  ==  c[isi][ij])  {	  if(c[ii][ii]!=    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	17	None	replace
60	[BUG]  [BUGGY]  int  c[i]  =  index[swap[i]]  +  1;  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  int  c[i]  =  index[swap[i]]  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[i]  =  index[swap[i]]  +  1;	      int    c[ii]    =    index[swap[i]];    	non-compiled	[CE]  ']'  expected	10	None	replace
61	[BUG]  [BUGGY]  c[ii][ii]  =  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[ii][ii]  =  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  c[isi][isi])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
62	[BUG]  [BUGGY]  c[i][i]  =  root[swap[i]];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  c[i][i]  =  root[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[i][i]  =  root[swap[i]];	      c[ii][i]    =    matrix[swap[i]];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  int  c[i][i]  =  root[swap[i]];  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  int  c[i][i]  =  root[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[i][i]  =  root[swap[i]];	      int    c[i][i]    =    matrix[swap[i]];    	non-compiled	[CE]  ']'  expected	19	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[i][i]!=  c[isi][isi])  {	  if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	8	2	replace
65	[BUG]  [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  [BUGGY]    swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][i]!=  c[isi][isi])  {	  if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	8	2	replace
66	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  [CE]  ';'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]]];	  	non-compiled	[CE]  ';'  expected	2	None	add
