bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }		non-compiled	[CE]  not  a  statement	30	None	add
2	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    c[ii][ii]  =  index[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	    c[ii][ii]  =  index[swap[i]];		compilable	  [FE]  NonPositiveDefiniteMatrixException  	30	3	add
3	[BUG]  [BUGGY]    c[ii][ii]  =  index[swap[i]];  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    c[ii][ii]  =  index[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    c[ii][ii]  =  index[swap[i]];		compilable	  [FE]  NonPositiveDefiniteMatrixException  	30	3	add
4	[BUG]  [BUGGY]    int  c[i][i]  =  index[swap[i]];  [CE]  ']'  expected  [FE]        AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    int  c[i][i]  =  index[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    int  c[i][i]  =  index[swap[i]];		non-compiled	[CE]  ']'  expected	30	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[ii][ii]  <  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	3	replace
6	[BUG]  [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][ii]  <  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ii]  <  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	3	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][ii]  <  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	3	replace
8	[BUG]  [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[i][ii]  <  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][ii]  <  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	3	replace
9	[BUG]  [BUGGY]    c[ii][ii]  =  matrix[swap[i]];  [CE]  array  required,  but  RealMatrix  found  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    c[ii][ii]  =  matrix[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    c[ii][ii]  =  matrix[swap[i]];		non-compiled	[CE]  array  required,  but  RealMatrix  found	30	None	add
10	[BUG]  [BUGGY]    int  c[ii]  =  index[swap[i]];  [CE]  ']'  expected  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    int  c[ii]  =  index[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    int  c[ii]  =  index[swap[i]];		non-compiled	[CE]  ']'  expected	30	None	add
11	[BUG]  [BUGGY]  if  (c[ii][ij]  >  c[isi][i])  {  [CE]  cannot  find  symbol  ij  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][ij]  >  c[isi][i])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ij]  >  c[isi][i])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	non-compiled	[CE]  cannot  find  symbol  ij	29	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[ii][i]  >=  c[isi][i])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	2	replace
13	[BUG]  [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][i]  >=  c[isi][i])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  >=  c[isi][i])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	2	replace
14	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[ii][i]  ==  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
15	[BUG]  [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if  (c[ii][i]  ==  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  ==  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]!=  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	3	replace
17	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]  if(c[ii][ii]!=  c[isi][isi])  {  [BUGGY]  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=  c[isi][isi])  {	if  (c[ii][ii]  >  c[isi][isi])  {  	compilable	  [FE]  AssertionError  	29	3	replace
18	[BUG]  [BUGGY]    c[ii][i]  =  matrix[swap[i]];  [CE]  array  required,  but  RealMatrix  found  [FE]    AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    c[ii][i]  =  matrix[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    c[ii][i]  =  matrix[swap[i]];		non-compiled	[CE]  array  required,  but  RealMatrix  found	30	None	add
19	[BUG]  [BUGGY]    int  c[i][i]  =  matrix[swap[i]];  [CE]  ']'  expected  [FE]      AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    int  c[i][i]  =  matrix[swap[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    int  c[i][i]  =  matrix[swap[i]];		non-compiled	[CE]  ']'  expected	30	None	add
20	[BUG]  [BUGGY]    c[ii][i]  =  matrix[sqrt[i]];  [CE]  cannot  find  symbol  sqrt  [FE]        AssertionError  [CONTEXT]  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [BUGGY]    c[ii][i]  =  matrix[sqrt[i]];  [BUGGY]  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	    c[ii][i]  =  matrix[sqrt[i]];		non-compiled	[CE]  cannot  find  symbol  sqrt	30	None	add
