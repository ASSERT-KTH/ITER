bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]!=  c[i][i])  {	  if    (c[i][i]!=    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	18	3	replace
2	[BUG]  [BUGGY]  if  (c[i][i]!=  c[i][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]!=  c[i][i])  {	  if    (c[i][i]!=    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	18	3	replace
3	[BUG]  [BUGGY]  c[ii][ii]  <  =  c[isi][ij])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  <  =  c[isi][ij])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  <  =  c[isi][ij])  {  swap[r]  =  i;  }	  c[ii][ii]    >    c[isi][ij])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
4	[BUG]  [BUGGY]  c[ii][ii]  >  swap[r][ij])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  >  swap[r][ij])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  >  swap[r][ij])  {  swap[r]  =  i;  }	  c[ii][ii]    >    c[isi][ij])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	57	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  <  c[i][isi])  {	  if    (c[i][ii]    <    c[isi][isi])    {    if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	23	3	replace
6	[BUG]  [BUGGY]  if  (c[i][i]  <  c[i][isi])  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  <  c[i][isi])  {	  if    (c[i][ii]    <    c[isi][isi])    {    if    (c[i][ii]    <    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	23	3	replace
7	[BUG]  [BUGGY]  c[ii][i]  =  index[swap[i]];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][i]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][i]  =  index[swap[i]];	  c[ii][i]    =    root[swap[i]];    	non-compiled	[CE]  <identifier>  expected	38	None	replace
8	[BUG]  [BUGGY]  c[ii][ii]  <  c[isi][isi])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  <  c[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  <  c[isi][isi])  {  swap[r]  =  i;  }	  c[ii][ii]    <    =    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
9	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][ii]  ==  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][ii]  ==  c[i][isi])  {	  if    (c[ii][ii]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	44	3	replace
10	[BUG]  [BUGGY]  if  (c[i][ii]  ==  c[i][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][ii]  ==  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][ii]  ==  c[i][isi])  {	  if    (c[ii][ii]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	44	3	replace
11	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][ii]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][ii]  ==  c[isi][i])  {	  if    (c[ii][ii]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	44	3	replace
12	[BUG]  [BUGGY]  if  (c[i][ii]  ==  c[isi][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][ii]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][ii]  ==  c[isi][i])  {	  if    (c[ii][ii]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	44	3	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][i]  ==  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][i]  ==  c[i][i])  {	  if(c[ii][ii]    ==    c[isi][i])    {    	compilable	  [FE]  AssertionError  	22	2	replace
14	[BUG]  [BUGGY]  if(c[ii][i]  ==  c[i][i])  {  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][i]  ==  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][i]  ==  c[i][i])  {	  if(c[ii][ii]    ==    c[isi][i])    {    	compilable	  [FE]  AssertionError  	22	2	replace
15	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  if  (c[i][i]  ==  c[i][isi])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  if  (c[i][i]  ==  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[i][isi])    {    if  (c[i][i]  ==  c[i][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
16	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  if  (c[i][i]!=  c[i][isi])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[i][isi])  {  if  (c[i][i]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[i][isi])    {    if  (c[i][i]!=  c[i][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
17	[BUG]  [BUGGY]  if  (isi  >  swap[i][i])  {  [CE]  array  required,  but  int  found  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (isi  >  swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (isi  >  swap[i][i])  {	  if    (c[ii][i]    >    swap[i][i])    {    	non-compiled	[CE]  array  required,  but  int  found	39	None	replace
18	[BUG]  [BUGGY]  if  (swap[i][i]  >  swap[i][i])  {  [CE]  array  required,  but  int  found  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (swap[i][i]  >  swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (swap[i][i]  >  swap[i][i])  {	  if    (c[ii][i]    >    swap[i][i])    {    	non-compiled	[CE]  array  required,  but  int  found	39	None	replace
19	[BUG]  [BUGGY]  c[ii][ii]  =  index[swap[i]]  +  2;  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  index[swap[i]]  +  2;  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  index[swap[i]]  +  2;	  c[ii][ii]    =    index[swap[i]]    +    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
20	[BUG]  [BUGGY]  if(i  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  }  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(i  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(i  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    c[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  if  (c[i][i]  ==  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  if  (c[i][i]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[isi][i])    {    if  (c[i][i]  ==  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
22	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  if  (c[i][i]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[isi][i])  {  if  (c[i][i]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[isi][i])    {    if  (c[i][i]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (isi  <  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (isi  <  c[i][i])  {	  if    (c[i][i]    <    c[isi][i])    {    	compilable	  [FE]  AssertionError  	9	3	replace
24	[BUG]  [BUGGY]  if  (isi  <  c[i][i])  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (isi  <  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (isi  <  c[i][i])  {	  if    (c[i][i]    <    c[isi][i])    {    	compilable	  [FE]  AssertionError  	9	3	replace
25	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  <  c[i][i])  {	  if    (c[i][i]    <    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	9	3	replace
26	[BUG]  [BUGGY]  if  (c[i][i]  <  c[i][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  <  c[i][i])  {	  if    (c[i][i]    <    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	9	3	replace
27	[BUG]  [BUGGY]  c[i][i]  =  index[swap[i]];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[i][i]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[i][i]  =  index[swap[i]];	  c[i][i]    =    root[swap[i]];    	non-compiled	[CE]  <identifier>  expected	62	None	replace
28	[BUG]  [BUGGY]  int  c[i][i]  =  index[swap[i]]  -  1;  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  int  c[i][i]  =  index[swap[i]]  -  1;  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[i][i]  =  index[swap[i]]  -  1;	  int    c[i][i]    =    index[swap[i]]    +    1;    	non-compiled	[CE]  ']'  expected	37	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  b[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]!=  b[i][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    if    (c[ii][i]!=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	13	3	replace
30	[BUG]  [BUGGY]  if  (c[i][i]!=  b[i][i])  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  b[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]!=  b[i][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    if    (c[ii][i]!=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	13	3	replace
31	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  if(c[ii][ii]  ==  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  if(c[ii][ii]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]    ==    c[isi][i])    {    if(c[ii][ii]  ==  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
32	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  if(c[ii][ii]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  if(c[ii][ii]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]    ==    c[isi][i])    {    if(c[ii][ii]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
33	[BUG]  [BUGGY]  int  c[i]  =  index[swap[i]]  -  1;  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  int  c[i]  =  index[swap[i]]  -  1;  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[i]  =  index[swap[i]]  -  1;	  int    c[i]    =    index[swap[i]]    +    1;    	non-compiled	[CE]  ']'  expected	60	None	replace
34	[BUG]  [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  if  (c[ii][i]  <  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  if  (c[ii][i]  <  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    <    c[isi][i])    {    if  (c[ii][i]  <  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
35	[BUG]  [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  if  (c[ii][i]  <  c[swap[i][i])  {  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][i]  <  c[isi][i])  {  if  (c[ii][i]  <  c[swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    <    c[isi][i])    {    if  (c[ii][i]  <  c[swap[i][i])  {	  	non-compiled	[CE]  ']'  expected	10	None	add
36	[BUG]  [BUGGY]  if  (c[i][i]  <  c[swap[i][i])  {  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  <  c[swap[i][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    if    (c[ii][ii]    <    c[swap[i][isi])    {    	non-compiled	[CE]  ']'  expected	2	None	replace
37	[BUG]  [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  if  (c[ii][i]  ==  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  if  (c[ii][i]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    ==    c[isi][i])    {    if  (c[ii][i]  ==  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
38	[BUG]  [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  if  (c[ii][i]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][i]  ==  c[isi][i])  {  if  (c[ii][i]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][i]    ==    c[isi][i])    {    if  (c[ii][i]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
39	[BUG]  [BUGGY]  if(c[ii][ii]  ==  b[isi][ij])  {  [CE]  cannot  find  symbol  ij  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  b[isi][ij])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]  ==  b[isi][ij])  {	  if(c[ii][ii]    ==    c[isi][ij])    {    	non-compiled	[CE]  cannot  find  symbol  ij	59	None	replace
40	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[isi][ir])  {  [CE]  cannot  find  symbol  ir  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  c[isi][ir])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]  ==  c[isi][ir])  {	  if(c[ii][ii]    ==    c[isi][ij])    {    	non-compiled	[CE]  cannot  find  symbol  ir	59	None	replace
41	[BUG]  [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  if(c[i][i]!=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  if(c[i][i]!=  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][i]!=    c[isi][isi])    {    if(c[i][i]!=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
42	[BUG]  [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  if(c[i][i]  >=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  c[isi][isi])  {  if(c[i][i]  >=  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][i]!=    c[isi][isi])    {    if(c[i][i]  >=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
43	[BUG]  [BUGGY]  if(swap[i][i]!=  c[i][i])  {  [CE]  array  required,  but  int  found  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(swap[i][i]!=  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(swap[i][i]!=  c[i][i])  {	  if(c[ii][ii]!=    c[isi][i])    {    	non-compiled	[CE]  array  required,  but  int  found	20	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  >=  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  >=  c[i][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	12	3	replace
45	[BUG]  [BUGGY]  if  (c[i][i]  >=  c[i][i])  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  >=  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  >=  c[i][i])  {	  if    (c[ii][i]    >=    c[isi][i])    {    if    (c[ii][i]    >=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	12	3	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]!=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    >=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	26	3	replace
47	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[i][isi])  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    >=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	26	3	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  >=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]  >=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    >=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	26	2	replace
49	[BUG]  [BUGGY]  if(c[ii][ii]  >=  c[i][isi])  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  >=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]  >=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    >=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	26	2	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  b[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[i][i]!=  b[isi][i])  {	  if(c[ii][ij]!=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	58	3	replace
51	[BUG]  [BUGGY]  if(c[i][i]!=  b[isi][i])  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  b[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][i]!=  b[isi][i])  {	  if(c[ii][ij]!=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	58	3	replace
52	[BUG]  [BUGGY]  if(i  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  }  [CE]  ';'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(i  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(i  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  }	          c[ii][ii]    =    index[swap[i]];    c[ii][ii]    =    index[swap[i]]];    	non-compiled	[CE]  ';'  expected	66	None	replace
53	[BUG]  [BUGGY]  c[i][ii]  =  index[swap[i]];  [CE]  <identifier>  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[i][ii]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[i][ii]  =  index[swap[i]];	          c[ii][ii]    =    index[swap[i]];    c[ii][ii],    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	32	None	replace
54	[BUG]  [BUGGY]  c[ii][ii]  <  =  swap[r][isi])  {  swap[r]  =  i;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  <  =  swap[r][isi])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  <  =  swap[r][isi])  {  swap[r]  =  i;  }	  c[ii][ii]    >    swap[r][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  c[ii][ii]  >  swap[r][ii])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  >  swap[r][ii])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  >  swap[r][ii])  {  swap[r]  =  i;  }	  c[ii][ii]    >    swap[r][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	34	None	replace
56	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  b[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  ==  b[i][i])  {	  if    (c[i][i]    ==    c[i][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	replace
57	[BUG]  [BUGGY]  if  (c[i][i]  ==  b[i][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  b[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  ==  b[i][i])  {	  if    (c[i][i]    ==    c[i][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	replace
58	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  if  (c[i][i]  ==  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  if  (c[i][i]  ==  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[isi][isi])    {    if  (c[i][i]  ==  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
59	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  if  (c[i][i]!=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[isi][isi])  {  if  (c[i][i]!=  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[isi][isi])    {    if  (c[i][i]!=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
60	[BUG]  [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  if  (c[i][i]  >=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  if  (c[i][i]  >=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    >=    c[isi][i])    {    if  (c[i][i]  >=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
61	[BUG]  [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  if  (c[i][i]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  if  (c[i][i]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    >=    c[isi][i])    {    if  (c[i][i]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
62	[BUG]  [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  if  (c[i][i]  >>  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  >=  c[isi][i])  {  if  (c[i][i]  >>  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    >=    c[isi][i])    {    if  (c[i][i]  >>  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
63	[BUG]  [BUGGY]  c[ii][i]  =  root[symbol[i]];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][i]  =  root[symbol[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][i]  =  root[symbol[i]];	  c[ii][i]    =    matrix[symbol[i]];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
64	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  b[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  ==  b[isi][isi])  {	  if    (c[i][i]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	50	3	replace
65	[BUG]  [BUGGY]  if  (c[i][i]  ==  b[isi][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  b[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  ==  b[isi][isi])  {	  if    (c[i][i]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	50	3	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][ii]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[i][ii]!=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]!=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	25	3	replace
67	[BUG]  [BUGGY]  if(c[i][ii]!=  c[i][isi])  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][ii]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][ii]!=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]!=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	25	3	replace
68	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]  ==  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	27	3	replace
69	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[i][isi])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]  ==  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    ==    c[isi][isi])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	27	3	replace
70	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	                c[ii][ii]        =        index[swap[i]];        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	add
71	[BUG]  [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	                c[ii][ii]        =        index[swap[i]];        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	add
72	[BUG]  [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  matrix[swap[i]];  c[ii][ii]  =  index[swap[i]];  [CE]  array  required,  but  RealMatrix  found  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  matrix[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	                c[ii][ii]        =        index[swap[i]];        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  matrix[swap[i]];  c[ii][ii]  =  index[swap[i]];	  	non-compiled	[CE]  array  required,  but  RealMatrix  found	29	None	add
73	[BUG]  [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [CE]  not  a  statement  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]          c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	                c[ii][ii]        =        index[swap[i]];        c[ii][ii]    =    index[swap[i]];    c[ii][ii],  index[swap[i]];  c[ii][ii]  =  index[swap[i]];	  	non-compiled	[CE]  not  a  statement	29	None	add
74	[BUG]  [BUGGY]  int  c[ii][ii]  =  index[swap[i]];  [CE]  ']'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  int  c[ii][ii]  =  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[ii][ii]  =  index[swap[i]];	          c[ii][ii]    =    index[swap[i]];    int    c[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  ']'  expected	45	None	replace
75	[BUG]  [BUGGY]  If  (c[i][i]  <  c[isi][i])  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  If  (c[i][i]  <  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	If  (c[i][i]  <  c[isi][i])  {	  if    (c[i][ii]    <    c[isi][isi])    {    If    (c[i][ii]    <    c[isi][isi])    {    	non-compiled	[CE]  ';'  expected	24	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[i][i]!=  c[i][isi])  {	  if    (c[ii][i]    ==    c[isi][isi])    {    if    (c[ii][i]!=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	6	2	replace
77	[BUG]  [BUGGY]  if(c[i][i]!=  c[i][isi])  {  [FE]  AssertionError  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][i]!=  c[i][isi])  {	  if    (c[ii][i]    ==    c[isi][isi])    {    if    (c[ii][i]!=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	6	2	replace
78	[BUG]  [BUGGY]  if  (c[i][i]  <  =  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  =  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  <  =  c[isi][i])  {	  if    (c[ii][i]    <    c[isi][i])    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  c[ii][ii]  =  b[isi][ii])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  b[isi][ii])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  b[isi][ii])  {  swap[r]  =  i;  }	  c[ii][ii]    =    c[isi][ii])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
80	[BUG]  [BUGGY]  int  c[ii]  =  index[swap[i]]  -  1;  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  int  c[ii]  =  index[swap[i]]  -  1;  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	int  c[ii]  =  index[swap[i]]  -  1;	  int    c[ii]    =    index[swap[i]]    +    1;    	non-compiled	[CE]  ']'  expected	46	None	replace
81	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }  [CE]  '('  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(ij  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(ij  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    if[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  '('  expected	31	None	replace
82	[BUG]  [BUGGY]  if(swap[i]  >  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }  [CE]  '('  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(swap[i]  >  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(swap[i]  >  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    if[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  '('  expected	31	None	replace
83	[BUG]  [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  if  (c[i][i]  <  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  if  (c[i][i]  <  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    <    c[isi][i])    {    if  (c[i][i]  <  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
84	[BUG]  [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  if  (c[i][i]  <  c[swap[i][i])  {  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  if  (c[i][i]  <  c[swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    <    c[isi][i])    {    if  (c[i][i]  <  c[swap[i][i])  {	  	non-compiled	[CE]  ']'  expected	8	None	add
85	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  b[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if  (c[i][i]  <  b[isi][i])  {	  if    (c[ii][ij]    <    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	42	3	replace
86	[BUG]  [BUGGY]  if  (c[i][i]  <  b[isi][i])  {  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  b[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[i][i]  <  b[isi][i])  {	  if    (c[ii][ij]    <    c[isi][i])    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	42	3	replace
87	[BUG]  [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  if  (c[i][i]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  if  (c[i][i]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]!=    c[isi][i])    {    if  (c[i][i]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
88	[BUG]  [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  if  (c[i][i]  >=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  if  (c[i][i]  >=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]!=    c[isi][i])    {    if  (c[i][i]  >=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
89	[BUG]  [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  if  (c[i][i]  ==  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]!=  c[isi][i])  {  if  (c[i][i]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]!=    c[isi][i])    {    if  (c[i][i]  ==  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
90	[BUG]  [BUGGY]  c[ii][ii]  =  b[isi][isi])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  b[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  b[isi][isi])  {  swap[r]  =  i;  }	  c[ii][ii]    =    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
91	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  if(c[ii][ii]!=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  if(c[ii][ii]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=    c[isi][i])    {    if(c[ii][ii]!=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
92	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  if(c[ii][ii]  >=  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  if(c[ii][ii]  >=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=    c[isi][i])    {    if(c[ii][ii]  >=  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
93	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  if(c[ii][ii]  ==  c[isi][i])  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[isi][i])  {  if(c[ii][ii]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=    c[isi][i])    {    if(c[ii][ii]  ==  c[isi][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
94	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  if  (c[i][i]  ==  c[i][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  if  (c[i][i]  ==  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[i][i])    {    if  (c[i][i]  ==  c[i][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
95	[BUG]  [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  if  (c[i][i]!=  c[i][i])  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  ==  c[i][i])  {  if  (c[i][i]!=  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    ==    c[i][i])    {    if  (c[i][i]!=  c[i][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
96	[BUG]  [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  if  (c[ii][ii]  ==  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  if  (c[ii][ii]  ==  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][ii]    ==    c[isi][isi])    {    if  (c[ii][ii]  ==  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
97	[BUG]  [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  if  (c[ii][ii]!=  c[isi][isi])  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][ii]  ==  c[isi][isi])  {  if  (c[ii][ii]!=  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[ii][ii]    ==    c[isi][isi])    {    if  (c[ii][ii]!=  c[isi][isi])  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
98	[BUG]  [BUGGY]  If  (c[i][ii]  <  c[i][isi])  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  If  (c[i][ii]  <  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	If  (c[i][ii]  <  c[i][isi])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    If    (c[ii][ii]    <    c[isi][isi])    {    	non-compiled	[CE]  ';'  expected	41	None	replace
99	[BUG]  [BUGGY]  if  (si[i][i]  >  swap[i][i])  {  [CE]  cannot  find  symbol  si  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (si[i][i]  >  swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (si[i][i]  >  swap[i][i])  {	  if    (c[ii][i]    >    swap[i][i])    {    	non-compiled	[CE]  cannot  find  symbol  si	39	None	replace
100	[BUG]  [BUGGY]  if(c[ii][ij]!=  c[i][isi])  {  [CE]  cannot  find  symbol  ij  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ij]!=  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ij]!=  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]!=    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	25	None	replace
101	[BUG]  [BUGGY]  if  (c[ii][i]  >=  c[swap[i][i])  {  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][i]  >=  c[swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  >=  c[swap[i][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    if    (c[ii][ii]    <    c[swap[i][isi])    {    	non-compiled	[CE]  ']'  expected	2	None	replace
102	[BUG]  [BUGGY]  if  (c[ii][i]  <  c[swap[i][i])  {  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][i]  <  c[swap[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][i]  <  c[swap[i][i])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    if    (c[ii][ii]    <    c[swap[i][isi])    {    	non-compiled	[CE]  ']'  expected	2	None	replace
103	[BUG]  [BUGGY]  if(c[ii][ij]  ==  c[isi][i])  {  [CE]  cannot  find  symbol  ij  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ij]  ==  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ij]  ==  c[isi][i])  {	  if(c[ii][ii]    ==    c[isi][i])    {    	non-compiled	[CE]  cannot  find  symbol  ij	22	None	replace
104	[BUG]  [BUGGY]  c[ii][ii]  =  index[isi][ii])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  index[isi][ii])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  index[isi][ii])  {  swap[r]  =  i;  }	  c[ii][ii]    =    c[isi][ii])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
105	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  if(c[ii][ii]  ==  c[si][i])  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]  ==  c[isi][i])  {  if(c[ii][ii]  ==  c[si][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]    ==    c[isi][i])    {    if(c[ii][ii]  ==  c[si][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
106	[BUG]  [BUGGY]  if  (c[ii][ii]  ==  c[i][ij])  {  [CE]  cannot  find  symbol  ij  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][ii]  ==  c[i][ij])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ii]  ==  c[i][ij])  {	  if    (c[ii][ii]    ==    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	44	None	replace
107	[BUG]  [BUGGY]  if(c[ii][i]  ==  c[i][ij])  {  [CE]  cannot  find  symbol  ij  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][i]  ==  c[i][ij])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][i]  ==  c[i][ij])  {	  if(c[ii][ii]    ==    c[isi][ij])    {    	non-compiled	[CE]  cannot  find  symbol  ij	59	None	replace
108	[BUG]  [BUGGY]  c[ii][ii]  =  c[isi][ij])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  c[isi][ij])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  c[isi][ij])  {  swap[r]  =  i;  }	  c[ii][ii]    >    c[isi][ij])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
109	[BUG]  [BUGGY]  c[ii][ii],  index[swap[i]];  [CE]  not  a  statement  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii],  index[swap[i]];  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii],  index[swap[i]];	          c[ii][ii]    =    index[swap[i]];    c[ii][ii],    index[swap[i]];    	non-compiled	[CE]  not  a  statement	32	None	replace
110	[BUG]  [BUGGY]  if  (c[ii][ij]  <  c[i][isi])  {  [CE]  cannot  find  symbol  ij  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][ij]  <  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ij]  <  c[i][isi])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    If    (c[ii][ii]    <    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	41	None	replace
111	[BUG]  [BUGGY]  c[ii][ii]  =  swap[r][ii])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  swap[r][ii])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  swap[r][ii])  {  swap[r]  =  i;  }	  c[ii][ii]    >    swap[r][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
112	[BUG]  [BUGGY]  c[ii][ii]  =  swap[r][isi])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  swap[r][isi])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  swap[r][isi])  {  swap[r]  =  i;  }	  c[ii][ii]    >    swap[r][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
113	[BUG]  [BUGGY]  c[ii][ii]  =  index[isi][isi])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  index[isi][isi])  {  swap[r]  =  i;  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  index[isi][isi])  {  swap[r]  =  i;  }	  c[ii][ii]    =    c[isi][isi])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
114	[BUG]  [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  if  (c[i][i]  <  c[si][i])  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[i][i]  <  c[isi][i])  {  if  (c[i][i]  <  c[si][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if    (c[i][i]    <    c[isi][i])    {    if  (c[i][i]  <  c[si][i])  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
115	[BUG]  [BUGGY]  if(ii  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }  [CE]  '('  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(ii  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(ii  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    if[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  '('  expected	31	None	replace
116	[BUG]  [BUGGY]  if(c[ii][ij]  ==  c[i][isi])  {  [CE]  cannot  find  symbol  ij  [FE]            AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ij]  ==  c[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ij]  ==  c[i][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    ==    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	27	None	replace
117	[BUG]  [BUGGY]  if(c[ii][ij]  ==  c[i][i])  {  [CE]  cannot  find  symbol  ij  [FE]              AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ij]  ==  c[i][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ij]  ==  c[i][i])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    ==    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	27	None	replace
118	[BUG]  [BUGGY]  if(c[i][i]!=  c[swap[i][isi])  {  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[i][i]!=  c[swap[i][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[i][i]!=  c[swap[i][isi])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    if    (c[ii][ii]    <    c[swap[i][isi])    {    	non-compiled	[CE]  ']'  expected	2	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[ii][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][ii]!=  c[ii][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    >=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	26	3	replace
120	[BUG]  [BUGGY]  if(c[ii][ii]!=  c[ii][isi])  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][ii]!=  c[ii][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][ii]!=  c[ii][isi])  {	  if(c[ii][ii]!=    c[isi][isi])    {    if(c[ii][ii]    >=    c[isi][isi])    {    	compilable	  [FE]  AssertionError  	26	3	replace
121	[BUG]  [BUGGY]  if(swap[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  }  [CE]  ';'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(swap[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(swap[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]]];  }	          c[ii][ii]    =    index[swap[i]];    c[ii][ii]    =    index[swap[i]]];    	non-compiled	[CE]  ';'  expected	66	None	replace
122	[BUG]  [BUGGY]  if(index[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  }  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(index[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(index[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    c[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
123	[BUG]  [BUGGY]  if  (c[ii][ij]  ==  c[isi][isi])  {  [CE]  cannot  find  symbol  ij  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][ij]  ==  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ij]  ==  c[isi][isi])  {	  if    (c[ii][ii]    ==    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	44	None	replace
124	[BUG]  [BUGGY]  if(ii  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  }  [CE]  not  a  statement  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(ii  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(ii  <  0)  {  c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    c[ii][ii],    index[swap[i]];    	non-compiled	[CE]  not  a  statement	32	None	replace
125	[BUG]  [BUGGY]  if(swap[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  b[swap[i]];  }  [CE]  '('  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(swap[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  b[swap[i]];  }  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(swap[i]  <  0)  {  c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  b[swap[i]];  }	          c[ii][ii]    =    index[swap[i]];    if[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  '('  expected	31	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][i]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	add	if(c[ii][i]!=  c[isi][i])  {	  if(c[ii][ij]!=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	58	3	replace
127	[BUG]  [BUGGY]  if(c[ii][i]!=  c[isi][i])  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if(c[ii][i]!=  c[isi][i])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if(c[ii][i]!=  c[isi][i])  {	  if(c[ii][ij]!=    c[isi][i])    {    	compilable	  [FE]  AssertionError  	58	3	replace
128	[BUG]  [BUGGY]  c[ii][ii]  =  matrix[swap[i]]  +  1;  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  c[ii][ii]  =  matrix[swap[i]]  +  1;  [BUGGY]      if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	c[ii][ii]  =  matrix[swap[i]]  +  1;	  c[ii][ii]    =    index[swap[i]]    +    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
129	[BUG]  [BUGGY]  if  (c[ii][ij]  <  c[isi][isi])  {  [CE]  cannot  find  symbol  ij  [FE]        AssertionError      [CONTEXT]      }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];      [BUGGY]  if  (c[ii][ij]  <  c[isi][isi])  {  [BUGGY]      swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	83	83	2	replace	if  (c[ii][ij]  <  c[isi][isi])  {	  if    (c[ii][ii]    <    c[isi][isi])    {    if    (c[ii][ii]    <    c[isi][isi])    {    	non-compiled	[CE]  cannot  find  symbol  ij	1	None	replace
