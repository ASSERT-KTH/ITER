bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
1	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getSmallIndex();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  r  =  matrix.getSmallIndex();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  r  =  matrix.getSmallIndex();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSize();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[][]  c  =  matrix.getSize();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[][]  c  =  matrix.getSize();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
3	[BUG]  [BUGGY]  final  double[][]  r  =  matrix.getSmallIndex();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[][]  r  =  matrix.getSmallIndex();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[][]  r  =  matrix.getSmallIndex();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
4	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getSmallIndex(order);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  r  =  matrix.getSmallIndex(order);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  r  =  matrix.getSmallIndex(order);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
11	[BUG]  [BUGGY]  int[]  swap  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  matrix.getSize();	      	non-compiled	[CE]  cannot  find  symbol	115	None
12	[BUG]  [BUGGY]  double[][]  swap  =  matrix.getSmallDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  double[][]  swap  =  matrix.getSmallDecomposition();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	double[][]  swap  =  matrix.getSmallDecomposition();	      	non-compiled	[CE]  cannot  find  symbol	115	None
13	[BUG]  [BUGGY]  double[][]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  double[][]  r  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	double[][]  r  =  matrix.getSize();	      	non-compiled	[CE]  cannot  find  symbol	115	None
14	[BUG]  [BUGGY]  int[]  swap  =  matrix.getSmallDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  matrix.getSmallDecomposition();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  matrix.getSmallDecomposition();	      	non-compiled	[CE]  cannot  find  symbol	115	None
22	[BUG]  [BUGGY]  i  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  i  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	i  =  matrix.getSlopeDimension();	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol  i	43	None
23	[BUG]  [BUGGY]  b  =  matrix.getSlopeDimension();  [CE]  cannot  assign  a  value  to  final  variable  b  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b  =  matrix.getSlopeDimension();	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  b	43	None
24	[BUG]  [BUGGY]  if(c  >  i)  {  c  =  matrix.getSlopeDimension();  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  >  i)  {  c  =  matrix.getSlopeDimension();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  >  i)  {  c  =  matrix.getSlopeDimension();  }	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol  i	43	None
34	[BUG]  [BUGGY]  index[i]  =  c.doubleValue;  [CE]  cannot  find  symbol  doubleValue  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.doubleValue;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.doubleValue;	  index[i]    =    swap;    	non-compiled	[CE]  cannot  find  symbol  doubleValue	13	None
41	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  &&  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop  &&  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop  &&  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
43	[BUG]  [BUGGY]  for(boolean  r  =  false;  loop  &&  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  r  =  false;  loop  &&  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  r  =  false;  loop  &&  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
44	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  ||  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  ||  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  ||  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
51	[BUG]  [BUGGY]  final  int  order  =  matrix.getOrderDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  order  =  matrix.getOrderDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  order  =  matrix.getOrderDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
52	[BUG]  [BUGGY]  final  char  order  =  matrix.getOrderDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  char  order  =  matrix.getOrderDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  char  order  =  matrix.getOrderDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
53	[BUG]  [BUGGY]  final  double  order  =  matrix.getOrderDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double  order  =  matrix.getOrderDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double  order  =  matrix.getOrderDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
54	[BUG]  [BUGGY]  final  float  order  =  matrix.getOrderDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  float  order  =  matrix.getOrderDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  float  order  =  matrix.getOrderDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
63	[BUG]  [BUGGY]  if(c[i][isi]!=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]!=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]!=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	63	None
64	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	63	None
71	[BUG]  [BUGGY]  this(Math.abs(small));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(small));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(small));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
73	[BUG]  [BUGGY]  this(Math.abs(small)||  Math.abs(int));  [CE]  '.class'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(small)||  Math.abs(int));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(small)||  Math.abs(int));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  '.class'  expected	64	None
74	[BUG]  [BUGGY]  this(Math.abs(small)-  1));  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(small)-  1));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(small)-  1));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ';'  expected	64	None
82	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop!=  null;)  {  [CE]  incomparable  types:  boolean  and  <null>  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop!=  null;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop!=  null;)  {	  for(boolean    loop    =    false;    loop    <    null;)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	264	None
84	[BUG]  [BUGGY]  for(int  loop  =  false;  loop  <  null;)  {  [CE]  incompatible  types  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  loop  =  false;  loop  <  null;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  loop  =  false;  loop  <  null;)  {	  for(boolean    loop    =    false;    loop    <    null;)    {    	non-compiled	[CE]  incompatible  types	264	None
92	[BUG]  [BUGGY]  int  rank  =  root.getRangeIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  root.getRangeIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  root.getRangeIndex();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
93	[BUG]  [BUGGY]  int  ranking  =  matrix.getRangeIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  ranking  =  matrix.getRangeIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  ranking  =  matrix.getRangeIndex();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
94	[BUG]  [BUGGY]  int  rank  =  index.getRangeIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  index.getRangeIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  index.getRangeIndex();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
101	[BUG]  [BUGGY]  setSmallIndex(matric.getSize());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getSize());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getSize());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
102	[BUG]  [BUGGY]  setSmallIndex(matric.getSmallIndex());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getSmallIndex());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getSmallIndex());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
103	[BUG]  [BUGGY]  setSmallIndex(matric.getShortColumnDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getShortColumnDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getShortColumnDimension());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
104	[BUG]  [BUGGY]  setSmallIndex(matric.getSingleColumnDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getSingleColumnDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getSingleColumnDimension());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
111	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  order);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  order);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  order);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	93	None
112	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  ordered);  [CE]  cannot  find  symbol  ordered  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  ordered);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  ordered);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  cannot  find  symbol  ordered	93	None
113	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  int[order]);  [CE]  ']'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  int[order]);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  int[order]);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  ']'  expected	93	None
114	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  value);  [CE]  cannot  find  symbol  value  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  value);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  value);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  cannot  find  symbol  value	93	None
122	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  r  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  r  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	362	None
123	[BUG]  [BUGGY]  final  int[][]  ordered  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordered  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordered  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	362	None
124	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getColumnDimension();  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  c  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  c  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	362	None
132	[BUG]  [BUGGY]  final  double[][]  e  =  small.getSmallDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  e  =  small.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  e  =  small.getSmallDimension();	      final    double[][]    e    =    matrix.getSmallDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	155	None
133	[BUG]  [BUGGY]  final  double[][]  f  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  f  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  f  =  matrix.getSmallDimension();	      final    double[][]    e    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	155	None
134	[BUG]  [BUGGY]  final  double[][]  e  =  root.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  e  =  root.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  e  =  root.getSmallDimension();	      final    double[][]    e    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	155	None
142	[BUG]  [BUGGY]  int[][]  e  =  root.getEvalDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  e  =  root.getEvalDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  e  =  root.getEvalDimension();	      int[][]    e    =    matrix.getEvalDimension();    	non-compiled	[CE]  cannot  find  symbol	484	None
143	[BUG]  [BUGGY]  int[][]  r  =  matrix.getEvalDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getEvalDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getEvalDimension();	      int[][]    e    =    matrix.getEvalDimension();    	non-compiled	[CE]  cannot  find  symbol	484	None
144	[BUG]  [BUGGY]  int[][]  e  =  small.getEvalDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  e  =  small.getEvalDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  e  =  small.getEvalDimension();	      int[][]    e    =    matrix.getEvalDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	484	None
151	[BUG]  [BUGGY]  int  order  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  order  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  order  =  matrix.getRowDimension();	      int    r    =    matrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	84	None
153	[BUG]  [BUGGY]  int  ordered  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  ordered  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  ordered  =  matrix.getRowDimension();	      int    r    =    matrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	84	None
154	[BUG]  [BUGGY]  int  i  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  i  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  i  =  matrix.getRowDimension();	      int    r    =    matrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	84	None
162	[BUG]  [BUGGY]  index  =  root.getSmallIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  root.getSmallIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  root.getSmallIndex();	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
163	[BUG]  [BUGGY]  index  =  small.getSmallIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  small.getSmallIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  small.getSmallIndex();	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
172	[BUG]  [BUGGY]  int  ranking  =  matrix.getSize();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  ranking  =  matrix.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  ranking  =  matrix.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
173	[BUG]  [BUGGY]  int  rank  =  root.getSize();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  root.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  root.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
174	[BUG]  [BUGGY]  int  rank  =  index.getSize();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  index.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  index.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
182	[BUG]  [BUGGY]  final  double[][]  r  =  small.getSmallDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  r  =  small.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  r  =  small.getSmallDimension();	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	153	None
183	[BUG]  [BUGGY]  final  double[][]  r  =  root.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  r  =  root.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  r  =  root.getSmallDimension();	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	153	None
184	[BUG]  [BUGGY]  final  double[][]  matrix  =  matrix.getSmallDimension();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  matrix  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  matrix  =  matrix.getSmallDimension();	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	153	None
191	[BUG]  [BUGGY]  int[]  index  =  new  int[16];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[16];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[16];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
192	[BUG]  [BUGGY]  int[]  index  =  new  int[6];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[6];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[6];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
193	[BUG]  [BUGGY]  int[]  index  =  new  int[10];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[10];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[10];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
194	[BUG]  [BUGGY]  int[]  index  =  new  int[12];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[12];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[12];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
202	[BUG]  [BUGGY]  index  =  matrix.size();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.size();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.size();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
203	[BUG]  [BUGGY]  index  =  matrix.indexOf(b,  i);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.indexOf(b,  i);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.indexOf(b,  i);	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
204	[BUG]  [BUGGY]  index  =  matrix.getSize()  -  r;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.getSize()  -  r;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.getSize()  -  r;	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
211	[BUG]  [BUGGY]  final  int[]  ordered  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  matrix.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	25	None
212	[BUG]  [BUGGY]  final  int[]  ordered  =  small.getSize();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  small.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  small.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None
213	[BUG]  [BUGGY]  final  int[]  ordered  =  b.getSize();  [CE]  cannot  find  symbol  b  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  b.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  b.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  b	25	None
214	[BUG]  [BUGGY]  final  int[]  ordered  =  size.getSize();  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  size.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  size.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  size	25	None
222	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ranking  =  matrix.getLowerBound();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ranking  =  matrix.getLowerBound();	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	282	None
223	[BUG]  [BUGGY]  final  int  order  =  matrix.getLowerBound();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getLowerBound();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getLowerBound();	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	282	None
224	[BUG]  [BUGGY]  final  char  rank  =  matrix.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  rank  =  matrix.getLowerBound();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  rank  =  matrix.getLowerBound();	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	282	None
231	[BUG]  [BUGGY]  int[]  index  =  new  int[order];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[order];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[order];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
232	[BUG]  [BUGGY]  int[]  index  =  new  int[switch];  [CE]  illegal  start  of  expression  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[switch];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[switch];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None
233	[BUG]  [BUGGY]  int[]  index  =  new  int[size];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[size];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[size];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
234	[BUG]  [BUGGY]  int[]  index  =  new  int[sample];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[sample];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[sample];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
241	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSize();    }    	non-compiled	[CE]  illegal  start  of  expression	512	None
243	[BUG]  [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSize();    }    	non-compiled	[CE]  illegal  start  of  expression	512	None
253	[BUG]  [BUGGY]  int  r  =(int  i  <  0)?  0  :  b.length;  [CE]  ')'  expected  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(int  i  <  0)?  0  :  b.length;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(int  i  <  0)?  0  :  b.length;	  int    r    =(index    <    0)?    0    :    b.length;    	non-compiled	[CE]  ')'  expected	192	None
254	[BUG]  [BUGGY]  int  r  =(i  <  0)?  0  :  b.length;  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(i  <  0)?  0  :  b.length;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(i  <  0)?  0  :  b.length;	  int    r    =(index    <    0)?    0    :    b.length;    	non-compiled	[CE]  cannot  find  symbol  i	192	None
262	[BUG]  [BUGGY]  if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  >>  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  >>  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  >>  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol  i	65	None
264	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol  i	65	None
272	[BUG]  [BUGGY]  index[i]  =  c.toString();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.toString();  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.toString();	  index[i]    =    c;    	non-compiled	[CE]  incompatible  types	11	None
273	[BUG]  [BUGGY]  index[i]  =  c.intValue;  [CE]  cannot  find  symbol  intValue  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.intValue;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.intValue;	  index[i]    =    c;    	non-compiled	[CE]  cannot  find  symbol  intValue	11	None
282	[BUG]  [BUGGY]  setSmallIndex(matric.getRowDimension()  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getRowDimension()  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getRowDimension()  +  1);	      setSmallIndex(matric.getColumnDimension()    +    1);    	non-compiled	[CE]  ';'  expected	575	None
283	[BUG]  [BUGGY]  setSmallIndex(matric.getLength()  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getLength()  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getLength()  +  1);	      setSmallIndex(matric.getColumnDimension()    +    1);    	non-compiled	[CE]  ';'  expected	575	None
292	[BUG]  [BUGGY]  int  rank  =  root.getRangeCount();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  root.getRangeCount();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  root.getRangeCount();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
293	[BUG]  [BUGGY]  int  ranking  =  matrix.getRangeCount();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  ranking  =  matrix.getRangeCount();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  ranking  =  matrix.getRangeCount();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
294	[BUG]  [BUGGY]  int  rank  =  index.getRangeCount();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  index.getRangeCount();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  index.getRangeCount();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
301	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  accuracy  *  size));  [CE]  ')'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  accuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  accuracy  *  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  ')'  expected	212	None
302	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  *  size));  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  *  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  cannot  find  symbol  inverse	212	None
303	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  %  size));  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  %  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  %  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  cannot  find  symbol  inverse	212	None
304	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  -  size));  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  -  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  -  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  cannot  find  symbol  inverse	212	None
311	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  index,  swap,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  index,  swap,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  index,  swap,  index);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
313	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  index);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
314	[BUG]  [BUGGY]  System.arraycopy(small,  0,  b,  0,  index,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(small,  0,  b,  0,  index,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(small,  0,  b,  0,  index,  swap);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
322	[BUG]  [BUGGY]  final  double[][]  c  =  small.getSize();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  small.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  small.getSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  double  cannot  be  dereferenced	131	None
323	[BUG]  [BUGGY]  final  double[][]  c  =  root.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  root.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  root.getSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	131	None
324	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.size();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.size();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.size();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	131	None
331	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  swap.length;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
333	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
341	[BUG]  [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	515	None
342	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	515	None
344	[BUG]  [BUGGY]  if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	515	None
352	[BUG]  [BUGGY]  index[0]  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[0]  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[0]  =  matrix.getSize();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol	123	None
353	[BUG]  [BUGGY]  index[index]  =  matrix.getSize();  [CE]  incompatible  types  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[index]  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[index]  =  matrix.getSize();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  incompatible  types	123	None
354	[BUG]  [BUGGY]  index[order]  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[order]  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[order]  =  matrix.getSize();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol	123	None
362	[BUG]  [BUGGY]  final  double  order  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  double  order  =  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  double  order  =  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
363	[BUG]  [BUGGY]  final  char  order  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  char  order  =  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  char  order  =  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
364	[BUG]  [BUGGY]  final  float  order  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  float  order  =  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  float  order  =  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
382	[BUG]  [BUGGY]  final  double  rank  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double  rank  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double  rank  =  matrix.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	223	None
383	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  ranking  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  ranking  =  matrix.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	223	None
391	[BUG]  [BUGGY]  c[i][0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  c[i][0]  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	c[i][0]  =  matrix.getSlopeDimension();	      	non-compiled	[CE]  cannot  find  symbol  i	45	None
392	[BUG]  [BUGGY]  c[order][0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  c[order][0]  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	c[order][0]  =  matrix.getSlopeDimension();	      	non-compiled	[CE]  cannot  find  symbol	45	None
393	[BUG]  [BUGGY]  c[index][0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  index  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  c[index][0]  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	c[index][0]  =  matrix.getSlopeDimension();	      	non-compiled	[CE]  cannot  find  symbol  index	45	None
394	[BUG]  [BUGGY]  c[0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  c[0]  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	c[0]  =  matrix.getSlopeDimension();	      	non-compiled	[CE]  cannot  find  symbol	45	None
403	[BUG]  [BUGGY]  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(!loop)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  throw    new    NonPositiveDefiniteMatrixException(   "   ");    	non-compiled	[CE]  ';'  expected	54	None
404	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "' ");  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "' ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException( "' ");	  throw    new    NonPositiveDefiniteMatrixException(   "   ");    	non-compiled	[CE]  ';'  expected	54	None
413	[BUG]  [BUGGY]  if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
414	[BUG]  [BUGGY]  if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
421	[BUG]  [BUGGY]  int[]  index  =  matrix.getIntValue();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  matrix.getIntValue();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  matrix.getIntValue();	      	non-compiled	[CE]  cannot  find  symbol	35	None
422	[BUG]  [BUGGY]  int[]  index  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  matrix.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  matrix.getSize();	      	non-compiled	[CE]  cannot  find  symbol	35	None
423	[BUG]  [BUGGY]  int[]  index  =  matrix.getIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  matrix.getIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  matrix.getIndex();	      	non-compiled	[CE]  cannot  find  symbol	35	None
424	[BUG]  [BUGGY]  int[]  index  =  matrix.getInt();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  matrix.getInt();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  matrix.getInt();	      	non-compiled	[CE]  cannot  find  symbol	35	None
431	[BUG]  [BUGGY]  b[i]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[i]  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[i]  =  matrix.getSlopeDimension();	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
432	[BUG]  [BUGGY]  c[i]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  c[i]  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	c[i]  =  matrix.getSlopeDimension();	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
433	[BUG]  [BUGGY]  b[i],  i  =  matrix.getSlopeDimension();  [CE]  not  a  statement  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[i],  i  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[i],  i  =  matrix.getSlopeDimension();	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  not  a  statement	143	None
434	[BUG]  [BUGGY]  matrix[i]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  matrix[i]  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	matrix[i]  =  matrix.getSlopeDimension();	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
451	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
452	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
453	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
454	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ordered;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  ordered;  ++i)  {  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	for(int  i  =  0;  i  <  ordered;  ++i)  {	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
462	[BUG]  [BUGGY]  int[]  r  =  root.getSmallIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  root.getSmallIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  root.getSmallIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
463	[BUG]  [BUGGY]  int[]  r  =  small.getSmallIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  small.getSmallIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  small.getSmallIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
464	[BUG]  [BUGGY]  int[]  r  =  index.getSmallIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  index.getSmallIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  index.getSmallIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
473	[BUG]  [BUGGY]  if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  toured  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  toured  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  toured	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
474	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	62	None
483	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {	  for(int    i    =    0;    i    <    indent;    ++i)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	34	None
492	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getEntry(small,  order);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getEntry(small,  order);  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getEntry(small,  order);	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	134	None
493	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getEntry(series,  order);  [CE]  cannot  find  symbol  series  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getEntry(series,  order);  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getEntry(series,  order);	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  cannot  find  symbol  series	134	None
494	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getEntry(entry,  size);  [CE]  cannot  find  symbol  entry  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getEntry(entry,  size);  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getEntry(entry,  size);	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  cannot  find  symbol  entry	134	None
502	[BUG]  [BUGGY]  final  double  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double  order  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	222	None
503	[BUG]  [BUGGY]  final  char  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  char  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  char  order  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	222	None
504	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  b  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  ordered  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  ordered  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  b	222	None
512	[BUG]  [BUGGY]  int[]  r  =  root.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  root.getRowDimension();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  root.getRowDimension();	      int[]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	181	None
513	[BUG]  [BUGGY]  int[]  r  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getColumnDimension();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getColumnDimension();	      int[]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	181	None
514	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension(),  swap;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension(),  swap;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension(),  swap;	      int[]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	181	None
522	[BUG]  [BUGGY]  if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  >>  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  >>  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[swap[i]])  {  for(int  i  =  0;  i  >>  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	61	None
523	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i]])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	61	None
531	[BUG]  [BUGGY]  double  r  =  0L;  [CE]  possible  loss  of  precision  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  double  r  =  0L;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	double  r  =  0L;	  int    r    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	342	None
532	[BUG]  [BUGGY]  float  r  =  0L;  [CE]  possible  loss  of  precision  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  float  r  =  0L;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	float  r  =  0L;	  int    r    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	342	None
533	[BUG]  [BUGGY]  long  r  =  0L;  [CE]  possible  loss  of  precision  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  long  r  =  0L;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	long  r  =  0L;	  int    r    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	342	None
542	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException ";  [CE]  unclosed  string  literal  [CONTEXT]      [BUGGY]  throws  NonPositiveDefiniteMatrixException ";  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throws  NonPositiveDefiniteMatrixException ";	  throws    NonPositiveDefiniteMatrixException       "   ";    	non-compiled	[CE]  unclosed  string  literal	53	None
551	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  [Delete]  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	[Delete]	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	175	None
554	[BUG]  [BUGGY]  if(matrix!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  order  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  if(matrix!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	if(matrix!=  null)  {  throw  new  IllegalStateException( " ");  }	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  order	175	None
562	[BUG]  [BUGGY]  c  =  matrix.getSize();  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  c  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	c  =  matrix.getSize();	      b    =    matrix.getSize();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	94	None
563	[BUG]  [BUGGY]  swap  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  swap  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	swap  =  matrix.getSize();	      b    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	94	None
564	[BUG]  [BUGGY]  i  =  matrix.getSize();  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  i  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	i  =  matrix.getSize();	      b    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  i	94	None
572	[BUG]  [BUGGY]  int[]  r  =  root.getRangeDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  root.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  root.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
573	[BUG]  [BUGGY]  int[]  r  =  small.getRangeDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  small.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  small.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
574	[BUG]  [BUGGY]  int[]  r  =  scale.getRangeDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  scale.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  scale.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
582	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getData();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[][]  c  =  matrix.getData();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[][]  c  =  matrix.getData();	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
583	[BUG]  [BUGGY]  final  double[][]  r  =  matrix.getSmallDecomposition();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[][]  r  =  matrix.getSmallDecomposition();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[][]  r  =  matrix.getSmallDecomposition();	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
591	[BUG]  [BUGGY]  Sort(c,  b);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  Sort(c,  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	Sort(c,  b);	      Arrays.sort(c,    b);    	non-compiled	[CE]  cannot  find  symbol	485	None
593	[BUG]  [BUGGY]  System.arraycopy(c,  b);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  System.arraycopy(c,  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	System.arraycopy(c,  b);	      Arrays.sort(c,    b);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	485	None
594	[BUG]  [BUGGY]  SortedArrays.sort(c,  b);  [CE]  cannot  find  symbol  SortedArrays  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  SortedArrays.sort(c,  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	SortedArrays.sort(c,  b);	      Arrays.sort(c,    b);    	non-compiled	[CE]  cannot  find  symbol  SortedArrays	485	None
602	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  ranking  =  matrix.getLowerBound();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  ranking  =  matrix.getLowerBound();	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	321	None
603	[BUG]  [BUGGY]  final  char  rank  =  matrix.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  char  rank  =  matrix.getLowerBound();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  char  rank  =  matrix.getLowerBound();	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	321	None
604	[BUG]  [BUGGY]  final  int  rank  =  root.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  rank  =  root.getLowerBound();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  rank  =  root.getLowerBound();	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	321	None
611	[BUG]  [BUGGY]  int  r  =  i;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  i;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  i;	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
612	[BUG]  [BUGGY]  int  r  =  0;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  0;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  0;	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
613	[BUG]  [BUGGY]  int  r  =  index;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  index;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  index;	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
614	[BUG]  [BUGGY]  int  r  =  b.length;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  b.length;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  b.length;	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
622	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(matrix,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(matrix,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(matrix,  false);	      Matrix    matrix    =    MatrixUtils.createMatrix(small,    false);    	non-compiled	[CE]  cannot  find  symbol	324	None
623	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(size,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(size,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(size,  false);	      Matrix    matrix    =    MatrixUtils.createMatrix(small,    false);    	non-compiled	[CE]  cannot  find  symbol	324	None
624	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(micro,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(micro,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(micro,  false);	      Matrix    matrix    =    MatrixUtils.createMatrix(small,    false);    	non-compiled	[CE]  cannot  find  symbol	324	None
632	[BUG]  [BUGGY]  int[][]  r  =  root.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  root.getSmallIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  root.getSmallIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	144	None
633	[BUG]  [BUGGY]  int[][]  r  =  small.getSmallIndex();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  small.getSmallIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  small.getSmallIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  double  cannot  be  dereferenced	144	None
634	[BUG]  [BUGGY]  int[][]  r  =  index.getSmallIndex();  [CE]  cannot  find  symbol  index  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  index.getSmallIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  index.getSmallIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol  index	144	None
641	[BUG]  [BUGGY]  final  double[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  r  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  r  =  matrix.getRowDimension();	      final    int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	221	None
643	[BUG]  [BUGGY]  final  char[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  char[][]  r  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  char[][]  r  =  matrix.getRowDimension();	      final    int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	221	None
644	[BUG]  [BUGGY]  final  long[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  long[][]  r  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  long[][]  r  =  matrix.getRowDimension();	      final    int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	221	None
651	[BUG]  [BUGGY]  if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
652	[BUG]  [BUGGY]  if(c  ==  i)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c  ==  i)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c  ==  i)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
653	[BUG]  [BUGGY]  if(index[i]!=  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(index[i]!=  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(index[i]!=  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
654	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(index[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(index[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
661	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(data[i],  i);  [CE]  cannot  find  symbol  data  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(data[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(data[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  data	163	None
662	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(swap[i],  i);  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(swap[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(swap[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  incompatible  types	163	None
663	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(small[i],  i);  [CE]  array  required,  but  double  found  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(small[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(small[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  array  required,  but  double  found	163	None
664	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(x[i],  i);  [CE]  cannot  find  symbol  x  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(x[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(x[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  x	163	None
672	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  double);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  double);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  double);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
673	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  0);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  0);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  0);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
674	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small)+  1;  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small)+  1;  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  small)+  1;	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
681	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
682	[BUG]  [BUGGY]  int  i  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  i  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  i  =  matrix.getSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
683	[BUG]  [BUGGY]  int  ii  =  size.getSlopeDimension();  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  size.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  size.getSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol  size	141	None
684	[BUG]  [BUGGY]  int  ii  =  small.getSlopeDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  small.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  small.getSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	141	None
692	[BUG]  [BUGGY]  int[]  swap  =  new  double[order],  c;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  double[order],  c;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  double[order],  c;	  int[]    swap    =    new    double[order];    	non-compiled	[CE]  incompatible  types	113	None
693	[BUG]  [BUGGY]  int[]  swap  =  new  double[order],  b;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  double[order],  b;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  double[order],  b;	  int[]    swap    =    new    double[order];    	non-compiled	[CE]  incompatible  types	113	None
694	[BUG]  [BUGGY]  int[]  swap  =  new  double[order],  b.length;  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  double[order],  b.length;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  double[order],  b.length;	  int[]    swap    =    new    double[order];    	non-compiled	[CE]  ';'  expected	113	None
702	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  >  0;)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop  >  0;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop  >  0;)  {	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	183	None
703	[BUG]  [BUGGY]  for(int  loop  =  false;  loop  >  0;)  {  [CE]  incompatible  types  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  loop  =  false;  loop  >  0;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  loop  =  false;  loop  >  0;)  {	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  incompatible  types	183	None
704	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  >=  0;)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  >=  0;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  >=  0;)  {	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	183	None
712	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ranking  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ranking  =  matrix.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	25	None
721	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  r  =  matrix.getRowDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  r  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  r  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	73	None
722	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  rank  =  matrix.getRowDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  rank  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  rank  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	73	None
723	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  order  =  matrix.getColumnDimension();	  	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	73	None
724	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  rank  =  matrix.getLength();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  rank  =  matrix.getLength();	  	non-compiled	[CE]  cannot  find  symbol	73	None
725	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  rank  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  rank  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  rank  =  matrix.getSize();	  	non-compiled	[CE]  cannot  find  symbol	73	None
732	[BUG]  [BUGGY]  b  =  matrix.getSize();  [CE]  cannot  assign  a  value  to  final  variable  b  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b  =  matrix.getSize();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  b	142	None
733	[BUG]  [BUGGY]  if(c  >  0)  {  c  =  matrix.getSize();  }  else  {  b[order]  =  c;  b[order]  =  b;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c  >  0)  {  c  =  matrix.getSize();  }  else  {  b[order]  =  c;  b[order]  =  b;  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c  >  0)  {  c  =  matrix.getSize();  }  else  {  b[order]  =  c;  b[order]  =  b;  }	      c    =    matrix.getSize();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	142	None
734	[BUG]  [BUGGY]  if(c  >  0)  {  c  =  matrix.getSize();  }  else  {  b  =  c;  b  =  b;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c  >  0)  {  c  =  matrix.getSize();  }  else  {  b  =  c;  b  =  b;  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c  >  0)  {  c  =  matrix.getSize();  }  else  {  b  =  c;  b  =  b;  }	      c    =    matrix.getSize();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	142	None
741	[BUG]  [BUGGY]  int  ii  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSize();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	142	None
742	[BUG]  [BUGGY]  int  i  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  i  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  i  =  matrix.getSize();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	142	None
743	[BUG]  [BUGGY]  int  ii  =  matrix.getItemCount();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getItemCount();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getItemCount();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	142	None
744	[BUG]  [BUGGY]  int  ii  =  matrix.size();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.size();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.size();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	142	None
752	[BUG]  [BUGGY]  int  rank  =  index.getSize();  [CE]  cannot  find  symbol  index  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  index.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  index.getSize();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol  index	41	None
753	[BUG]  [BUGGY]  int  rank  =  root.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  root.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  root.getSize();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol	41	None
754	[BUG]  [BUGGY]  int  rank  =  small.getSize();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  small.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  small.getSize();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  double  cannot  be  dereferenced	41	None
761	[BUG]  [BUGGY]  int[]  swap  =  new  int[order  +  1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[order  +  1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[order  +  1];	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
762	[BUG]  [BUGGY]  int[]  swap  =  new  int[order  /  1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[order  /  1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[order  /  1];	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
763	[BUG]  [BUGGY]  int[]  swap  =  new  int[order  +  2];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[order  +  2];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[order  +  2];	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
764	[BUG]  [BUGGY]  int[]  swap  =  new  int[order  +  1]  /  2;  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[order  +  1]  /  2;  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[order  +  1]  /  2;	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
772	[BUG]  [BUGGY]  int  order  =  matrix.getSize()  -  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getSize()  -  1;  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getSize()  -  1;	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
773	[BUG]  [BUGGY]  int  order  =  matrix.getDecompositionIndex();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getDecompositionIndex();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getDecompositionIndex();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
774	[BUG]  [BUGGY]  int  order  =  matrix.getSize(),  i;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getSize(),  i;  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getSize(),  i;	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
781	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException ");  [CE]  unclosed  string  literal  [CONTEXT]      [BUGGY]  throws  NonPositiveDefiniteMatrixException ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throws  NonPositiveDefiniteMatrixException ");	  throws    NonPositiveDefiniteMatrixException       "   ");    	non-compiled	[CE]  unclosed  string  literal	51	None
782	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException ");  [CE]  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException ");	  throws    NonPositiveDefiniteMatrixException       "   ");    	non-compiled	[CE]  	51	None
792	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[order][c],  small;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[order][c],  small;  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[order][c],  small;	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  incompatible  types	41	None
793	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[order][c],  int[order];  [CE]  <identifier>  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[order][c],  int[order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[order][c],  int[order];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  <identifier>  expected	41	None
794	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[order][c],  small);  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[order][c],  small);  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[order][c],  small);	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  ';'  expected	41	None
802	[BUG]  [BUGGY]  final  double  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double  rank  =  matrix.getLength();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double  rank  =  matrix.getLength();	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	365	None
803	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  ranking  =  matrix.getLength();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  ranking  =  matrix.getLength();	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	365	None
804	[BUG]  [BUGGY]  final  int  order  =  matrix.getLength();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  order  =  matrix.getLength();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  order  =  matrix.getLength();	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	365	None
812	[BUG]  [BUGGY]  final  double[][]  c  =  small.getSlopeDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  small.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  small.getSlopeDimension();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	363	None
813	[BUG]  [BUGGY]  final  double[][]  c  =  root.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  root.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  root.getSlopeDimension();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
814	[BUG]  [BUGGY]  final  double[][]  c  =  smaller.getSlopeDimension();  [CE]  cannot  find  symbol  smaller  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  smaller.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  smaller.getSlopeDimension();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol  smaller	363	None
822	[BUG]  [BUGGY]  b  =  matrix.getShape();  [CE]  cannot  assign  a  value  to  final  variable  b  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b  =  matrix.getShape();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b  =  matrix.getShape();	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  b	125	None
823	[BUG]  [BUGGY]  i  =  matrix.getShape();  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  i  =  matrix.getShape();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	i  =  matrix.getShape();	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	125	None
824	[BUG]  [BUGGY]  index  =  matrix.getShape();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index  =  matrix.getShape();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index  =  matrix.getShape();	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol	125	None
832	[BUG]  [BUGGY]  if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None
833	[BUG]  [BUGGY]  if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None
834	[BUG]  [BUGGY]  if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None
842	[BUG]  [BUGGY]  index[][]  e  =  root.getData();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  root.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  root.getData();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
843	[BUG]  [BUGGY]  index[][]  e  =  small.getData();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  small.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  small.getData();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
844	[BUG]  [BUGGY]  index[][]  r  =  matrix.getData();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  r  =  matrix.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  r  =  matrix.getData();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
852	[BUG]  [BUGGY]  Matrix.fill(matrix,  small);  [CE]  cannot  find  symbol  Matrix  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix.fill(matrix,  small);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix.fill(matrix,  small);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  Matrix	215	None
853	[BUG]  [BUGGY]  Lists.fill(matrix,  matrix);  [CE]  cannot  find  symbol  Lists  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Lists.fill(matrix,  matrix);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Lists.fill(matrix,  matrix);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  Lists	215	None
854	[BUG]  [BUGGY]  System.arraycopy(matrix,  matrix);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  System.arraycopy(matrix,  matrix);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	System.arraycopy(matrix,  matrix);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	215	None
862	[BUG]  [BUGGY]  int[]  r  =  small.getSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  small.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  small.getSize();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
863	[BUG]  [BUGGY]  int[]  r  =  root.getSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  root.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  root.getSize();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
864	[BUG]  [BUGGY]  int[]  r  =  matrix.size();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.size();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.size();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
872	[BUG]  [BUGGY]  index[i]  =  b.int;  [CE]  <identifier>  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  b.int;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  b.int;	  index[i]    =    b;    	non-compiled	[CE]  <identifier>  expected	12	None
873	[BUG]  [BUGGY]  index[i]  =  b.intValue;  [CE]  cannot  find  symbol  intValue  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  b.intValue;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  b.intValue;	  index[i]    =    b;    	non-compiled	[CE]  cannot  find  symbol  intValue	12	None
874	[BUG]  [BUGGY]  index[i]  =  b.doubleValue;  [CE]  cannot  find  symbol  doubleValue  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  b.doubleValue;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  b.doubleValue;	  index[i]    =    b;    	non-compiled	[CE]  cannot  find  symbol  doubleValue	12	None
881	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSmallDimension();    }    	non-compiled	[CE]  illegal  start  of  expression	514	None
882	[BUG]  [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSmallDimension();    }    	non-compiled	[CE]  illegal  start  of  expression	514	None
884	[BUG]  [BUGGY]  if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSmallDimension();    }    	non-compiled	[CE]  illegal  start  of  expression	514	None
892	[BUG]  [BUGGY]  int[]  r  =  new  int[16];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  new  int[16];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  new  int[16];	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
893	[BUG]  [BUGGY]  int[]  index  =  matrix.getSize();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  matrix.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  matrix.getSize();	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
894	[BUG]  [BUGGY]  int[]  r  =  matrix.getSmallIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getSmallIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getSmallIndex();	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
901	[BUG]  [BUGGY]  double  order  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  double  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	double  order  =  matrix.getSize();	      	non-compiled	[CE]  cannot  find  symbol	75	None
902	[BUG]  [BUGGY]  double  order  =  matrix.getDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  double  order  =  matrix.getDecomposition();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	double  order  =  matrix.getDecomposition();	      	non-compiled	[CE]  cannot  find  symbol	75	None
903	[BUG]  [BUGGY]  double  order  =  matrix.getInt();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  double  order  =  matrix.getInt();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	double  order  =  matrix.getInt();	      	non-compiled	[CE]  cannot  find  symbol	75	None
904	[BUG]  [BUGGY]  int  order  =  matrix.getInt();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  order  =  matrix.getInt();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  order  =  matrix.getInt();	      	non-compiled	[CE]  cannot  find  symbol	75	None
914	[BUG]  [BUGGY]  if(matrix!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  order  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  if(matrix!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	if(matrix!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(matrix    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  order	173	None
921	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getRowDimension();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  int[]  r  =  matrix.getRowDimension();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  int[]  r  =  matrix.getRowDimension();	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
922	[BUG]  [BUGGY]  final  double[]  r  =  matrix.getRowDimension();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  double[]  r  =  matrix.getRowDimension();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  double[]  r  =  matrix.getRowDimension();	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
923	[BUG]  [BUGGY]  final  char[]  r  =  matrix.getRowDimension();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  char[]  r  =  matrix.getRowDimension();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  char[]  r  =  matrix.getRowDimension();	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
924	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getColumnDimension();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  int[]  r  =  matrix.getColumnDimension();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  int[]  r  =  matrix.getColumnDimension();	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
932	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[296][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	add	final  double[][]  b  =  new  double[296][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
933	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[296][order];  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[296][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[296][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
933	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[284][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	add	final  double[][]  b  =  new  double[284][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
934	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[284][order];  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[284][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[284][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
934	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[128][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	add	final  double[][]  b  =  new  double[128][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
935	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[128][order];  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[128][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[128][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
944	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ordered;  ++i)  {  [CE]  cannot  find  symbol  ordered  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  ordered;  ++i)  {  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	for(int  i  =  0;  i  <  ordered;  ++i)  {	  for(int    i    =    0;    i    <    size;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  ordered	81	None
951	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
952	[BUG]  [BUGGY]  final  double[][]  c  =  small.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  small.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  small.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
953	[BUG]  [BUGGY]  final  double[][]  c  =  root.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  root.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  root.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
954	[BUG]  [BUGGY]  final  double[][]  c  =  smaller.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  smaller.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  smaller.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
962	[BUG]  [BUGGY]  System.arraycopy(small,  0,  b,  0,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(small,  0,  b,  0,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(small,  0,  b,  0,  swap);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  type	82	None
971	[BUG]  [BUGGY]  setSmallIndex(matrix.getSize());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getSize());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getSize());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
972	[BUG]  [BUGGY]  setSmallIndex(matrix.getSmallIndex());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getSmallIndex());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getSmallIndex());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
973	[BUG]  [BUGGY]  setSmallIndex(matrix.getShortColumnDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getShortColumnDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getShortColumnDimension());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
974	[BUG]  [BUGGY]  setSmallIndex(matrix.getSingleColumnDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getSingleColumnDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getSingleColumnDimension());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
981	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  new  int[order  +  1];  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  new  int[order  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  r  =  new  int[order  +  1];	  	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	204	None
982	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  r  =  matrix.getSize();	  	non-compiled	[CE]  cannot  find  symbol	204	None
983	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getSmallIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  r  =  matrix.getSmallIndex();	  	non-compiled	[CE]  cannot  find  symbol	204	None
984	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getRawMultiPhase();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getRawMultiPhase();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  r  =  matrix.getRawMultiPhase();	  	non-compiled	[CE]  cannot  find  symbol	204	None
985	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getSmallIndex(order);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  r  =  matrix.getSmallIndex(order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  r  =  matrix.getSmallIndex(order);	  	non-compiled	[CE]  cannot  find  symbol	204	None
992	[BUG]  [BUGGY]  int  r  =(index  >=  0)?  0  :  index.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '>='  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(index  >=  0)?  0  :  index.doubleValue();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(index  >=  0)?  0  :  index.doubleValue();	  int    r    =(index    <    0)?    0    :    index.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	193	None
993	[BUG]  [BUGGY]  int  r  =(index  ==  0)?  0  :  index.doubleValue();  [CE]  incomparable  types:  int[]  and  int  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(index  ==  0)?  0  :  index.doubleValue();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(index  ==  0)?  0  :  index.doubleValue();	  int    r    =(index    <    0)?    0    :    index.doubleValue();    	non-compiled	[CE]  incomparable  types:  int[]  and  int	193	None
994	[BUG]  [BUGGY]  int  r  =(index!=  0)?  0  :  index.doubleValue();  [CE]  incomparable  types:  int[]  and  int  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(index!=  0)?  0  :  index.doubleValue();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(index!=  0)?  0  :  index.doubleValue();	  int    r    =(index    <    0)?    0    :    index.doubleValue();    	non-compiled	[CE]  incomparable  types:  int[]  and  int	193	None
1001	[BUG]  [BUGGY]  int[]  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  order  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
1002	[BUG]  [BUGGY]  int[]  ordered  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	21	None
1003	[BUG]  [BUGGY]  int[]  order  =  matrix.getSize(),  c;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  order  =  matrix.getSize(),  c;  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  order  =  matrix.getSize(),  c;	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
1004	[BUG]  [BUGGY]  int[]  order  =  matrix.getDecomposition();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  order  =  matrix.getDecomposition();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  order  =  matrix.getDecomposition();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
1012	[BUG]  [BUGGY]  final  char  order  =  matrix.getSmallIndex();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  order  =  matrix.getSmallIndex();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  order  =  matrix.getSmallIndex();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None
1013	[BUG]  [BUGGY]  final  double  order  =  matrix.getSmallIndex();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double  order  =  matrix.getSmallIndex();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double  order  =  matrix.getSmallIndex();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None
1014	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ordered  =  matrix.getSmallIndex();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ordered  =  matrix.getSmallIndex();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	24	None
1022	[BUG]  [BUGGY]  final  char  order  =  matrix.getSmallDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  order  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None
1023	[BUG]  [BUGGY]  final  double  order  =  matrix.getSmallDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double  order  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None
1024	[BUG]  [BUGGY]  final  float  order  =  matrix.getSmallDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  float  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  float  order  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None
1032	[BUG]  [BUGGY]  final  char  order  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  char  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  char  order  =  matrix.getSize();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
1033	[BUG]  [BUGGY]  final  double  order  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  double  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  double  order  =  matrix.getSize();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
1034	[BUG]  [BUGGY]  final  float  order  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  float  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  float  order  =  matrix.getSize();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
1052	[BUG]  [BUGGY]  b  =  matrix.getSlope();  [CE]  cannot  assign  a  value  to  final  variable  b  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b  =  matrix.getSlope();	      c    =    matrix.getSlope();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  b	44	None
1053	[BUG]  [BUGGY]  i  =  matrix.getSlope();  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  i  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	i  =  matrix.getSlope();	      c    =    matrix.getSlope();    	non-compiled	[CE]  cannot  find  symbol  i	44	None
1054	[BUG]  [BUGGY]  if(c  >  i)  {  c  =  matrix.getSlope();  }  else  {  b[i]  =  c;  b[i]  =  b;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  >  i)  {  c  =  matrix.getSlope();  }  else  {  b[i]  =  c;  b[i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  >  i)  {  c  =  matrix.getSlope();  }  else  {  b[i]  =  c;  b[i]  =  b;  }	      c    =    matrix.getSlope();    	non-compiled	[CE]  cannot  find  symbol  i	44	None
1062	[BUG]  [BUGGY]  if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]!=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1063	[BUG]  [BUGGY]  if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  ==  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1064	[BUG]  [BUGGY]  if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1073	[BUG]  [BUGGY]  setSmallIndex(matrix.getSmallDecomposition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getSmallDecomposition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getSmallDecomposition());	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
1074	[BUG]  [BUGGY]  setSmallIndex(matrix.getSmallIndex()  -  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getSmallIndex()  -  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getSmallIndex()  -  1);	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
1082	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getLowDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ranking  =  matrix.getLowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ranking  =  matrix.getLowDimension();	      final    int    rank    =    matrix.getLowDimension();    	non-compiled	[CE]  cannot  find  symbol	545	None
1083	[BUG]  [BUGGY]  final  int  order  =  matrix.getLowDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getLowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getLowDimension();	      final    int    rank    =    matrix.getLowDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	545	None
1084	[BUG]  [BUGGY]  final  char  rank  =  matrix.getLowDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  rank  =  matrix.getLowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  rank  =  matrix.getLowDimension();	      final    int    rank    =    matrix.getLowDimension();    	non-compiled	[CE]  cannot  find  symbol	545	None
1093	[BUG]  [BUGGY]  if(switch!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(switch!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(switch!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b.doubleValue();  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	274	None
1094	[BUG]  [BUGGY]  if(switch  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(switch  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(switch  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b.doubleValue();  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	274	None
1102	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  r  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  r  =  matrix.getSmallDimension();	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	152	None
1103	[BUG]  [BUGGY]  final  int[][]  ordered  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordered  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordered  =  matrix.getSmallDimension();	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	152	None
1104	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getSmallDimension();  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  c  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  c  =  matrix.getSmallDimension();	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	152	None
1111	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
1114	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  && ",Invalid  row  or  column  index  selection ";  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  && ",Invalid  row  or  column  index  selection ";  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  && ",Invalid  row  or  column  index  selection ";	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
1121	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(matrix  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	add	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(matrix  ==  null)  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  AssertionError  testMath789	174	2
1122	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(matrix  ==  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(matrix  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(matrix  ==  null)  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  AssertionError  testMath789	174	2
1122	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Matrix)this.root.getDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Matrix)this.root.getDecomposition();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =(Matrix)this.root.getDecomposition();	  	non-compiled	[CE]  cannot  find  symbol	174	None
1123	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  new  RealMatrix(small,  null);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  new  RealMatrix(small,  null);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  new  RealMatrix(small,  null);	  	non-compiled	[CE]  cannot  find  symbol	174	None
1124	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  new  RealMatrix(small,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  new  RealMatrix(small,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  new  RealMatrix(small,  false);	  	non-compiled	[CE]  cannot  find  symbol	174	None
1131	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[order];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[order];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[order];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1132	[BUG]  [BUGGY]  final  double[]  swap  =  new  double[order];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[]  swap  =  new  double[order];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[]  swap  =  new  double[order];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1133	[BUG]  [BUGGY]  final  double[]  swap  =  new  int[order];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[]  swap  =  new  int[order];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[]  swap  =  new  int[order];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1134	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[order],  b;  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[order],  b;  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[order],  b;	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1142	[BUG]  [BUGGY]  int[]  ordered  =  b.getSize();  [CE]  cannot  find  symbol  b  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  b.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  b.getSize();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol  b	24	None
1143	[BUG]  [BUGGY]  int[]  ordered  =  small.getSize();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  small.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  small.getSize();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None
1144	[BUG]  [BUGGY]  int[]  ordered  =  root.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  root.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  root.getSize();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	24	None
1152	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ranking  =  matrix.getLength();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ranking  =  matrix.getLength();	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	543	None
1153	[BUG]  [BUGGY]  final  int  rank  =  matrix.getLength()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  rank  =  matrix.getLength()  -  1;  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  rank  =  matrix.getLength()  -  1;	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	543	None
1154	[BUG]  [BUGGY]  final  char  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  rank  =  matrix.getLength();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  rank  =  matrix.getLength();	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	543	None
1162	[BUG]  [BUGGY]  final  double[][]  r  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  r  =  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  r  =  matrix.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	224	None
1163	[BUG]  [BUGGY]  final  int[][]  r  =  root.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  r  =  root.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  r  =  root.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	224	None
1164	[BUG]  [BUGGY]  final  float[][]  r  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  float[][]  r  =  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  float[][]  r  =  matrix.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	224	None
1171	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
1172	[BUG]  [BUGGY]  final  double[][]  c  =  root.getSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  root.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  root.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
1173	[BUG]  [BUGGY]  final  double[][]  c  =  small.getSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  small.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  small.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
1174	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.toSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.toSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.toSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
1182	[BUG]  [BUGGY]  b[0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b[0]  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b[0]  =  matrix.getSlopeDimension();	      b[i]    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	42	None
1183	[BUG]  [BUGGY]  b[swap]  =  matrix.getSlopeDimension();  [CE]  incompatible  types  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b[swap]  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b[swap]  =  matrix.getSlopeDimension();	      b[i]    =    matrix.getSlopeDimension();    	non-compiled	[CE]  incompatible  types	42	None
1184	[BUG]  [BUGGY]  b[index]  =  matrix.getSlopeDimension();  [CE]  incompatible  types  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b[index]  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b[index]  =  matrix.getSlopeDimension();	      b[i]    =    matrix.getSlopeDimension();    	non-compiled	[CE]  incompatible  types	42	None
1192	[BUG]  [BUGGY]  final  double  order  =  matrix.getSmallDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double  order  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	151	None
1193	[BUG]  [BUGGY]  final  char  order  =  matrix.getSmallDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  char  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  char  order  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	151	None
1194	[BUG]  [BUGGY]  final  float  order  =  matrix.getSmallDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  float  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  float  order  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	151	None
1201	[BUG]  [BUGGY]  super();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  super();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	super();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
1202	[BUG]  [BUGGY]  recalculate();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  recalculate();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	recalculate();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
1203	[BUG]  [BUGGY]  checkSmallDecomposition();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  checkSmallDecomposition();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	checkSmallDecomposition();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
1204	[BUG]  [BUGGY]  checkSmallVariants();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  checkSmallVariants();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	checkSmallVariants();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
1212	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  large);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  large);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  large);	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1213	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  double);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  double);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  double);	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1214	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  size);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  size);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  size);	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
1221	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop[])  {  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop[])  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop[])  {	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  '.class'  expected	153	None
1222	[BUG]  [BUGGY]  for(int  loop  =  false;  loop[])  {  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(int  loop  =  false;  loop[])  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(int  loop  =  false;  loop[])  {	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  '.class'  expected	153	None
1223	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop[])  {  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop[])  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop[])  {	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  '.class'  expected	153	None
1232	[BUG]  [BUGGY]  index[0]  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[0]  =  matrix.getSmallIndex();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[0]  =  matrix.getSmallIndex();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol	121	None
1233	[BUG]  [BUGGY]  index[index]  =  matrix.getSmallIndex();  [CE]  incompatible  types  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[index]  =  matrix.getSmallIndex();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[index]  =  matrix.getSmallIndex();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  incompatible  types	121	None
1234	[BUG]  [BUGGY]  index[order]  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[order]  =  matrix.getSmallIndex();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[order]  =  matrix.getSmallIndex();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol	121	None
1241	[BUG]  [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  b[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  b[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  b[i]  =  c;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1242	[BUG]  [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1243	[BUG]  [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  index.length;  ++i)  {  b[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  index.length;  ++i)  {  b[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  index.length;  ++i)  {  b[i]  =  c;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1244	[BUG]  [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  index[i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  index[i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(swap[i]  >  0)  {  int  i  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  index[i]  =  b;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1252	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  -  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  -  2;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  -  2;	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	33	None
1253	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  /  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  /  1;	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	33	None
1254	[BUG]  [BUGGY]  int[]  index  =  new  int[order],  swap  -  1;  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order],  swap  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order],  swap  -  1;	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  ';'  expected	33	None
1262	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(size  *  size),  inverseAccuracy);  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(size  *  size),  inverseAccuracy);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(size  *  size),  inverseAccuracy);	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size),    absoluteAccuracy);    	non-compiled	[CE]  cannot  find  symbol  size	214	None
1263	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  accuracy  *  size),  absoluteAccuracy);  [CE]  ')'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  accuracy  *  size),  absoluteAccuracy);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  accuracy  *  size),  absoluteAccuracy);	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size),    absoluteAccuracy);    	non-compiled	[CE]  ')'  expected	214	None
1264	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverseAccuracy  *  size),  absoluteAccuracy);  [CE]  cannot  find  symbol  inverseAccuracy  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverseAccuracy  *  size),  absoluteAccuracy);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverseAccuracy  *  size),  absoluteAccuracy);	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size),    absoluteAccuracy);    	non-compiled	[CE]  cannot  find  symbol  inverseAccuracy	214	None
1272	[BUG]  [BUGGY]  r  =  root.getSlope();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  root.getSlope();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  root.getSlope();	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1273	[BUG]  [BUGGY]  r  =  matrix.getSlop();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.getSlop();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.getSlop();	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1274	[BUG]  [BUGGY]  r  =  index.getSlope();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  index.getSlope();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  index.getSlope();	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1282	[BUG]  [BUGGY]  final  double[][]  c  =  root.getComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  root.getComponentType();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  root.getComponentType();	  final    double[][]    c    =    matrix.getComponentType();    	non-compiled	[CE]  cannot  find  symbol	361	None
1283	[BUG]  [BUGGY]  final  double[][]  c  =  small.getComponentType();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  small.getComponentType();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  small.getComponentType();	  final    double[][]    c    =    matrix.getComponentType();    	non-compiled	[CE]  double  cannot  be  dereferenced	361	None
1291	[BUG]  [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  matrix[i]  =  small;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  matrix[i]  =  small;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  matrix[i]  =  small;  }	      	non-compiled	[CE]  ';'  expected	55	None
1292	[BUG]  [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  small;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  small;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  small;  }	      	non-compiled	[CE]  ';'  expected	55	None
1293	[BUG]  [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b[i];  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b[i];  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b[i];  }	      	non-compiled	[CE]  ';'  expected	55	None
1294	[BUG]  [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  small;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  small;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix.isSmallDecomposition())  {  int  order  =  matrix.getSmallDecomposition();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  small;  }	      	non-compiled	[CE]  ';'  expected	55	None
1311	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(null,  i,  swap);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(null,  i,  swap);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(null,  i,  swap);	      b[i]    =    b[i];    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	165	None
1312	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(swap,  i);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(swap,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(swap,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	165	None
1313	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(e,  i);  [CE]  cannot  find  symbol  e  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(e,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(e,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol  e	165	None
1314	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(tmp,  i,  i);  [CE]  cannot  find  symbol  tmp  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(tmp,  i,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(tmp,  i,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol  tmp	165	None
1322	[BUG]  [BUGGY]  final  char  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  order  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	284	None
1323	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ordered  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ordered  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  c	284	None
1324	[BUG]  [BUGGY]  final  double  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double  order  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	284	None
1332	[BUG]  [BUGGY]  int  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  matrix.getLength();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  matrix.getLength();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	325	None
1333	[BUG]  [BUGGY]  int  rank  =  root.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  root.getSize();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  root.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	325	None
1334	[BUG]  [BUGGY]  int  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  ranking  =  matrix.getSize();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  ranking  =  matrix.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	325	None
1341	[BUG]  [BUGGY]  int[]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int[]  r  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int[]  r  =  matrix.getSize();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	122	None
1342	[BUG]  [BUGGY]  int[]  i  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int[]  i  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int[]  i  =  matrix.getSize();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	122	None
1343	[BUG]  [BUGGY]  int[]  index  =  matrix.getSize();  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int[]  index  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int[]  index  =  matrix.getSize();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
1344	[BUG]  [BUGGY]  int[]  r  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int[]  r  =  matrix.getSmallIndex();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int[]  r  =  matrix.getSmallIndex();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	122	None
1351	[BUG]  [BUGGY]  Sort(c,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  Sort(c,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	Sort(c,  swap);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
1353	[BUG]  [BUGGY]  System.arraycopy(c,  swap,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  swap,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  swap,  index);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
1354	[BUG]  [BUGGY]  System.arraycopy(c,  b,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  b,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  b,  swap);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
1361	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  b  =  new  double[256][order];  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  b  =  new  double[256][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  b  =  new  double[256][order];	  	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	304	None
1362	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  c  =  matrix.getSize();  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  c  =  matrix.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  c  =  matrix.getSize();	  	non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	304	None
1363	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  b  =  matrix.getSize();  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  b  =  matrix.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  b  =  matrix.getSize();	  	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	304	None
1364	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  matrix.getSmallIndex();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  int[][]  r  =  matrix.getSmallIndex();	  	non-compiled	[CE]  cannot  find  symbol	304	None
1365	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  matrix.getSmallDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  matrix.getSmallDecomposition();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  r  =  matrix.getSmallDecomposition();	  	non-compiled	[CE]  cannot  find  symbol	304	None
1372	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  ranking  =  matrix.getSize();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  ranking  =  matrix.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	323	None
1373	[BUG]  [BUGGY]  final  int  rank  =  matrix.getRowSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  rank  =  matrix.getRowSize();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  rank  =  matrix.getRowSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	323	None
1374	[BUG]  [BUGGY]  final  int  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  rank  =  matrix.getLength();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  rank  =  matrix.getLength();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	323	None
1381	[BUG]  [BUGGY]  b[i]  =  c;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  c;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c;	      b[i]    =    b[i];    	non-compiled	[CE]  incompatible  types	165	None
1384	[BUG]  [BUGGY]  b[i]  =  swap;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  swap;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  swap;	      b[i]    =    b[i];    	non-compiled	[CE]  incompatible  types	165	None
1392	[BUG]  [BUGGY]  final  double  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double  order  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double  order  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	154	None
1393	[BUG]  [BUGGY]  final  char  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  char  order  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  char  order  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	154	None
1394	[BUG]  [BUGGY]  final  int  order  =  matrix.getSize()  -  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  order  =  matrix.getSize()  -  1;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  order  =  matrix.getSize()  -  1;	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	154	None
1401	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  order  =  matrix.getSize();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
1403	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getDecomposition();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  order  =  matrix.getDecomposition();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  order  =  matrix.getDecomposition();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
1404	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  r  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  r  =  matrix.getSize();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	23	None
1412	[BUG]  [BUGGY]  final  int[][]  ordered  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  ordered  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  ordered  =  matrix.getSize();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	23	None
1413	[BUG]  [BUGGY]  final  int[][]  ordering  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  ordering  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  ordering  =  matrix.getSize();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	23	None
1414	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  r  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  r  =  matrix.getSize();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	23	None
1421	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSingleNode();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.getSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.getSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
1422	[BUG]  [BUGGY]  final  double[][]  c  =  root.getSingleNode();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  root.getSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  root.getSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
1423	[BUG]  [BUGGY]  final  double[][]  c  =  small.getSingleNode();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  small.getSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  small.getSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
1424	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.toSingleNode();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.toSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.toSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
1431	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getScale();    }    	non-compiled	[CE]  illegal  start  of  expression	511	None
1433	[BUG]  [BUGGY]  if(c[i]  ==  index)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  index)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  index)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getScale();    }    	non-compiled	[CE]  illegal  start  of  expression	511	None
1434	[BUG]  [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getScale();    }    	non-compiled	[CE]  illegal  start  of  expression	511	None
1442	[BUG]  [BUGGY]  int  rank  =  matrix.getRowSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  rank  =  matrix.getRowSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  rank  =  matrix.getRowSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	85	None
1443	[BUG]  [BUGGY]  int  ranking  =  matrix.getSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  ranking  =  matrix.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  ranking  =  matrix.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	85	None
1444	[BUG]  [BUGGY]  int  order  =  matrix.getSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  order  =  matrix.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  order  =  matrix.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	85	None
1451	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  b  =  new  double[6][order];  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  b  =  new  double[6][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  b  =  new  double[6][order];	  	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	304	None
1454	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  e  =  matrix.getSize();	  	non-compiled	[CE]  cannot  find  symbol	304	None
1462	[BUG]  [BUGGY]  int[]  swap  =  new  int[order]  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  int[order]  /  1;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  int[order]  /  1;	  int[]    swap    =    new    int[order]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	114	None
1463	[BUG]  [BUGGY]  int[]  swap  =  new  int[order]  -  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  int[order]  -  2;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  int[order]  -  2;	  int[]    swap    =    new    int[order]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	114	None
1464	[BUG]  [BUGGY]  int[]  swap  =  new  int[order]  -  3;  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  int[order]  -  3;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  int[order]  -  3;	  int[]    swap    =    new    int[order]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	114	None
1472	[BUG]  [BUGGY]  System.arraycopy(c,  0,  swap,  0,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  swap,  0,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  swap,  0,  index);	      System.arraycopy(c,    0,    swap,    0,    size);    	non-compiled	[CE]  illegal  start  of  type	335	None
1482	[BUG]  [BUGGY]  int[][]  r  =  root.getRangeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  root.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  root.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
1483	[BUG]  [BUGGY]  int[][]  r  =  small.getRangeDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  small.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  small.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	141	None
1484	[BUG]  [BUGGY]  int[][]  r  =  scale.getRangeDimension();  [CE]  cannot  find  symbol  scale  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  scale.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  scale.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol  scale	141	None
1492	[BUG]  [BUGGY]  if(switch  ==  1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(switch  ==  1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(switch  ==  1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	273	None
1502	[BUG]  [BUGGY]  int[][]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getSize();	      int[][]    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	483	None
1503	[BUG]  [BUGGY]  int[][]  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  ranking  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  ranking  =  matrix.getSize();	      int[][]    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	483	None
1504	[BUG]  [BUGGY]  int[][]  index  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  index  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  index  =  matrix.getSize();	      int[][]    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	483	None
1511	[BUG]  [BUGGY]  final  int  order  =  matrix.getOrderedDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  order  =  matrix.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  order  =  matrix.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
1512	[BUG]  [BUGGY]  final  char  order  =  matrix.getOrderedDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  char  order  =  matrix.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  char  order  =  matrix.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
1513	[BUG]  [BUGGY]  final  double  order  =  matrix.getOrderedDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double  order  =  matrix.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double  order  =  matrix.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
1514	[BUG]  [BUGGY]  final  byte  order  =  matrix.getOrderedDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  byte  order  =  matrix.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  byte  order  =  matrix.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
1523	[BUG]  [BUGGY]  if(switch!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(switch!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(switch!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	272	None
1524	[BUG]  [BUGGY]  if(c!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(c!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(c!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	272	None
1532	[BUG]  [BUGGY]  final  int  r  =  matrix.getColumnDimension();  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  r  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  r  =  matrix.getColumnDimension();	      final    int    rank    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	285	None
1533	[BUG]  [BUGGY]  final  int  index  =  matrix.getColumnDimension();  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  index  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  index  =  matrix.getColumnDimension();	      final    int    rank    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	285	None
1542	[BUG]  [BUGGY]  int[]  index  =  new  int[swap  +  1];  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[swap  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[swap  +  1];	  int[]    index    =    new    int[order    +    1];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	205	None
1543	[BUG]  [BUGGY]  int[]  index  =  new  int[small  +  1];  [CE]  possible  loss  of  precision  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[small  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[small  +  1];	  int[]    index    =    new    int[order    +    1];    	non-compiled	[CE]  possible  loss  of  precision	205	None
1544	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  /  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	add	int[]  index  =  new  int[order  /  1];	  int[]    index    =    new    int[order    +    1];    	compilable	  [FE]  AssertionError  testMath789	205	2
1545	[BUG]  [BUGGY]  int[]  index  =  new  int[order  /  1];  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  /  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order  /  1];	  int[]    index    =    new    int[order    +    1];    	compilable	  [FE]  AssertionError  testMath789	205	2
1552	[BUG]  [BUGGY]  throws  new  NonPositiveDefiniteMatrixException( " "));  [CE]  <identifier>  expected  [CONTEXT]      [BUGGY]  throws  new  NonPositiveDefiniteMatrixException( " "));  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throws  new  NonPositiveDefiniteMatrixException( " "));	  throws    new    NonPositiveDefiniteMatrixException(   "   ");    	non-compiled	[CE]  <identifier>  expected	92	None
1561	[BUG]  [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  size	171	None
1562	[BUG]  [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    if(size  >  0)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  size	171	None
1563	[BUG]  [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  new  RealMatrix(small,  null);  }  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  new  RealMatrix(small,  null);  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  new  RealMatrix(small,  null);  }	  	non-compiled	[CE]  cannot  find  symbol  size	171	None
1564	[BUG]  [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  new  RealMatrix(small,  false);  }  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  new  RealMatrix(small,  false);  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  new  RealMatrix(small,  false);  }	  	non-compiled	[CE]  cannot  find  symbol  size	171	None
1565	[BUG]  [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  root.getDecomposition();  }  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  root.getDecomposition();  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    if(size  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  matrix  =  root.getDecomposition();  }	  	non-compiled	[CE]  cannot  find  symbol  size	171	None
1571	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	184	None
1572	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	184	None
1573	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b;  }  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b;  }  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b;  }	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	184	None
1574	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	184	None
1581	[BUG]  [BUGGY]  Arrays.sort(this.index  +  1);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index  +  1);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index  +  1);	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
1582	[BUG]  [BUGGY]  Arrays.sort(this.index,  swap);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  swap);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  swap);	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
1583	[BUG]  [BUGGY]  Arrays.sort(this.index,  small);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  small);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  small);	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
1584	[BUG]  [BUGGY]  Arrays.sort(this.index,  '-');  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  '-');  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  '-');	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
1592	[BUG]  [BUGGY]  final  char  order  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  char  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  char  order  =  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	72	None
1593	[BUG]  [BUGGY]  final  double  order  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  double  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  double  order  =  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	72	None
1594	[BUG]  [BUGGY]  final  float  order  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  float  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  float  order  =  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	72	None
1604	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	add	for(int  i  =  0;  i  <  c.length;  ++i)  {	  for(int    i    =    0;    i    <    swap;    ++i)    {    	compilable	  [FE]  AssertionError  testMath789	83	2
1605	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {	  for(int    i    =    0;    i    <    swap;    ++i)    {    	compilable	  [FE]  AssertionError  testMath789	83	2
1612	[BUG]  [BUGGY]  int[][]  r  =  root.getRawClass();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  root.getRawClass();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  root.getRawClass();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
1613	[BUG]  [BUGGY]  int[][]  r  =  small.getRawClass();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  small.getRawClass();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  small.getRawClass();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  double  cannot  be  dereferenced	145	None
1614	[BUG]  [BUGGY]  int[][]  r  =  index.getRawClass();  [CE]  cannot  find  symbol  index  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  index.getRawClass();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  index.getRawClass();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  index	145	None
1624	[BUG]  [BUGGY]  if(matrix  ==  null  ||  matrix.isScalar())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  if(matrix  ==  null  ||  matrix.isScalar())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	if(matrix  ==  null  ||  matrix.isScalar())  {  throw  new  IllegalArgumentException( " ");  }	      if(matrix    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	173	None
1631	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  c[i];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	add	        b[i]    =    b[i];    c[i]  =  c[i];	  	compilable	  [FE]  AssertionError  testMath789	164	2
1632	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  c[i];  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  c[i];  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  c[i];	  	compilable	  [FE]  AssertionError  testMath789	164	2
1632	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  matrix.getSize();	  	non-compiled	[CE]  cannot  find  symbol	164	None
1633	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getEntry(entry[i],  i);  [CE]  cannot  find  symbol  entry  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getEntry(entry[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  matrix.getEntry(entry[i],  i);	  	non-compiled	[CE]  cannot  find  symbol  entry	164	None
1634	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getData();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getData();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  matrix.getData();	  	non-compiled	[CE]  incompatible  types	164	None
1635	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getEntry(entry,  i);  [CE]  cannot  find  symbol  entry  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getEntry(entry,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  matrix.getEntry(entry,  i);	  	non-compiled	[CE]  cannot  find  symbol  entry	164	None
1642	[BUG]  [BUGGY]  if(switch  ==  1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(switch  ==  1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(switch  ==  1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	271	None
1643	[BUG]  [BUGGY]  if(switch  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(switch  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(switch  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	271	None
1652	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b;  }  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  b;  }	      int[]    r    =    matrix.getRowDimension();    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    b;    }    	non-compiled	[CE]  incompatible  types	185	None
1654	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }	      int[]    r    =    matrix.getRowDimension();    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    b;    }    	non-compiled	[CE]  incompatible  types	185	None
1662	[BUG]  [BUGGY]  final  char  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  order  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
1663	[BUG]  [BUGGY]  final  double  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double  order  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
1664	[BUG]  [BUGGY]  final  float  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  float  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  float  order  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
1672	[BUG]  [BUGGY]  final  double[][]  c  =  small.getCenterDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  small.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  small.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	364	None
1673	[BUG]  [BUGGY]  final  double[][]  c  =  root.getCenterDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  root.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  root.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  cannot  find  symbol	364	None
1674	[BUG]  [BUGGY]  final  double[][]  c  =  smaller.getCenterDimension();  [CE]  cannot  find  symbol  smaller  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  smaller.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  smaller.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  cannot  find  symbol  smaller	364	None
1682	[BUG]  [BUGGY]  final  double[][]  c  =  small.getColumnDimension();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  small.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  small.getColumnDimension();	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	132	None
1683	[BUG]  [BUGGY]  final  double[][]  c  =  root.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  root.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  root.getColumnDimension();	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	132	None
1684	[BUG]  [BUGGY]  final  two[][]  c  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  two[][]  c  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  two[][]  c  =  matrix.getColumnDimension();	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	132	None
1692	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  swap,  0,  order,  size);  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  swap,  0,  order,  size);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  swap,  0,  order,  size);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  cannot  find  symbol  size	95	None
1693	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  1,  swap,  0,  order);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  1,  swap,  0,  order);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  1,  swap,  0,  order);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	95	None
1694	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  order,  size);  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  order,  size);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  order,  size);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  cannot  find  symbol  size	95	None
1701	[BUG]  [BUGGY]  double  r  =  0;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double  r  =  0;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double  r  =  0;	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
1703	[BUG]  [BUGGY]  double  r  =(i  >  0)?  0  :  i;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double  r  =(i  >  0)?  0  :  i;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double  r  =(i  >  0)?  0  :  i;	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
1704	[BUG]  [BUGGY]  double  r  =(i  >  0)?  c[i]  :  b;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double  r  =(i  >  0)?  c[i]  :  b;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double  r  =(i  >  0)?  c[i]  :  b;	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
1712	[BUG]  [BUGGY]  int[][]  r  =  root.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  root.getRowDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  root.getRowDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	482	None
1713	[BUG]  [BUGGY]  double[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  double[][]  r  =  matrix.getRowDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	double[][]  r  =  matrix.getRowDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	482	None
1714	[BUG]  [BUGGY]  float[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  float[][]  r  =  matrix.getRowDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	float[][]  r  =  matrix.getRowDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	482	None
1721	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop)  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop)  {	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	152	None
1722	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop)  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop)  {	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	152	None
1723	[BUG]  [BUGGY]  for(int  loop  =  false;  loop)  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(int  loop  =  false;  loop)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(int  loop  =  false;  loop)  {	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	152	None
1724	[BUG]  [BUGGY]  for(boolean  loop  =  real;  loop)  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  real;  loop)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  real;  loop)  {	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	152	None
1732	[BUG]  [BUGGY]  int[][]  r  =  new  int[order],  c;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  new  int[order],  c;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  new  int[order],  c;	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
1733	[BUG]  [BUGGY]  double[][]  r  =  new  double[order];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  double[][]  r  =  new  double[order];  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	double[][]  r  =  new  double[order];	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
1734	[BUG]  [BUGGY]  int[][]  r  =  new  int[order],  b;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  new  int[order],  b;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  new  int[order],  b;	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
1743	[BUG]  [BUGGY]  if(c[i][isi]  <  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	64	None
1744	[BUG]  [BUGGY]  if(c[i][isi]!=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]!=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]!=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	64	None
1754	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "  - "));  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "  - "));  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException( "  - "));	  throw    new    NonPositiveDefiniteMatrixException(   "   "));    	non-compiled	[CE]  ';'  expected	383	None
1761	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSlope();    }    	non-compiled	[CE]  illegal  start  of  expression	513	None
1762	[BUG]  [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(b[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSlope();    }    	non-compiled	[CE]  illegal  start  of  expression	513	None
1763	[BUG]  [BUGGY]  if(c[i]  ==  index)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  index)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  index)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSlope();    }    	non-compiled	[CE]  illegal  start  of  expression	513	None
1764	[BUG]  [BUGGY]  if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]!=  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSlope();    }    	non-compiled	[CE]  illegal  start  of  expression	513	None
1773	[BUG]  [BUGGY]  Matrix  matrix  =(Matrix)this.root.getDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =(Matrix)this.root.getDecomposition();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =(Matrix)this.root.getDecomposition();	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1774	[BUG]  [BUGGY]  Matrix  matrix  =  new  RealMatrix(small,  null);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  new  RealMatrix(small,  null);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  new  RealMatrix(small,  null);	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1782	[BUG]  [BUGGY]  this(small,  matrix.getSmallDecomposition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(small,  matrix.getSmallDecomposition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(small,  matrix.getSmallDecomposition());	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
1784	[BUG]  [BUGGY]  this(sum,  matrix.getSmallDecomposition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(sum,  matrix.getSmallDecomposition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(sum,  matrix.getSmallDecomposition());	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
1792	[BUG]  [BUGGY]  int  rank  =  root.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  root.getLowerBound();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  root.getLowerBound();	      int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	322	None
1793	[BUG]  [BUGGY]  int  ranking  =  matrix.getLowerBound();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  ranking  =  matrix.getLowerBound();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  ranking  =  matrix.getLowerBound();	      int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	322	None
1794	[BUG]  [BUGGY]  int  rank  =  this.matric.getLowerBound();  [CE]  cannot  find  symbol  matric  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  this.matric.getLowerBound();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  this.matric.getLowerBound();	      int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  matric	322	None
1802	[BUG]  [BUGGY]  matrix[i]  =  matrix.getSize();  [CE]  array  required,  but  RealMatrix  found  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  matrix[i]  =  matrix.getSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	matrix[i]  =  matrix.getSize();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  array  required,  but  RealMatrix  found	162	None
1803	[BUG]  [BUGGY]  c[i]  =  matrix.getIntSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  c[i]  =  matrix.getIntSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	c[i]  =  matrix.getIntSize();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None
1804	[BUG]  [BUGGY]  int[i]  =  matrix.getSize();  [CE]  ']'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  int[i]  =  matrix.getSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	int[i]  =  matrix.getSize();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  ']'  expected	162	None
1812	[BUG]  [BUGGY]  r  =  root.getRange();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  root.getRange();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  root.getRange();	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
1813	[BUG]  [BUGGY]  r  =  index.getRange();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  index.getRange();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  index.getRange();	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
1814	[BUG]  [BUGGY]  r  =  small.getRange();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  small.getRange();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  small.getRange();	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
1822	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  &&  index[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop  &&  index[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop  &&  index[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
1823	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  &&  index[r]  ==  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  &&  index[r]  ==  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  &&  index[r]  ==  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
1824	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  }  r  &&  index[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  }  r  &&  index[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  }  r  &&  index[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
1831	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())!=  0;  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())!=  0;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())!=  0;	      b    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	94	None
1833	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())  ==  0;  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())  ==  0;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())  ==  0;	      b    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	94	None
1842	[BUG]  [BUGGY]  index[][]  e  =  root.getEquals();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  root.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  root.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1843	[BUG]  [BUGGY]  index[][]  e  =  small.getEquals();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  small.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  small.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1844	[BUG]  [BUGGY]  index[][]  e  =  tiny.getEquals();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  tiny.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  tiny.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1851	[BUG]  [BUGGY]  this.index  =  matrix.getIndex();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this.index  =  matrix.getIndex();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this.index  =  matrix.getIndex();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	62	None
1852	[BUG]  [BUGGY]  this.index  =  matrix.getSize();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this.index  =  matrix.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this.index  =  matrix.getSize();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	62	None
1853	[BUG]  [BUGGY]  this.index  =  matrix.getLength();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this.index  =  matrix.getLength();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this.index  =  matrix.getLength();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	62	None
1854	[BUG]  [BUGGY]  this.index  =  matrix.getImpl();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this.index  =  matrix.getImpl();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this.index  =  matrix.getImpl();	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	62	None
1861	[BUG]  [BUGGY]  super(null,  small);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  small);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  small);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	175	None
1862	[BUG]  [BUGGY]  super(null,  inverse);  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  inverse);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  inverse	175	None
1863	[BUG]  [BUGGY]  super(null,  Small.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  Small  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  Small.POSITIVE_INFINITY);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  Small.POSITIVE_INFINITY);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Small	175	None
1864	[BUG]  [BUGGY]  super(null,  Small.MAX_VALUE);  [CE]  cannot  find  symbol  Small  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  Small.MAX_VALUE);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  Small.MAX_VALUE);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Small	175	None
1882	[BUG]  [BUGGY]  final  double[][]  c  =  root.getDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  root.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  root.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  cannot  find  symbol	133	None
1883	[BUG]  [BUGGY]  final  double[][]  c  =  small.getDecomposition();  [CE]  double  cannot  be  dereferenced  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  small.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  small.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None
1884	[BUG]  [BUGGY]  final  double[][]  c  =  smaller.getDecomposition();  [CE]  cannot  find  symbol  smaller  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  smaller.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  smaller.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  cannot  find  symbol  smaller	133	None
1891	[BUG]  [BUGGY]  int  rank  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int  rank  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int  rank  =  matrix.getSize();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
1892	[BUG]  [BUGGY]  int  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int  ranking  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int  ranking  =  matrix.getSize();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
1893	[BUG]  [BUGGY]  int  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int  rank  =  matrix.getLength();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int  rank  =  matrix.getLength();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
1894	[BUG]  [BUGGY]  int  rank  =  matrix.getRowSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int  rank  =  matrix.getRowSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int  rank  =  matrix.getRowSize();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
1902	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  +  c;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  +  c;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  +  c;	  int[]    index    =    new    int[order]    +    swap;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	32	None
1903	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  +  b;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  +  b;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  +  b;	  int[]    index    =    new    int[order]    +    swap;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	32	None
1904	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  +  swap.length;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  +  swap.length;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  +  swap.length;	  int[]    index    =    new    int[order]    +    swap;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	32	None
1911	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
1912	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
1913	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
1922	[BUG]  [BUGGY]  this(Math.random(),  Small.MAX_VALUE  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MAX_VALUE  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MAX_VALUE  +  1);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
1923	[BUG]  [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  BigDecimal.MAX_VALUE);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  BigDecimal.MAX_VALUE);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MAX_VALUE,  BigDecimal.MAX_VALUE);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
1924	[BUG]  [BUGGY]  this(Math.random(),  Small.MAX_VALUE)+  1;  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MAX_VALUE)+  1;  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MAX_VALUE)+  1;	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
1931	[BUG]  [BUGGY]  double[][]  b  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  double[][]  b  =  matrix.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	double[][]  b  =  matrix.getSize();	      	non-compiled	[CE]  cannot  find  symbol	45	None
1933	[BUG]  [BUGGY]  double[][]  b  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  double[][]  b  =  matrix.getSingleDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	double[][]  b  =  matrix.getSingleDimension();	      	non-compiled	[CE]  cannot  find  symbol	45	None
1943	[BUG]  [BUGGY]  if(c[i][i]!=  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]!=  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]!=  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	125	None
1944	[BUG]  [BUGGY]  if(c[i][i]  ==  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  ==  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  ==  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	125	None
1951	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  index,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  index,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  index,  swap);	      System.arraycopy(c,    0,    b,    swap,    order);    	non-compiled	[CE]  illegal  start  of  type	331	None
1952	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  index,  swap,  order);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  index,  swap,  order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  index,  swap,  order);	      System.arraycopy(c,    0,    b,    swap,    order);    	non-compiled	[CE]  illegal  start  of  type	331	None
1953	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  swap,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  swap,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  swap,  index);	      System.arraycopy(c,    0,    b,    swap,    order);    	non-compiled	[CE]  illegal  start  of  type	331	None
1954	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  swap,  index,  order);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  swap,  index,  order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  swap,  index,  order);	      System.arraycopy(c,    0,    b,    swap,    order);    	non-compiled	[CE]  illegal  start  of  type	331	None
1963	[BUG]  [BUGGY]  int  rank  =  root.getRangeIndex()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  root.getRangeIndex()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  root.getRangeIndex()  -  1;	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1964	[BUG]  [BUGGY]  int  ranking  =  matrix.getRangeIndex()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  ranking  =  matrix.getRangeIndex()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  ranking  =  matrix.getRangeIndex()  -  1;	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1972	[BUG]  [BUGGY]  final  int  r  =  matrix.getRowDimension();  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  r  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  r  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getRowDimension();    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	283	None
1973	[BUG]  [BUGGY]  final  int  order  =  matrix.getRowDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getRowDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	283	None
1974	[BUG]  [BUGGY]  final  int  index  =  matrix.getRowDimension();  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  index  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  index  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getRowDimension();    	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	283	None
1983	[BUG]  [BUGGY]  checkSmallDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  checkSmallDecomposition();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	checkSmallDecomposition();	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1984	[BUG]  [BUGGY]  checkSmallVariants();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  checkSmallVariants();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	checkSmallVariants();	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1991	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  >  0;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop  >  0;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop  >  0;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1992	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  rnt;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop!=  rnt;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop!=  rnt;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1993	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  vnt;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop!=  vnt;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop!=  vnt;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1994	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  <  rnt;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop  <  rnt;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop  <  rnt;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
2002	[BUG]  [BUGGY]  this(null,  matrix.getSize()  -  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSize()  -  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSize()  -  1);	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
2003	[BUG]  [BUGGY]  this(null,  matrix.getSize()  -  size);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSize()  -  size);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSize()  -  size);	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
2004	[BUG]  [BUGGY]  this(null,  matrix.getLength());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getLength());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getLength());	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
2011	[BUG]  [BUGGY]  Arrays.sort(e,  c);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(e,  c);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(e,  c);	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
2012	[BUG]  [BUGGY]  Arrays.sort(c,  b);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(c,  b);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(c,  b);	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
2013	[BUG]  [BUGGY]  Arrays.sort(c,  e);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(c,  e);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(c,  e);	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
2014	[BUG]  [BUGGY]  Arrays.sort(b,  e);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(b,  e);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(b,  e);	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
2022	[BUG]  [BUGGY]  final  int  ranking  =  matrix.getLowerDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ranking  =  matrix.getLowerDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ranking  =  matrix.getLowerDimension();	      final    int    rank    =    matrix.getLowerDimension();    	non-compiled	[CE]  cannot  find  symbol	544	None
2023	[BUG]  [BUGGY]  final  int  order  =  matrix.getLowerDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getLowerDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getLowerDimension();	      final    int    rank    =    matrix.getLowerDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	544	None
2024	[BUG]  [BUGGY]  final  char  rank  =  matrix.getLowerDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char  rank  =  matrix.getLowerDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char  rank  =  matrix.getLowerDimension();	      final    int    rank    =    matrix.getLowerDimension();    	non-compiled	[CE]  cannot  find  symbol	544	None
2031	[BUG]  [BUGGY]  super(Math.abs(small,  inverse));  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small,  inverse));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small,  inverse));	      super(Math.abs(small));    	non-compiled	[CE]  cannot  find  symbol  inverse	213	None
2033	[BUG]  [BUGGY]  super(Math.abs(small),  inverse);  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small),  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small),  inverse);	      super(Math.abs(small));    	non-compiled	[CE]  cannot  find  symbol  inverse	213	None
2034	[BUG]  [BUGGY]  super(Math.abs(small),  false);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small),  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small),  false);	      super(Math.abs(small));    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	213	None
2044	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  swap.length;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  1;  i  <  swap.length;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  1;  i  <  swap.length;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
2052	[BUG]  [BUGGY]  index[0]  =  matrix.getSlope();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[0]  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[0]  =  matrix.getSlope();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  cannot  find  symbol	124	None
2053	[BUG]  [BUGGY]  index[index]  =  matrix.getSlope();  [CE]  incompatible  types  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[index]  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[index]  =  matrix.getSlope();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  incompatible  types	124	None
2054	[BUG]  [BUGGY]  index[order]  =  matrix.getSlope();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[order]  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[order]  =  matrix.getSlope();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  cannot  find  symbol	124	None
2062	[BUG]  [BUGGY]  index[i]  =  c.intValue();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.intValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.intValue();	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol	163	None
2063	[BUG]  [BUGGY]  index[i]  =  swap.intValue();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  swap.intValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  swap.intValue();	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol	163	None
2064	[BUG]  [BUGGY]  index[i]  =  a.intValue();  [CE]  cannot  find  symbol  a  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  a.intValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  a.intValue();	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  a	163	None
2073	[BUG]  [BUGGY]  for(int  loop  =  false;  loop!=  null;)  {  [CE]  incompatible  types  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  loop  =  false;  loop!=  null;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  loop  =  false;  loop!=  null;)  {	  for(boolean    loop    =    false;    loop!=    null;)    {    	non-compiled	[CE]  incompatible  types	262	None
2074	[BUG]  [BUGGY]  for(boolean  r  =  false;  loop!=  null;)  {  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  r  =  false;  loop!=  null;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  r  =  false;  loop!=  null;)  {	  for(boolean    loop    =    false;    loop!=    null;)    {    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	262	None
2084	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  index;  [CE]  ')'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  index;  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  index;	  for(int    i    =    0;    i    <    swap;    ++i)    {    	non-compiled	[CE]  ')'  expected	83	None
24	[BUG]  [BUGGY]  index[]  =  matrix.getSlope();  [CE]  not  a  statement  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[]  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[]  =  matrix.getSlope();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  not  a  statement	124	None
43	[BUG]  [BUGGY]  if(c  =  matrix.getSlopeDimension())  {  c  =  matrix.getSlopeDimension();  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  =  matrix.getSlopeDimension())  {  c  =  matrix.getSlopeDimension();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  =  matrix.getSlopeDimension())  {  c  =  matrix.getSlopeDimension();  }	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	43	None
44	[BUG]  [BUGGY]  if(c  =  matrix.getSlopeDimension())  {  b  =  matrix.getSlopeDimension();  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  =  matrix.getSlopeDimension())  {  b  =  matrix.getSlopeDimension();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  =  matrix.getSlopeDimension())  {  b  =  matrix.getSlopeDimension();  }	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	43	None
83	[BUG]  [BUGGY]  final  long[][]  r  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  long[][]  r  =  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  long[][]  r  =  matrix.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	224	None
84	[BUG]  [BUGGY]  final  int[][]  matrix  =  matrix.getSlopeDimension();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  matrix  =  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  matrix  =  matrix.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	224	None
101	[BUG]  [BUGGY]  int  i  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  i  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  i  =  matrix.getSize();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol	123	None
102	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap.length);  [CE]  cannot  find  symbol  r  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap.length);  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	System.arraycopy(c,  0,  b,  0,  swap.length);	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol  r	123	None
103	[BUG]  [BUGGY]  int  index  =  matrix.getSize();  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  index  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  index  =  matrix.getSize();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	123	None
124	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "infinity: ");  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "infinity: ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException( "infinity: ");	  throw    new    NonPositiveDefiniteMatrixException(   "   ");    	non-compiled	[CE]  ';'  expected	54	None
142	[BUG]  [BUGGY]  int[][]  r  =  matrix.getRowDimension(),  c,  b);  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getRowDimension(),  c,  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getRowDimension(),  c,  b);	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  ';'  expected	482	None
143	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  final  int[][]  r  =  matrix.getRowDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	final  int[][]  r  =  matrix.getRowDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	482	None
144	[BUG]  [BUGGY]  int[][]  r  =  matrix.getRowDimension()  +  c;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getRowDimension()  +  c;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getRowDimension()  +  c;	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	482	None
164	[BUG]  [BUGGY]  setSmallIndex(matric.getRowDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getRowDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getRowDimension());	      setSmallIndex(matric.getColumnDimension()    +    1);    	non-compiled	[CE]  ';'  expected	575	None
182	[BUG]  [BUGGY]  b[i]  =  c.doubleValue();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  c.doubleValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c.doubleValue();	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol	165	None
183	[BUG]  [BUGGY]  b[i]  =  c  *(index[i]);  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  c  *(index[i]);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c  *(index[i]);	      b[i]    =    b[i];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	165	None
184	[BUG]  [BUGGY]  b[i]  =  c.equals(c);  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  c.equals(c);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  c.equals(c);	      b[i]    =    b[i];    	non-compiled	[CE]  incompatible  types	165	None
203	[BUG]  [BUGGY]  final  int[][]  ordering  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordering  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordering  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	362	None
204	[BUG]  [BUGGY]  final  int[][]  ordin  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordin  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordin  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	362	None
221	[BUG]  [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);	  	non-compiled	[CE]  cannot  find  symbol	171	None
222	[BUG]  [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(small,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(small,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    Matrix  matrix  =  MatrixUtils.createMatrix(small,  false);	  	non-compiled	[CE]  cannot  find  symbol	171	None
223	[BUG]  [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);	  	non-compiled	[CE]  cannot  find  symbol	171	None
224	[BUG]  [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(this,  small);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.createMatrix(this,  small);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    Matrix  matrix  =  MatrixUtils.createMatrix(this,  small);	  	non-compiled	[CE]  cannot  find  symbol	171	None
225	[BUG]  [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.computeMatrix(small,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  Matrix  matrix  =  MatrixUtils.computeMatrix(small,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    Matrix  matrix  =  MatrixUtils.computeMatrix(small,  false);	  	non-compiled	[CE]  cannot  find  symbol	171	None
241	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  small  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  small  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  small  +  1);	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
243	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  small,  matrix.getRawClass());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  small,  matrix.getRawClass());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  small,  matrix.getRawClass());	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
244	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  small,  matrix.getRangeDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  small,  matrix.getRangeDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  small,  matrix.getRangeDimension());	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
262	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getSlopeDimension();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
263	[BUG]  [BUGGY]  final  double[][]  matrix  =  matrix.getSlopeDimension();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  matrix  =  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  matrix  =  matrix.getSlopeDimension();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	363	None
282	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int[][]  c  =  matrix.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int[][]  c  =  matrix.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
283	[BUG]  [BUGGY]  final  bigDecimal[]  c  =  matrix.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  bigDecimal[]  c  =  matrix.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  bigDecimal[]  c  =  matrix.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
284	[BUG]  [BUGGY]  final  int  c  =  matrix.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  c  =  matrix.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  c  =  matrix.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
302	[BUG]  [BUGGY]  final  int  rank  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  order  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  rank  =  matrix.getRowDimension();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  rank  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  order	323	None
322	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	}	      if(matrix    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	173	None
323	[BUG]  [BUGGY]  <<  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  <<  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	<<	      if(matrix    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	173	None
324	[BUG]  [BUGGY]  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  {  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	{	      if(matrix    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	173	None
342	[BUG]  [BUGGY]  super(matrix.getSlope(),  matrix.getLowerBound());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  super(matrix.getSlope(),  matrix.getLowerBound());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	super(matrix.getSlope(),  matrix.getLowerBound());	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
343	[BUG]  [BUGGY]  super(matrix.getSlope());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  super(matrix.getSlope());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	super(matrix.getSlope());	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
344	[BUG]  [BUGGY]  super(matrix.getSlope(),  matrix.getUpperBound());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  super(matrix.getSlope(),  matrix.getUpperBound());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	super(matrix.getSlope(),  matrix.getUpperBound());	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
363	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getOrderedDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  order  =  matrix.getOrderedDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  order  =  matrix.getOrderedDimension();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
364	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getOrder();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  order  =  matrix.getOrder();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  order  =  matrix.getOrder();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
383	[BUG]  [BUGGY]  index[i]  =  matrix.intValue();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  matrix.intValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  matrix.intValue();	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol	163	None
384	[BUG]  [BUGGY]  index[i]  =  B.intValue();  [CE]  cannot  find  symbol  B  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  B.intValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  B.intValue();	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  B	163	None
403	[BUG]  [BUGGY]  char  r  =  0;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  char  r  =  0;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	char  r  =  0;	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
404	[BUG]  [BUGGY]  double  r  =  0.0;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double  r  =  0.0;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double  r  =  0.0;	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
424	[BUG]  [BUGGY]  final  int[][]  ordin  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  ordin  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  ordin  =  matrix.getSize();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	23	None
461	[BUG]  [BUGGY]  int  r  =(b  <  0)?  0  :  b.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(b  <  0)?  0  :  b.length;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(b  <  0)?  0  :  b.length;	  int    r    =(index    <    0)?    0    :    b.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	192	None
463	[BUG]  [BUGGY]  int  r  =(b!=  0)?  0  :  b.length;  [CE]  incomparable  types:  double[][]  and  int  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(b!=  0)?  0  :  b.length;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(b!=  0)?  0  :  b.length;	  int    r    =(index    <    0)?    0    :    b.length;    	non-compiled	[CE]  incomparable  types:  double[][]  and  int	192	None
464	[BUG]  [BUGGY]  int  r  =(b  ==  0)?  0  :  b.length;  [CE]  incomparable  types:  double[][]  and  int  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(b  ==  0)?  0  :  b.length;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(b  ==  0)?  0  :  b.length;	  int    r    =(index    <    0)?    0    :    b.length;    	non-compiled	[CE]  incomparable  types:  double[][]  and  int	192	None
481	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  final  int[]  index  =  new  int[order  +  1];  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  final  int[]  index  =  new  int[order  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    final  int[]  index  =  new  int[order  +  1];	  	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	204	None
482	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[order  +  1];  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[order  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  index  =  new  int[order  +  1];	  	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	204	None
484	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[size  +  1];  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[size  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  index  =  new  int[size  +  1];	  	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	204	None
485	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  final  int[]  index  =  new  int[size  +  1];  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  final  int[]  index  =  new  int[size  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    final  int[]  index  =  new  int[size  +  1];	  	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	204	None
502	[BUG]  [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSlope();    }    	non-compiled	[CE]  illegal  start  of  expression	513	None
522	[BUG]  [BUGGY]  int  rank  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  order  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  matrix.getRowDimension();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  matrix.getRowDimension();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  order	325	None
524	[BUG]  [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  matrix.getSize()  -  1;	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	325	None
543	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(multiply,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(multiply,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(multiply,  false);	      Matrix    matrix    =    MatrixUtils.createMatrix(small,    false);    	non-compiled	[CE]  cannot  find  symbol	324	None
563	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(relativeAccuracy  *  size),  inverse);  [CE]  cannot  find  symbol  relativeAccuracy  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(relativeAccuracy  *  size),  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(relativeAccuracy  *  size),  inverse);	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size),    absoluteAccuracy);    	non-compiled	[CE]  cannot  find  symbol  relativeAccuracy	214	None
564	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(size  *  size),  absoluteAccuracy);  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(size  *  size),  absoluteAccuracy);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(size  *  size),  absoluteAccuracy);	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size),    absoluteAccuracy);    	non-compiled	[CE]  cannot  find  symbol  size	214	None
582	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getRangeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  final  int[][]  r  =  matrix.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	final  int[][]  r  =  matrix.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
583	[BUG]  [BUGGY]  int[][]  order  =  matrix.getRangeDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  order  =  matrix.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  order  =  matrix.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	141	None
584	[BUG]  [BUGGY]  int[][]  matrix  =  matrix.getRangeDimension();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  matrix  =  matrix.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  matrix  =  matrix.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	141	None
604	[BUG]  [BUGGY]  int[]  index  =  new  int[2];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[2];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[2];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
623	[BUG]  [BUGGY]  int[]  order  =  matrix.getOrderedDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  order  =  matrix.getOrderedDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  order  =  matrix.getOrderedDimension();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
624	[BUG]  [BUGGY]  int[]  order  =  matrix.getOrder();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  order  =  matrix.getOrder();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  order  =  matrix.getOrder();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
642	[BUG]  [BUGGY]  setPositiveDefiniteMatrixException( " ");  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setPositiveDefiniteMatrixException( " ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setPositiveDefiniteMatrixException( " ");	  throw    new    NonPositiveDefiniteMatrixException       "   ");    	non-compiled	[CE]  ';'  expected	52	None
644	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException "  ;  [CE]  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException "  ;  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException "  ;	  throw    new    NonPositiveDefiniteMatrixException       "   ");    	non-compiled	[CE]  	52	None
663	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "infinity "));  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "infinity "));  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException( "infinity "));	  throw    new    NonPositiveDefiniteMatrixException(   "   "));    	non-compiled	[CE]  ';'  expected	383	None
682	[BUG]  [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  BigInteger.MAX_VALUE);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  BigInteger.MAX_VALUE);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MAX_VALUE,  BigInteger.MAX_VALUE);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
683	[BUG]  [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  Integer.MAX_VALUE);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MAX_VALUE,  Integer.MAX_VALUE);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
684	[BUG]  [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  Double.POSITIVE_INFINITY);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MAX_VALUE,  Double.POSITIVE_INFINITY);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MAX_VALUE,  Double.POSITIVE_INFINITY);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
722	[BUG]  [BUGGY]  SortArrays.sort(c,  b);  [CE]  cannot  find  symbol  SortArrays  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  SortArrays.sort(c,  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	SortArrays.sort(c,  b);	      Arrays.sort(c,    b);    	non-compiled	[CE]  cannot  find  symbol  SortArrays	485	None
724	[BUG]  [BUGGY]  System.arraycopy(c,  b,  0,  order);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  System.arraycopy(c,  b,  0,  order);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	System.arraycopy(c,  b,  0,  order);	      Arrays.sort(c,    b);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	485	None
742	[BUG]  [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSmallDimension();    }    	non-compiled	[CE]  illegal  start  of  expression	514	None
762	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getSingleNode();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int[][]  c  =  matrix.getSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int[][]  c  =  matrix.getSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
763	[BUG]  [BUGGY]  final  single[][]  c  =  matrix.getSingleNode();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  single[][]  c  =  matrix.getSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  single[][]  c  =  matrix.getSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
781	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
782	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
783	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  +  1;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  +  1;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  +  1;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
784	[BUG]  [BUGGY]  if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  r  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
804	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
821	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Matrix)this.root.getComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Matrix)this.root.getComponentType();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =(Matrix)this.root.getComponentType();	  	non-compiled	[CE]  cannot  find  symbol	174	None
822	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.createMatrix(small,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.createMatrix(small,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  MatrixUtils.createMatrix(small,  false);	  	non-compiled	[CE]  cannot  find  symbol	174	None
823	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);	  	non-compiled	[CE]  cannot  find  symbol	174	None
824	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  Matrix.newInstance();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  Matrix.newInstance();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  Matrix.newInstance();	  	non-compiled	[CE]  cannot  find  symbol	174	None
825	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.getMatrix(small);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.getMatrix(small);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  MatrixUtils.getMatrix(small);	  	non-compiled	[CE]  cannot  find  symbol	174	None
862	[BUG]  [BUGGY]  final  int  rank  =  matrix.getLength()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  rank  =  matrix.getLength()  -  1;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  rank  =  matrix.getLength()  -  1;	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	365	None
864	[BUG]  [BUGGY]  final  int  rank  =  matrix.getLength()  +  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  rank  =  matrix.getLength()  +  1;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  rank  =  matrix.getLength()  +  1;	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	365	None
882	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getCenterDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  cannot  find  symbol	364	None
883	[BUG]  [BUGGY]  final  double[][]  matrix  =  matrix.getCenterDimension();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  matrix  =  matrix.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  matrix  =  matrix.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	364	None
884	[BUG]  [BUGGY]  final  int  c  =  matrix.getCenterDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  c  =  matrix.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  c  =  matrix.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  cannot  find  symbol	364	None
922	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	131	None
923	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.incrementSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.incrementSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.incrementSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	131	None
924	[BUG]  [BUGGY]  final  double[][]  matrix  =  matrix.getSize();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  matrix  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  matrix  =  matrix.getSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	131	None
962	[BUG]  [BUGGY]  final  int  order  =  matrix  root.getSize();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix  root.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix  root.getSize();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	71	None
963	[BUG]  [BUGGY]  final  int  order  =  matrix.getMatrix();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getMatrix();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getMatrix();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
983	[BUG]  [BUGGY]  System.arraycopy(small,  0,  c,  0,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(small,  0,  c,  0,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(small,  0,  c,  0,  swap);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  type	82	None
1024	[BUG]  [BUGGY]  int  r  =  index.length;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  index.length;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  index.length;	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
1043	[BUG]  [BUGGY]  index[i]  =  c,  swap;  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c,  swap;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c,  swap;	  index[i]    =    c;    	non-compiled	[CE]  ';'  expected	11	None
1044	[BUG]  [BUGGY]  index[i]  =  c.equals(b);  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.equals(b);  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.equals(b);	  index[i]    =    c;    	non-compiled	[CE]  incompatible  types	11	None
1103	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  c[i];  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  c[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  c[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
1104	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  plimb  order;  ++i)  {  index[i]  =  c[i];  }  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  plimb  order;  ++i)  {  index[i]  =  c[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  plimb  order;  ++i)  {  index[i]  =  c[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  ';'  expected	145	None
1123	[BUG]  [BUGGY]  if(c  =  matrix.getShape())  {  c  =  matrix.getShape();  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  =  matrix.getShape())  {  c  =  matrix.getShape();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  =  matrix.getShape())  {  c  =  matrix.getShape();  }	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	125	None
1124	[BUG]  [BUGGY]  if(c  =  matrix.getShape())  {  c  =  matrix.getShape();  }  else  {  b[i]  =  c;  b[i]  =  b;  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  =  matrix.getShape())  {  c  =  matrix.getShape();  }  else  {  b[i]  =  c;  b[i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  =  matrix.getShape())  {  c  =  matrix.getShape();  }  else  {  b[i]  =  c;  b[i]  =  b;  }	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	125	None
1142	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  index,  swap,  order);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  index,  swap,  order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  index,  swap,  order);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
1143	[BUG]  [BUGGY]  System.arraycopy(small,  0,  c,  0,  index,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(small,  0,  c,  0,  index,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(small,  0,  c,  0,  index,  swap);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
1164	[BUG]  [BUGGY]  index[i]  =  c.equals(swap);  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.equals(swap);  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.equals(swap);	  index[i]    =    swap;    	non-compiled	[CE]  incompatible  types	13	None
1184	[BUG]  [BUGGY]  System.arraycopy(small,  0,  b,  0,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(small,  0,  b,  0,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(small,  0,  b,  0,  index);	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
1203	[BUG]  [BUGGY]  int[]  index  =  new  int[8];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[8];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[8];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
1222	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getRowDimension();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getRowDimension();	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1223	[BUG]  [BUGGY]  final  int[]  index  =  new  int[16];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  int[]  index  =  new  int[16];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  int[]  index  =  new  int[16];	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1241	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop!=  null;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1242	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  <  null;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop  <  null;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop  <  null;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1243	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop!=  null;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop!=  null;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop!=  null;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1244	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop!=  0;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop!=  0;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
1262	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  order  =  matrix.getRowDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  order  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  order  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	73	None
1263	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getColumnDimension();  final  int  order  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final    int    order    =    matrix.getColumnDimension();    final  int  order  =  matrix.getSize();	  	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	73	None
1284	[BUG]  [BUGGY]  c[isi][0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  isi  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  c[isi][0]  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	c[isi][0]  =  matrix.getSlopeDimension();	      	non-compiled	[CE]  cannot  find  symbol  isi	45	None
1302	[BUG]  [BUGGY]  r  =  matrix.slope();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.slope();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.slope();	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1304	[BUG]  [BUGGY]  r  =  matrix.getSlope()  +  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.getSlope()  +  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.getSlope()  +  1;	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1323	[BUG]  [BUGGY]  int[]  index  =  matrix.getSmallIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  index  =  matrix.getSmallIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  index  =  matrix.getSmallIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
1324	[BUG]  [BUGGY]  int[]  r  =  matrix.getSmallIndex()  +  swap;  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getSmallIndex()  +  swap;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getSmallIndex()  +  swap;	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
1344	[BUG]  [BUGGY]  index[][]  c  =  matrix.getData();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  c  =  matrix.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  c  =  matrix.getData();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
1362	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverseAccuracy  *  size));  [CE]  cannot  find  symbol  inverseAccuracy  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverseAccuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverseAccuracy  *  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  cannot  find  symbol  inverseAccuracy	212	None
1363	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  turret  *  size));  [CE]  ')'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  turret  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  turret  *  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  ')'  expected	212	None
1382	[BUG]  [BUGGY]  int[]  ordered  =  matrix.getSize(),  b);  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  matrix.getSize(),  b);  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  matrix.getSize(),  b);	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  ';'  expected	24	None
1383	[BUG]  [BUGGY]  int[]  ordered  =  matrix.getSize(),  b;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  matrix.getSize(),  b;  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  matrix.getSize(),  b;	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	24	None
1384	[BUG]  [BUGGY]  int[]  ordered  =  matrix.getSize()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  matrix.getSize()  -  1;  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  matrix.getSize()  -  1;	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	24	None
1402	[BUG]  [BUGGY]  c[i]  =  matrix.getMinimumSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  c[i]  =  matrix.getMinimumSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	c[i]  =  matrix.getMinimumSize();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None
1403	[BUG]  [BUGGY]  c[i]  =  matrix.getComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  c[i]  =  matrix.getComponentType();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	c[i]  =  matrix.getComponentType();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None
1404	[BUG]  [BUGGY]  c[i]  =  matrix.getRowSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  c[i]  =  matrix.getRowSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	c[i]  =  matrix.getRowSize();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None
1421	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
1422	[BUG]  [BUGGY]  if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
1423	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
1424	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
1441	[BUG]  [BUGGY]  Matrix  matrix  =(Matrix)this.root.getComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =(Matrix)this.root.getComponentType();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =(Matrix)this.root.getComponentType();	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1442	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(small,  inverse);	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1443	[BUG]  [BUGGY]  Matrix  matrix  =  Matrix.newInstance();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  Matrix.newInstance();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  Matrix.newInstance();	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1462	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  cannot  find  symbol	133	None
1463	[BUG]  [BUGGY]  final  double[][]  matrix  =  matrix.getDecomposition();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  matrix  =  matrix.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  matrix  =  matrix.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	133	None
1464	[BUG]  [BUGGY]  final  char[][]  c  =  matrix.getDecomposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char[][]  c  =  matrix.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char[][]  c  =  matrix.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  cannot  find  symbol	133	None
1482	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ordered  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ordered  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	22	None
1503	[BUG]  [BUGGY]  Arrays.sort(b,  c);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(b,  c);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(b,  c);	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
1562	[BUG]  [BUGGY]  Matrix.fill(matrix,  matrix);  [CE]  cannot  find  symbol  Matrix  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix.fill(matrix,  matrix);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix.fill(matrix,  matrix);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  Matrix	215	None
1563	[BUG]  [BUGGY]  Matrix.fill(matrix,  this.root);  [CE]  cannot  find  symbol  Matrix  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix.fill(matrix,  this.root);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix.fill(matrix,  this.root);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  Matrix	215	None
1564	[BUG]  [BUGGY]  Matrix.fill(matrix,  inverse);  [CE]  cannot  find  symbol  inverse  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix.fill(matrix,  inverse);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix.fill(matrix,  inverse);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  inverse	215	None
1581	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  matrix.getRowDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  int[][]  r  =  matrix.getRowDimension();	  	non-compiled	[CE]  incompatible  types	304	None
1582	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  matrix.getRowDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  r  =  matrix.getRowDimension();	  	non-compiled	[CE]  incompatible  types	304	None
1583	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  new  double[6][order];  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  new  double[6][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  e  =  new  double[6][order];	  	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	304	None
1584	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  new  double[6];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  new  double[6];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  r  =  new  double[6];	  	non-compiled	[CE]  incompatible  types	304	None
1585	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  new  double[6][order];  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  new  double[6][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  r  =  new  double[6][order];	  	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	304	None
1602	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getComponentType();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getComponentType();	  final    double[][]    c    =    matrix.getComponentType();    	non-compiled	[CE]  cannot  find  symbol	361	None
1603	[BUG]  [BUGGY]  final  double[][]  matrix  =  matrix.getComponentType();  [CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  matrix  =  matrix.getComponentType();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  matrix  =  matrix.getComponentType();	  final    double[][]    c    =    matrix.getComponentType();    	non-compiled	[CE]  variable  matrix  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	361	None
1604	[BUG]  [BUGGY]  final  single[][]  c  =  matrix.getComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  single[][]  c  =  matrix.getComponentType();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  single[][]  c  =  matrix.getComponentType();	  final    double[][]    c    =    matrix.getComponentType();    	non-compiled	[CE]  cannot  find  symbol	361	None
1644	[BUG]  [BUGGY]  if(matrix.isScalar())  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  if(matrix.isScalar())  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	if(matrix.isScalar())  {  throw  new  IllegalArgumentException( " "));  }	      if(matrix    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	173	None
1662	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getRowDimension()  +  swap;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  int[]  r  =  matrix.getRowDimension()  +  swap;  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  int[]  r  =  matrix.getRowDimension()  +  swap;	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
1663	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getRowDimension(),  swap);  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  int[]  r  =  matrix.getRowDimension(),  swap);  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  int[]  r  =  matrix.getRowDimension(),  swap);	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  ';'  expected	183	None
1682	[BUG]  [BUGGY]  int[][]  rank  =  matrix.getSize(),  b);  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  rank  =  matrix.getSize(),  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  rank  =  matrix.getSize(),  b);	      int[][]    rank    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	483	None
1702	[BUG]  [BUGGY]  setSmallIndex(matrix.getDimension()  -  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getDimension()  -  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getDimension()  -  1);	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
1703	[BUG]  [BUGGY]  setSimpleIndex(matrix.getSize());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSimpleIndex(matrix.getSize());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSimpleIndex(matrix.getSize());	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
1721	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1723	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1744	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  +  swap,  order;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  +  swap,  order;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  +  swap,  order;	  int[]    index    =    new    int[order]    +    swap;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	32	None
1762	[BUG]  [BUGGY]  int[][]  r  =  matrix,  matrix.getSmallIndex();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix,  matrix.getSmallIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix,  matrix.getSmallIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  ';'  expected	144	None
1763	[BUG]  [BUGGY]  int[][]  index  =  matrix.getSmallIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  index  =  matrix.getSmallIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  index  =  matrix.getSmallIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	144	None
1782	[BUG]  [BUGGY]  this(null,  matrix.getRowDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getRowDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getRowDimension());	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
1784	[BUG]  [BUGGY]  this(null,  matrix.getSize()  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSize()  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSize()  +  1);	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
1803	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  index.length);  [CE]  cannot  find  symbol  r  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  System.arraycopy(c,  0,  b,  0,  index.length);  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	System.arraycopy(c,  0,  b,  0,  index.length);	      int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  r	122	None
1804	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  b[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  b[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  b[i]  =  c;  }	      int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	122	None
1823	[BUG]  [BUGGY]  int  rank  =  matrix.getRangeCount()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getRangeCount()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getRangeCount()  -  1;	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1844	[BUG]  [BUGGY]  this.index  =  matrix.getSize()  +  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this.index  =  matrix.getSize()  +  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this.index  =  matrix.getSize()  +  1;	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	62	None
1862	[BUG]  [BUGGY]  this(Math.abs(b));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(b));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(b));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1863	[BUG]  [BUGGY]  this(Math.abs(c));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(c));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(c));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1864	[BUG]  [BUGGY]  this(Math.abs(y));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(y));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(y));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1883	[BUG]  [BUGGY]  int[]  index  =  new  int[size]  -  1;  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[size]  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[size]  -  1;	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  cannot  find  symbol  size	33	None
1884	[BUG]  [BUGGY]  int[]  index  =  new  int[switch]  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[switch]  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[switch]  -  1;	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
1924	[BUG]  [BUGGY]  Arrays.sort(this.index,  this.exp);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  this.exp);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  this.exp);	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
1943	[BUG]  [BUGGY]  index[][]  r  =  matrix.getEquals();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  r  =  matrix.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  r  =  matrix.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1944	[BUG]  [BUGGY]  index[][]  c  =  matrix.getEquals();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  c  =  matrix.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  c  =  matrix.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1963	[BUG]  [BUGGY]  int  r  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  r  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  r  =  matrix.getSize();	      b    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	94	None
1964	[BUG]  [BUGGY]  e  =  matrix.getSize();  [CE]  cannot  find  symbol  e  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  e  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	e  =  matrix.getSize();	      b    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  e	94	None
1982	[BUG]  [BUGGY]  int  rank  =  matrix.getRowCount();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getRowCount();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getRowCount();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
1984	[BUG]  [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getSize()  -  1;	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
2003	[BUG]  [BUGGY]  final  int[][]  ordering  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordering  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordering  =  matrix.getSmallDimension();	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	152	None
2022	[BUG]  [BUGGY]  final  int[]  ordered  =  matrix,  matrix.getSize();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  matrix,  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  matrix,  matrix.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	25	None
2023	[BUG]  [BUGGY]  final  int[]  ordered  =  matrix.getSize()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  matrix.getSize()  -  1;  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  matrix.getSize()  -  1;	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	25	None
2024	[BUG]  [BUGGY]  final  int[]  ordered  =  matrix  root.getSize();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  matrix  root.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  matrix  root.getSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	25	None
2042	[BUG]  [BUGGY]  super(Math.abs(small),  ii);  [CE]  cannot  find  symbol  ii  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small),  ii);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small),  ii);	      super(Math.abs(small));    	non-compiled	[CE]  cannot  find  symbol  ii	213	None
2063	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  0;)  {  [CE]  incomparable  types:  boolean  and  int  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop!=  0;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop!=  0;)  {	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	183	None
2084	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())  <=  0;  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())  <=  0;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matrix.toString(),  matrix.toString())  <=  0;	      b    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	94	None
2121	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[256][c];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[256][c];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[256][c];	  final    double[][]    b    =    new    double[6][order];    	non-compiled	[CE]  incompatible  types	305	None
2123	[BUG]  [BUGGY]  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[256][order  +  1];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	add	final  double[][]  b  =  new  double[256][order  +  1];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
2124	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[256][order  +  1];  [FE]  AssertionError  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[256][order  +  1];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[256][order  +  1];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  AssertionError  testMath789	305	2
2143	[BUG]  [BUGGY]  if(c  =  matrix.getSlope())  {  c  =  matrix.getSlope();  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  =  matrix.getSlope())  {  c  =  matrix.getSlope();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  =  matrix.getSlope())  {  c  =  matrix.getSlope();  }	      c    =    matrix.getSlope();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	44	None
2144	[BUG]  [BUGGY]  if(c  =  matrix.getSlope())  {  c  =  matrix.getSlope();  }  else  {  b[i]  =  c;  b[i]  =  b;  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c  =  matrix.getSlope())  {  c  =  matrix.getSlope();  }  else  {  b[i]  =  c;  b[i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c  =  matrix.getSlope())  {  c  =  matrix.getSlope();  }  else  {  b[i]  =  c;  b[i]  =  b;  }	      c    =    matrix.getSlope();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	44	None
2163	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  0)  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop!=  0)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop!=  0)  {	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	152	None
2164	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  1)  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  false;  loop!=  1)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  false;  loop!=  1)  {	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	152	None
2182	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  ordered  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  ordered  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	151	None
2202	[BUG]  [BUGGY]  setSmallIndex(matrix.getLength());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getLength());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getLength());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
2203	[BUG]  [BUGGY]  setSmallIndex(matrix.getStandardDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getStandardDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getStandardDimension());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
2204	[BUG]  [BUGGY]  setSmallIndex(matrix.getStdDevIndex());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getStdDevIndex());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getStdDevIndex());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
2221	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  bigDecimal);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  bigDecimal);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  bigDecimal);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2222	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small,  matrix.length);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small,  matrix.length);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  small,  matrix.length);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2223	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  small  +  1);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2242	[BUG]  [BUGGY]  setSmallIndex(matric.getStandardDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getStandardDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getStandardDimension());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
2243	[BUG]  [BUGGY]  setSmallIndex(matric.getStandardDeviation());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getStandardDeviation());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getStandardDeviation());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
2244	[BUG]  [BUGGY]  setSmallIndex(matric.getStdDevIndex());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getStdDevIndex());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getStdDevIndex());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
2264	[BUG]  [BUGGY]  int  rank  =  matrix.getRangeIndex()  +  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getRangeIndex()  +  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getRangeIndex()  +  1;	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
2282	[BUG]  [BUGGY]  index  =  matrix.indexOf(b,  r);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.indexOf(b,  r);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.indexOf(b,  r);	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
2284	[BUG]  [BUGGY]  index  =  matrix.getSize()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.getSize()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.getSize()  -  1;	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
2302	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[2];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[2];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[2];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
2303	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[order  +  1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[order  +  1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[order  +  1];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
2304	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[1];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
2321	[BUG]  [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  size;  ++i)  {  e[i]  =  b;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  size;  ++i)  {  e[i]  =  b;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  size;  ++i)  {  e[i]  =  b;  }	      	non-compiled	[CE]  ';'  expected	55	None
2322	[BUG]  [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLowerBound();  ++i)  {  e[i]  =  b;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLowerBound();  ++i)  {  e[i]  =  b;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLowerBound();  ++i)  {  e[i]  =  b;  }	      	non-compiled	[CE]  ';'  expected	55	None
2323	[BUG]  [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLength();  ++i)  {  e[i]  =  b;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLength();  ++i)  {  e[i]  =  b;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLength();  ++i)  {  e[i]  =  b;  }	      	non-compiled	[CE]  ';'  expected	55	None
2324	[BUG]  [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLowerBound();  ++i)  {  e[i]  =  c;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLowerBound();  ++i)  {  e[i]  =  c;  }  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(matrix!=  this)  {  ']'  =  matrix.getSlope();  for(int  i  =  0;  i  <  matrix.getLowerBound();  ++i)  {  e[i]  =  c;  }	      	non-compiled	[CE]  ';'  expected	55	None
2341	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap.length);  [CE]  cannot  find  symbol  index  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap.length);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap.length);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  cannot  find  symbol  index	95	None
2343	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  1,  swap);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  1,  swap);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  1,  swap);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	95	None
2363	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  swap.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  swap.length  -  1;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  swap.length  -  1;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
2364	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.index.length;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  this.index.length;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  this.index.length;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
2383	[BUG]  [BUGGY]  int[]  swap  =  new  double[order],  b);  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  double[order],  b);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  double[order],  b);	  int[]    swap    =    new    double[order];    	non-compiled	[CE]  ';'  expected	113	None
2403	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ordered  =  matrix.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ordered  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	21	None
2423	[BUG]  [BUGGY]  final  int  order  =  matrix  root.getOrderedDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  order  =  matrix  root.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  order  =  matrix  root.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  ';'  expected	1	None
2442	[BUG]  [BUGGY]  int[]  swap  =  new  int[order  *  1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[order  *  1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[order  *  1];	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
2443	[BUG]  [BUGGY]  int[]  swap  =  new  int[size  +  1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[size  +  1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[size  +  1];	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
2444	[BUG]  [BUGGY]  int[]  swap  =  new  int[small  +  1];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  swap  =  new  int[small  +  1];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  swap  =  new  int[small  +  1];	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
2462	[BUG]  [BUGGY]  if(c[i][isi]  >  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	63	None
2463	[BUG]  [BUGGY]  if(c[i][isi]  <  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	63	None
2483	[BUG]  [BUGGY]  b[j]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  j  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b[j]  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b[j]  =  matrix.getSlopeDimension();	      b[i]    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol  j	42	None
2503	[BUG]  [BUGGY]  if(c  =  matrix.getSize())  {  b  =  matrix.getSize();  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c  =  matrix.getSize())  {  b  =  matrix.getSize();  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c  =  matrix.getSize())  {  b  =  matrix.getSize();  }	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	142	None
2504	[BUG]  [BUGGY]  if(c  =  matrix.getSize())  {  c  =  matrix.getSize();  }  else  {  b[order]  =  c;  b[order]  =  b;  }  [CE]  cannot  assign  a  value  to  final  variable  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c  =  matrix.getSize())  {  c  =  matrix.getSize();  }  else  {  b[order]  =  c;  b[order]  =  b;  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c  =  matrix.getSize())  {  c  =  matrix.getSize();  }  else  {  b[order]  =  c;  b[order]  =  b;  }	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	142	None
2522	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  0  &&  index[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop!=  0  &&  index[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop!=  0  &&  index[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
2523	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  <  0  &&  index[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  <  0  &&  index[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  <  0  &&  index[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
2524	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  }  0  &&  index[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  }  0  &&  index[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  }  0  &&  index[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
2541	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '.')  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  b[i]  =  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2542	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c[i]  ==  c)  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c[i]  ==  c)  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c[i]  ==  c)  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2543	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '.')  {  b[i]  =  c;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i]  =  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2544	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  if(c  ==  '')  {  b[i]  =  c;  }  [CE]  empty  character  literal  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  if(c  ==  '')  {  b[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '.')  {  b[i]  =  c;  if(c  ==  '')  {  b[i]  =  c;  }	  	non-compiled	[CE]  empty  character  literal	164	None
2545	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getSlopeDimension();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  matrix.getSlopeDimension();	  	non-compiled	[CE]  cannot  find  symbol	164	None
2563	[BUG]  [BUGGY]  int[]  swap  =  new  int[order]  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  int[order]  /  2;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  int[order]  /  2;	  int[]    swap    =    new    int[order]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	114	None
2564	[BUG]  [BUGGY]  int[]  swap  =  new  int[size]  -  1;  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  int[size]  -  1;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  int[size]  -  1;	  int[]    swap    =    new    int[order]    -    1;    	non-compiled	[CE]  cannot  find  symbol  size	114	None
2582	[BUG]  [BUGGY]  r  =  matrix.getRange()  +  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.getRange()  +  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.getRange()  +  1;	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
2584	[BUG]  [BUGGY]  r  =  matrix.switchTo(b);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.switchTo(b);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.switchTo(b);	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
2602	[BUG]  [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getScale();    }    	non-compiled	[CE]  illegal  start  of  expression	511	None
2622	[BUG]  [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  matrix.getSize()  -  1;	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol	41	None
2623	[BUG]  [BUGGY]  int  ranking  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  ranking  =  matrix.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  ranking  =  matrix.getSize();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol	41	None
2624	[BUG]  [BUGGY]  int  rank  =  matrix.getRowCount();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  matrix.getRowCount();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  matrix.getRowCount();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol	41	None
2641	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  &&  r!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop  &&  r!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop  &&  r!=  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
2642	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  0  &&  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop!=  0  &&  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop!=  0  &&  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
2643	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  <  0  &&  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  <  0  &&  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  <  0  &&  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
2644	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  }  0  &&  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  }  0  &&  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  }  0  &&  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
2662	[BUG]  [BUGGY]  index  =  matrix.getSmallIndex()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.getSmallIndex()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.getSmallIndex()  -  1;	      r    =    matrix.getRange();    	non-compiled	[CE]  <identifier>  expected	244	None
2664	[BUG]  [BUGGY]  index  =  matrix.getSmallIndex(),  r);  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.getSmallIndex(),  r);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.getSmallIndex(),  r);	      r    =    matrix.getRange();    	non-compiled	[CE]  ';'  expected	244	None
2683	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop[r])  {  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop[r])  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop[r])  {	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	153	None
2703	[BUG]  [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	515	None
2723	[BUG]  [BUGGY]  int[][]  r  =  new  int[order],  order;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  new  int[order],  order;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  new  int[order],  order;	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
2724	[BUG]  [BUGGY]  int[][]  r  =  new  int[order],  size;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  new  int[order],  size;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  new  int[order],  size;	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
2763	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  1,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  1,  swap);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  1,  swap);	  for(int    i    =    0;    i    <    swap;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	83	None
2784	[BUG]  [BUGGY]  final  double[][]  index  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  index  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  index  =  matrix.getSmallDimension();	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	153	None
2802	[BUG]  [BUGGY]  this(null,  matrix.getCholeskyDecomposition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getCholeskyDecomposition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getCholeskyDecomposition());	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
2804	[BUG]  [BUGGY]  this(null,  matrix.getSmallComposition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallComposition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallComposition());	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
2842	[BUG]  [BUGGY]  if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  <  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
2862	[BUG]  [BUGGY]  if(b!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(b!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(b!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	272	None
2902	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getEntry(),  order;  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getEntry(),  order;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getEntry(),  order;	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	134	None
2903	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getEntry();  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getEntry();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getEntry();	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	134	None
2904	[BUG]  [BUGGY]  final  single[][]  c  =  matrix.getEntry();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  single[][]  c  =  matrix.getEntry();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  single[][]  c  =  matrix.getEntry();	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  cannot  find  symbol	134	None
2924	[BUG]  [BUGGY]  int  index  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  index  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  index  =  matrix.getRowDimension();	      int    r    =    matrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	84	None
2944	[BUG]  [BUGGY]  final  byte  order  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  byte  order  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  byte  order  =  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	72	None
2961	[BUG]  [BUGGY]  super(null,  matrix);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  matrix);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  matrix);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	175	None
2962	[BUG]  [BUGGY]  super(null,  matrix.getRowDimension());  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  matrix.getRowDimension());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  matrix.getRowDimension());	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	175	None
2963	[BUG]  [BUGGY]  super(matrix,null);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(matrix,null);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(matrix,null);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	175	None
2981	[BUG]  [BUGGY]  Arrays.sort(c,  b);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  Arrays.sort(c,  b);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	Arrays.sort(c,  b);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
2982	[BUG]  [BUGGY]  SortArrays.sort(c,  b);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  SortArrays.sort(c,  b);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	SortArrays.sort(c,  b);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
2984	[BUG]  [BUGGY]  Sort.sort(c,  b);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  Sort.sort(c,  b);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	Sort.sort(c,  b);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
3022	[BUG]  [BUGGY]  b[i]  =  matrix.getMinimumSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getMinimumSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getMinimumSize();	      b[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	161	None
3023	[BUG]  [BUGGY]  b[i]  =  matrix.incrementSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.incrementSize();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.incrementSize();	      b[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	161	None
3024	[BUG]  [BUGGY]  b[i]  =  matrix.switchTo(c);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.switchTo(c);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.switchTo(c);	      b[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	161	None
3062	[BUG]  [BUGGY]  int[]  index  =  matrix.getRangeDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  index  =  matrix.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  index  =  matrix.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
3063	[BUG]  [BUGGY]  int[]  r  =  index.getRangeDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  index.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  index.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
3064	[BUG]  [BUGGY]  int[]  order  =  matrix.getRangeDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  order  =  matrix.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  order  =  matrix.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
3081	[BUG]  [BUGGY]  if(b  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(b  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(b  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	273	None
3083	[BUG]  [BUGGY]  if(c  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(c  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(c  ==  b)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	273	None
3102	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  c  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  c  =  matrix.getColumnDimension();	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	132	None
3103	[BUG]  [BUGGY]  final  int  c  =  matrix.getColumnDimension();  [CE]  array  required,  but  int  found  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  c  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  c  =  matrix.getColumnDimension();	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  array  required,  but  int  found	132	None
3104	[BUG]  [BUGGY]  final  char[][]  c  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  char[][]  c  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  char[][]  c  =  matrix.getColumnDimension();	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	132	None
3123	[BUG]  [BUGGY]  final  single[][]  e  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  single[][]  e  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  single[][]  e  =  matrix.getSmallDimension();	      final    double[][]    e    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	155	None
3141	[BUG]  [BUGGY]  int[]  index  =  new  int[size  +  1];  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[size  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[size  +  1];	  int[]    index    =    new    int[order    +    1];    	non-compiled	[CE]  cannot  find  symbol  size	205	None
3144	[BUG]  [BUGGY]  int[]  index  =  new  int[switch  +  1];  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[switch  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[switch  +  1];	  int[]    index    =    new    int[order    +    1];    	non-compiled	[CE]  illegal  start  of  expression	205	None
3202	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension()  +  swap;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension()  +  swap;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension()  +  swap;	      int[]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	181	None
3203	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension(),  swap);  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension(),  swap);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension(),  swap);	      int[]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  ';'  expected	181	None
3222	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(input[i],  i);  [CE]  cannot  find  symbol  input  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(input[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(input[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  input	163	None
3223	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(exp,  index[i],  i);  [CE]  cannot  find  symbol  exp  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(exp,  index[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(exp,  index[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  exp	163	None
3241	[BUG]  [BUGGY]  final  int  order  =  matrix.getInt();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getInt();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getInt();	      	non-compiled	[CE]  cannot  find  symbol	75	None
3242	[BUG]  [BUGGY]  int  order  =  matrix.getOrdinal();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  order  =  matrix.getOrdinal();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  order  =  matrix.getOrdinal();	      	non-compiled	[CE]  cannot  find  symbol	75	None
3243	[BUG]  [BUGGY]  final  int  order  =  matrix.getOrdinal();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getOrdinal();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getOrdinal();	      	non-compiled	[CE]  cannot  find  symbol	75	None
3244	[BUG]  [BUGGY]  final  int  order  =  matrix.getOrder();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getOrder();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getOrder();	      	non-compiled	[CE]  cannot  find  symbol	75	None
3261	[BUG]  [BUGGY]  final  double[][]  b  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  matrix.getSlopeDimension();	      	non-compiled	[CE]  cannot  find  symbol	45	None
3262	[BUG]  [BUGGY]  final  double[][]  b  =  matrix.getSingleNodePointer();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  matrix.getSingleNodePointer();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  matrix.getSingleNodePointer();	      	non-compiled	[CE]  cannot  find  symbol	45	None
3263	[BUG]  [BUGGY]  final  int[]  b  =  matrix.getInequality(c);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[]  b  =  matrix.getInequality(c);  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[]  b  =  matrix.getInequality(c);	      	non-compiled	[CE]  cannot  find  symbol	45	None
3264	[BUG]  [BUGGY]  final  double[][]  b  =  matrix.getSlope();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  matrix.getSlope();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  matrix.getSlope();	      	non-compiled	[CE]  cannot  find  symbol	45	None
3281	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getRowDimension();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  r  =  matrix.getRowDimension();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  r  =  matrix.getRowDimension();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
3282	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getSize();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  order  =  matrix.getSize();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  order  =  matrix.getSize();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
3283	[BUG]  [BUGGY]  final  double[][]  r  =  matrix.getRowDimension();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  double[][]  r  =  matrix.getRowDimension();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  double[][]  r  =  matrix.getRowDimension();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
3284	[BUG]  [BUGGY]  final  int[]  ordered  =  matrix.getSize();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  ordered  =  matrix.getSize();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  ordered  =  matrix.getSize();	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
3322	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getRowDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
3323	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getRowSize();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
3324	[BUG]  [BUGGY]  int[]  index  =  matrix.getSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  index  =  matrix.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  index  =  matrix.getSize();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
3343	[BUG]  [BUGGY]  if(b  ==  0.0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(b  ==  0.0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(b  ==  0.0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	274	None
3344	[BUG]  [BUGGY]  if(b!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(b!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(b!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	274	None
3364	[BUG]  [BUGGY]  final  byte  order  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  byte  order  =  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  byte  order  =  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
3384	[BUG]  [BUGGY]  final  float  rank  =  matrix.getLowDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  float  rank  =  matrix.getLowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  float  rank  =  matrix.getLowDimension();	      final    int    rank    =    matrix.getLowDimension();    	non-compiled	[CE]  cannot  find  symbol	545	None
3402	[BUG]  [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  rank  =  matrix.getSize()  -  1;	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	85	None
3403	[BUG]  [BUGGY]  int  rank  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  rank  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  rank  =  matrix.getRowDimension();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	85	None
3423	[BUG]  [BUGGY]  b[i]  =  matrix.incrementSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[i]  =  matrix.incrementSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[i]  =  matrix.incrementSlopeDimension();	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
3424	[BUG]  [BUGGY]  b[0]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[0]  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[0]  =  matrix.getSlopeDimension();	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol	143	None
3442	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getRawClass();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  final  int[][]  r  =  matrix.getRawClass();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	final  int[][]  r  =  matrix.getRawClass();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
3444	[BUG]  [BUGGY]  int[][]  row  =  matrix.getRawClass();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  row  =  matrix.getRawClass();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  row  =  matrix.getRawClass();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
3464	[BUG]  [BUGGY]  final  int  row  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  row  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  row  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  c	283	None
3484	[BUG]  [BUGGY]  final  int  rank  =  matrix.getRowLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  rank  =  matrix.getRowLength();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  rank  =  matrix.getRowLength();	      final    int    rank    =    matrix.getLength();    	non-compiled	[CE]  cannot  find  symbol	543	None
3501	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	64	None
3502	[BUG]  [BUGGY]  if(c[i][isi]  >  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  r  }  [CE]  not  a  statement  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  r  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  r  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  not  a  statement	64	None
3503	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  r  }  [CE]  not  a  statement  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  r  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  r  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  not  a  statement	64	None
3504	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  presumably  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  presumably  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  presumably	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	64	None
3524	[BUG]  [BUGGY]  index[]  =  matrix.getSize();  [CE]  not  a  statement  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[]  =  matrix.getSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[]  =  matrix.getSize();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  not  a  statement	123	None
3542	[BUG]  [BUGGY]  int  order  =  matrix.getRowDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getRowDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getRowDimension();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
3543	[BUG]  [BUGGY]  int  order  =  matrix.getOrderedDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getOrderedDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getOrderedDimension();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
3544	[BUG]  [BUGGY]  int  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getColumnDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getColumnDimension();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
3564	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  swap,  index,  ordered);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  swap,  index,  ordered);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  swap,  index,  ordered);	      System.arraycopy(c,    0,    b,    swap,    order);    	non-compiled	[CE]  illegal  start  of  type	331	None
3603	[BUG]  [BUGGY]  int  ij  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ij  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ij  =  matrix.getSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
3604	[BUG]  [BUGGY]  int  index  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  index  =  matrix.getSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  index  =  matrix.getSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
3623	[BUG]  [BUGGY]  int  ii  =  matrix.getImpl(i);  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getImpl(i);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getImpl(i);	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  i	142	None
3624	[BUG]  [BUGGY]  int  index  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  index  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  index  =  matrix.getSize();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	142	None
3642	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  && "Invalid  column  or  row  index  selection ";  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  && "Invalid  column  or  row  index  selection ";  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  && "Invalid  column  or  row  index  selection ";	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
3643	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  && "Invalid  column  index  selection ";  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  && "Invalid  column  index  selection ";  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  && "Invalid  column  index  selection ";	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
3644	[BUG]  [BUGGY]  throws  nonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  nonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  nonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
3661	[BUG]  [BUGGY]  int  index  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  matrix.getSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  matrix.getSize();	      	non-compiled	[CE]  cannot  find  symbol	35	None
3662	[BUG]  [BUGGY]  int  index  =  matrix.getRowDimension();  [CE]  array  required,  but  int  found  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  matrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  matrix.getRowDimension();	      	non-compiled	[CE]  array  required,  but  int  found	35	None
3663	[BUG]  [BUGGY]  int  index  =  matrix.getRangeDimensions();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  matrix.getRangeDimensions();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  matrix.getRangeDimensions();	      	non-compiled	[CE]  cannot  find  symbol	35	None
3664	[BUG]  [BUGGY]  int  index  =  matrix.getRangeIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  matrix.getRangeIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  matrix.getRangeIndex();	      	non-compiled	[CE]  cannot  find  symbol	35	None
3684	[BUG]  [BUGGY]  index[i]  =  c,  b;  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c,  b;  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c,  b;	  index[i]    =    b;    	non-compiled	[CE]  ';'  expected	12	None
3703	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  new  int[256];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  new  int[256];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  int[][]  r  =  new  int[256];	  	non-compiled	[CE]  incompatible  types	304	None
3704	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  r  =  matrix.getSlopeDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  int[][]  r  =  matrix.getSlopeDimension();	  	non-compiled	[CE]  cannot  find  symbol	304	None
3705	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  new  double[256];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  r  =  new  double[256];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  r  =  new  double[256];	  	non-compiled	[CE]  incompatible  types	304	None
3722	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  ordered  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  ordered  =  matrix.getSize();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	154	None
3764	[BUG]  [BUGGY]  int[]  order  =  matrix.getSize();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  int[]  order  =  matrix.getSize();  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	int[]  order  =  matrix.getSize();	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
3782	[BUG]  [BUGGY]  if(c  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
3783	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(index[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(index[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
3784	[BUG]  [BUGGY]  if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  c[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
3801	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException " ";  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException " ";  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException " ";	  throws    NonPositiveDefiniteMatrixException       "   ";    	non-compiled	[CE]  ';'  expected	53	None
3822	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[order][b];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[order][b];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[order][b];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  incompatible  types	41	None
3823	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[order][a];  [CE]  cannot  find  symbol  a  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[order][a];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[order][a];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol  a	41	None
3824	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[order][d];  [CE]  cannot  find  symbol  d  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[order][d];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[order][d];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol  d	41	None
3842	[BUG]  [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int  rank  =  matrix.getSize()  -  1;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int  rank  =  matrix.getSize()  -  1;	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	363	None
3862	[BUG]  [BUGGY]  super(matrix.getColumnDimension());  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(matrix.getColumnDimension());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(matrix.getColumnDimension());	      super();    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	172	None
3863	[BUG]  [BUGGY]  super(matrix.getColumnDimension(),  0);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(matrix.getColumnDimension(),  0);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(matrix.getColumnDimension(),  0);	      super();    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	172	None
3864	[BUG]  [BUGGY]  super(matrix.getSlopeDimension());  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(matrix.getSlopeDimension());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(matrix.getSlopeDimension());	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
3904	[BUG]  [BUGGY]  index[]  =  matrix.getSmallIndex();  [CE]  not  a  statement  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[]  =  matrix.getSmallIndex();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[]  =  matrix.getSmallIndex();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  not  a  statement	121	None
3942	[BUG]  [BUGGY]  final  int[][]  e  =  matrix.getEvalDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  final  int[][]  e  =  matrix.getEvalDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	final  int[][]  e  =  matrix.getEvalDimension();	      int[][]    e    =    matrix.getEvalDimension();    	non-compiled	[CE]  cannot  find  symbol	484	None
3964	[BUG]  [BUGGY]  final  int  rank  =  matrix.getSize()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  rank  =  matrix.getSize()  -  1;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  rank  =  matrix.getSize()  -  1;	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	223	None
3981	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(null,  index,  i);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(null,  index,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(null,  index,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	165	None
3983	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(entry,  i,  swap);  [CE]  cannot  find  symbol  entry  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(entry,  i,  swap);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(entry,  i,  swap);	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol  entry	165	None
3984	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(exp,  i);  [CE]  cannot  find  symbol  exp  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(exp,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(exp,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol  exp	165	None
4002	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;	      int[]    r    =    matrix.getRowDimension();    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None
4004	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  b  }  [CE]  not  a  statement  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  b  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  b  }	      int[]    r    =    matrix.getRowDimension();    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    b;    }    	non-compiled	[CE]  not  a  statement	185	None
4022	[BUG]  [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(c[i]  ==  c)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSize();    }    	non-compiled	[CE]  illegal  start  of  expression	512	None
4044	[BUG]  [BUGGY]  int  rank  =  matrix.getLowerBound()  +  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  matrix.getLowerBound()  +  1;  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  matrix.getLowerBound()  +  1;	      int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	322	None
4061	[BUG]  [BUGGY]  int[]  swap  =  matrix.getSwitchCase();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  matrix.getSwitchCase();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  matrix.getSwitchCase();	      	non-compiled	[CE]  cannot  find  symbol	115	None
4062	[BUG]  [BUGGY]  final  int[]  swap  =  matrix.getSwitchCase();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  final  int[]  swap  =  matrix.getSwitchCase();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	final  int[]  swap  =  matrix.getSwitchCase();	      	non-compiled	[CE]  cannot  find  symbol	115	None
4064	[BUG]  [BUGGY]  int[]  swap  =  matrix.getSlopeDimensions();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  matrix.getSlopeDimensions();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  matrix.getSlopeDimensions();	      	non-compiled	[CE]  cannot  find  symbol	115	None
4084	[BUG]  [BUGGY]  if(c[i][i]  <  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  <  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  <  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	125	None
4102	[BUG]  [BUGGY]  final  int[][]  c  =  matrix.getSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int[][]  c  =  matrix.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int[][]  c  =  matrix.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
4103	[BUG]  [BUGGY]  final  single[][]  c  =  matrix.getSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  single[][]  c  =  matrix.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  single[][]  c  =  matrix.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
4104	[BUG]  [BUGGY]  final  two[][]  c  =  matrix.getSingleNodePointer();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  two[][]  c  =  matrix.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  two[][]  c  =  matrix.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
4121	[BUG]  [BUGGY]  if(b  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(b  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(b  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	271	None
4122	[BUG]  [BUGGY]  if(c  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(c  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(c  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	271	None
4141	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
4142	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
4143	[BUG]  [BUGGY]  if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  r  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  r  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  r  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
4144	[BUG]  [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  r  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  r  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  r  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
4163	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  ++i)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  ++i)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  ++i)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
4	[BUG]  [BUGGY]  final  int  ordering  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ordering  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ordering  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  c	284	None
33	[BUG]  [BUGGY]  Arrays.sort(b,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  Arrays.sort(b,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	Arrays.sort(b,  swap);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
34	[BUG]  [BUGGY]  arrays.sort(c,  b);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  arrays.sort(c,  b);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	arrays.sort(c,  b);	      Arrays.sort(c,    swap);    	non-compiled	[CE]  illegal  start  of  type	333	None
62	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  &&  swap[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop  &&  swap[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop  &&  swap[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
64	[BUG]  [BUGGY]  for(int  loop  =  false;  loop  &&  index[r]!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  loop  =  false;  loop  &&  index[r]!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  loop  =  false;  loop  &&  index[r]!=  0)  {	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  ';'  expected	184	None
94	[BUG]  [BUGGY]  if(c[i][isi]  >=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  >=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  >=  b[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	63	None
153	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  ordered;  ++i)  {  swap[i]  =  c;  }  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  ordered;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  ordered;  ++i)  {  swap[i]  =  c;  }	      int[]    r    =    matrix.getRowDimension();    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    b;    }    	non-compiled	[CE]  incompatible  types	185	None
154	[BUG]  [BUGGY]  int[]  r  =  matrix.getColumnDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getColumnDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getColumnDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      int[]    r    =    matrix.getRowDimension();    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    b;    }    	non-compiled	[CE]  incompatible  types	185	None
184	[BUG]  [BUGGY]  final  int  order  =  matrix.getSingleColumnDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getSingleColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getSingleColumnDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
212	[BUG]  [BUGGY]  r  =  matrix.getSlope(index);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.getSlope(index);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.getSlope(index);	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
213	[BUG]  [BUGGY]  r  =  matrix.getSlopeDimensions();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.getSlopeDimensions();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.getSlopeDimensions();	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
214	[BUG]  [BUGGY]  r  =  matrix.getSlope(len  +  1);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix.getSlope(len  +  1);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix.getSlope(len  +  1);	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
243	[BUG]  [BUGGY]  index[i]  =(b  ==  null)?  b.intValue()  :  b.intValue();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =(b  ==  null)?  b.intValue()  :  b.intValue();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =(b  ==  null)?  b.intValue()  :  b.intValue();	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol	163	None
272	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  false);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  false);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  false);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
273	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  2);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  2);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  2);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
274	[BUG]  [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small,  matrix);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Matrix.NEGATIVE_INFINITY,  small,  matrix);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Matrix.NEGATIVE_INFINITY,  small,  matrix);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
302	[BUG]  [BUGGY]  int[][]  r  =  matrix.getSmallRowIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getSmallRowIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getSmallRowIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	144	None
303	[BUG]  [BUGGY]  int[][]  r  =  matrix.getSmallReturnIndex();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getSmallReturnIndex();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getSmallReturnIndex();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	144	None
304	[BUG]  [BUGGY]  int[][]  r  =  matrix.getSmallRef();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getSmallRef();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getSmallRef();	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	144	None
334	[BUG]  [BUGGY]  final  int[][]  ordinal  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordinal  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordinal  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	362	None
363	[BUG]  [BUGGY]  index  =  matrix.getSmallIndex(),  swap);  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.getSmallIndex(),  swap);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.getSmallIndex(),  swap);	      r    =    matrix.getRange();    	non-compiled	[CE]  ';'  expected	244	None
392	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(entry,  i);  [CE]  cannot  find  symbol  entry  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(entry,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(entry,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol  entry	165	None
393	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(expand,  i);  [CE]  cannot  find  symbol  expand  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(expand,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(expand,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  cannot  find  symbol  expand	165	None
394	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(int,  i);  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(int,  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(int,  i);	      b[i]    =    b[i];    	non-compiled	[CE]  '.class'  expected	165	None
421	[BUG]  [BUGGY]  ';'  =  matrix.getSlope();  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  ';'  =  matrix.getSlope();  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	';'  =  matrix.getSlope();	      	non-compiled	[CE]  ';'  expected	55	None
422	[BUG]  [BUGGY]  ';'  =  Math.round(matrix.getSlope());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  ';'  =  Math.round(matrix.getSlope());  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	';'  =  Math.round(matrix.getSlope());	      	non-compiled	[CE]  ';'  expected	55	None
423	[BUG]  [BUGGY]  _findRoot(Matrix.NONE,  Small.MAX_VALUE);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  _findRoot(Matrix.NONE,  Small.MAX_VALUE);  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	_findRoot(Matrix.NONE,  Small.MAX_VALUE);	      	non-compiled	[CE]  ';'  expected	55	None
424	[BUG]  [BUGGY]  ';'  =  Math.round(math.round(small));  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  ';'  =  Math.round(math.round(small));  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	';'  =  Math.round(math.round(small));	      	non-compiled	[CE]  ';'  expected	55	None
452	[BUG]  [BUGGY]  this(Math.random(),  BigDecimal.MAX_VALUE);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  BigDecimal.MAX_VALUE);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  BigDecimal.MAX_VALUE);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
453	[BUG]  [BUGGY]  this(Math.random(),  Small.MIN_VALUE);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Small.MIN_VALUE);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Small.MIN_VALUE);	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
454	[BUG]  [BUGGY]  this(Math.random(),  Math.pow(10,  Small.MAX_VALUE));  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(Math.random(),  Math.pow(10,  Small.MAX_VALUE));  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(Math.random(),  Math.pow(10,  Small.MAX_VALUE));	      this(Math.random(),    Small.MAX_VALUE);    	non-compiled	[CE]  ';'  expected	102	None
541	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  [Delete]  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	[Delete]	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	273	None
543	[BUG]  [BUGGY]  if(c!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(c!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(c!=  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c.doubleValue();  }	      if(switch    ==    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	273	None
572	[BUG]  [BUGGY]  if(c[i][isi]  ==  c[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  c[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  c[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	64	None
574	[BUG]  [BUGGY]  if(c[i][isi]!=  c[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  cannot  find  symbol  i  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]!=  c[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]!=  c[i][isi])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  cannot  find  symbol  i	64	None
604	[BUG]  [BUGGY]  b[order]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  b[order]  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	b[order]  =  matrix.getSlopeDimension();	      b[i]    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	42	None
634	[BUG]  [BUGGY]  int  order  =  matrix.getSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int  order  =  matrix.getSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int  order  =  matrix.getSize();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	363	None
664	[BUG]  [BUGGY]  int[]  swap  =  new  double[order],  order;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  double[order],  order;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  double[order],  order;	  int[]    swap    =    new    double[order];    	non-compiled	[CE]  incompatible  types	113	None
693	[BUG]  [BUGGY]  int  order  =  matrix.getOrderedSize();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  order  =  matrix.getOrderedSize();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  order  =  matrix.getOrderedSize();	      int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	122	None
751	[BUG]  [BUGGY]  double[][]  b  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  double[][]  b  =  matrix.getColumnDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	double[][]  b  =  matrix.getColumnDimension();	      	non-compiled	[CE]  incompatible  types	45	None
752	[BUG]  [BUGGY]  double[][]  b  =  matrix.getSingleNodePointer();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  double[][]  b  =  matrix.getSingleNodePointer();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	double[][]  b  =  matrix.getSingleNodePointer();	      	non-compiled	[CE]  cannot  find  symbol	45	None
753	[BUG]  [BUGGY]  double[][]  b  =  MatrixUtils.unwrapAndThrowAsIAE(c);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  double[][]  b  =  MatrixUtils.unwrapAndThrowAsIAE(c);  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	double[][]  b  =  MatrixUtils.unwrapAndThrowAsIAE(c);	      	non-compiled	[CE]  cannot  find  symbol	45	None
754	[BUG]  [BUGGY]  double[][]  b  =(double[][])Matrix.newInstance(c);  [CE]  cannot  find  symbol  Matrix  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  double[][]  b  =(double[][])Matrix.newInstance(c);  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	double[][]  b  =(double[][])Matrix.newInstance(c);	      	non-compiled	[CE]  cannot  find  symbol  Matrix	45	None
784	[BUG]  [BUGGY]  setSmallIndex(matric.getColumnDimension()  -  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getColumnDimension()  -  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getColumnDimension()  -  1);	      setSmallIndex(matric.getColumnDimension()    +    1);    	non-compiled	[CE]  ';'  expected	575	None
814	[BUG]  [BUGGY]  int[]  swap  =  new  int[order],  order  -  1;  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[]  swap  =  new  int[order],  order  -  1;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[]  swap  =  new  int[order],  order  -  1;	  int[]    swap    =    new    int[order]    -    1;    	non-compiled	[CE]  ';'  expected	114	None
841	[BUG]  [BUGGY]  if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
843	[BUG]  [BUGGY]  if(c[i][isi]!=  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]!=  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]!=  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
844	[BUG]  [BUGGY]  if(c[i][isi]  <  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  <  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  <  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  r;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  ']'  expected	61	None
873	[BUG]  [BUGGY]  if(c[i][i]  >=  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  >=  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  >=  b[i][i])  {  int  r  =  0;  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	125	None
903	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  matrix[i];  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  matrix[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  matrix[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
904	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  root[i];  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  root[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension();  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  root[i];  }	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
932	[BUG]  [BUGGY]  index[][]  e  =  matrix,  matrix.getData();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  matrix,  matrix.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  matrix,  matrix.getData();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  ';'  expected	243	None
933	[BUG]  [BUGGY]  index[][]  e  =  matrix  root.getData();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  matrix  root.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  matrix  root.getData();	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  ';'  expected	243	None
934	[BUG]  [BUGGY]  index[][]  e  =  matrix.getData(r);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  matrix.getData(r);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  matrix.getData(r);	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
962	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(tolerance  *  size),  absoluteAccuracy);  [CE]  cannot  find  symbol  tolerance  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(tolerance  *  size),  absoluteAccuracy);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(tolerance  *  size),  absoluteAccuracy);	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size),    absoluteAccuracy);    	non-compiled	[CE]  cannot  find  symbol  tolerance	214	None
992	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Math.abs(small)  ==  Math.abs(relativeAccuracy  *  size));  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Math.abs(small)  ==  Math.abs(relativeAccuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =(Math.abs(small)  ==  Math.abs(relativeAccuracy  *  size));	  	non-compiled	[CE]  cannot  find  symbol	174	None
993	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Math.abs(small)  <=  Math.abs(relativeAccuracy  *  size));  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =(Math.abs(small)  <=  Math.abs(relativeAccuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =(Math.abs(small)  <=  Math.abs(relativeAccuracy  *  size));	  	non-compiled	[CE]  cannot  find  symbol	174	None
994	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  matrix  =  MatrixUtils.createMatrix(small,  false);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  matrix  =  MatrixUtils.createMatrix(small,  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    matrix  =  MatrixUtils.createMatrix(small,  false);	  	non-compiled	[CE]  cannot  find  symbol	174	None
995	[BUG]  [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      if(matrix  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);	  	non-compiled	[CE]  cannot  find  symbol	174	None
1023	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  >=  0;)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  true;  loop  >=  0;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  true;  loop  >=  0;)  {	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	183	None
1053	[BUG]  [BUGGY]  if(b[i][i]  ==  c[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(b[i][i]  ==  c[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(b[i][i]  ==  c[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  b[i][i]  =  c[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  illegal  start  of  expression	124	None
1082	[BUG]  [BUGGY]  int[][]  r  =  new  int[2];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  new  int[2];  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  new  int[2];	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
1084	[BUG]  [BUGGY]  int[][]  r  =  new  int[order],  ordered;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  new  int[order],  ordered;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  new  int[order],  ordered;	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  incompatible  types	143	None
1111	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException "  = ";  [CE]  [CONTEXT]      [BUGGY]  throws  NonPositiveDefiniteMatrixException "  = ";  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throws  NonPositiveDefiniteMatrixException "  = ";	  throws    NonPositiveDefiniteMatrixException       "   ");    	non-compiled	[CE]  	51	None
1142	[BUG]  [BUGGY]  final  double[][]  r  =  matrix,  matrix.getSmallDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  r  =  matrix,  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  r  =  matrix,  matrix.getSmallDimension();	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	153	None
1144	[BUG]  [BUGGY]  final  doubl[][]  r  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  doubl[][]  r  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  doubl[][]  r  =  matrix.getSmallDimension();	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	153	None
1172	[BUG]  [BUGGY]  final  int  order  =  matrix,  matrix.getOrderDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  order  =  matrix,  matrix.getOrderDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  order  =  matrix,  matrix.getOrderDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	2	None
1173	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getOrderDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  ordered  =  matrix.getOrderDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  ordered  =  matrix.getOrderDimension();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
1204	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  small);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  small);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  small);	  for(int    i    =    0;    i    <    swap;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	83	None
1262	[BUG]  [BUGGY]  int[]  rank  =  matrix.getSize();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  rank  =  matrix.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  rank  =  matrix.getSize();	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1264	[BUG]  [BUGGY]  int[]  index  =  matrix.getShape();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  matrix.getShape();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  matrix.getShape();	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
1294	[BUG]  [BUGGY]  int[]  index  =  new  int[sum  +  1];  [CE]  cannot  find  symbol  sum  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[sum  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[sum  +  1];	  int[]    index    =    new    int[order    +    1];    	non-compiled	[CE]  cannot  find  symbol  sum	205	None
1322	[BUG]  [BUGGY]  index[i]  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[i]  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[i]  =  matrix.getSlopeDimension();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	124	None
1323	[BUG]  [BUGGY]  index[i]  =  matrix.getSlope(i);  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[i]  =  matrix.getSlope(i);  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[i]  =  matrix.getSlope(i);	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	124	None
1324	[BUG]  [BUGGY]  index[i]  =  matrix.getSlopeValue();  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[i]  =  matrix.getSlopeValue();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[i]  =  matrix.getSlopeValue();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    b[i][i]    =    c[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	124	None
1353	[BUG]  [BUGGY]  int  rank  =  matrix.size()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.size()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.size()  -  1;	      int    rank    =    matrix.getRangeIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	242	None
1381	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	122	None
1382	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }	      int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	122	None
1383	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  new  double[order];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  new  double[order];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  new  double[order];  }	      int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	122	None
1384	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c.doubleValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c.doubleValue();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c.doubleValue();  }	      int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	122	None
1414	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "  - ");  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "  - ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException( "  - ");	  throw    new    NonPositiveDefiniteMatrixException(   "   "));    	non-compiled	[CE]  ';'  expected	383	None
1442	[BUG]  [BUGGY]  final  double[][]  c  =  matrix,  matrix.getCenterDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix,  matrix.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix,  matrix.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  ';'  expected	364	None
1444	[BUG]  [BUGGY]  final  doubl[][]  c  =  matrix.getCenterDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  doubl[][]  c  =  matrix.getCenterDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  doubl[][]  c  =  matrix.getCenterDimension();	  final    double[][]    c    =    matrix.getCenterDimension();    	non-compiled	[CE]  cannot  find  symbol	364	None
1471	[BUG]  [BUGGY]  if(index[i]  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index[i]  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index[i]  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1472	[BUG]  [BUGGY]  if(index  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  c;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1474	[BUG]  [BUGGY]  if(index  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(index  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(index  ==  -1)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1504	[BUG]  [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSlopeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix,  matrix.getSlopeDimension();	  final    double[][]    c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  ';'  expected	363	None
1533	[BUG]  [BUGGY]  final  int  order  =  matrix.getSize(size);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  order  =  matrix.getSize(size);  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  order  =  matrix.getSize(size);	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	154	None
1564	[BUG]  [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "Invalid  row  or  column  index  selection ");  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  throw  new  NonPositiveDefiniteMatrixException( "Invalid  row  or  column  index  selection ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throw  new  NonPositiveDefiniteMatrixException( "Invalid  row  or  column  index  selection ");	  throw    new    NonPositiveDefiniteMatrixException(   "   ");    	non-compiled	[CE]  ';'  expected	54	None
1594	[BUG]  [BUGGY]  final  int  order  =  matrix.getColumnDimension()  +  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int  order  =  matrix.getColumnDimension()  +  1;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int  order  =  matrix.getColumnDimension()  +  1;	      final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	222	None
1622	[BUG]  [BUGGY]  final  int  order  =  matrix,  matrix.getSmallDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix,  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix,  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	72	None
1623	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  ordered  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  ordered  =  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	72	None
1624	[BUG]  [BUGGY]  final  int  ordering  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  ordering  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  ordering  =  matrix.getSmallDimension();	  final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	72	None
1652	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getDimension();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  cannot  find  symbol	133	None
1654	[BUG]  [BUGGY]  final  double[][]  c  =  matrix,  matrix.getDecomposition();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix,  matrix.getDecomposition();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix,  matrix.getDecomposition();	  final    double[][]    c    =    matrix.getDecomposition();    	non-compiled	[CE]  ';'  expected	133	None
1681	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
1712	[BUG]  [BUGGY]  int[][]  r  =  matrix.getRawReturnType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getRawReturnType();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getRawReturnType();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	145	None
1713	[BUG]  [BUGGY]  int[][]  r  =  matrix  root.getRawClass();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix  root.getRawClass();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix  root.getRawClass();	      int[][]    r    =    matrix.getRawClass();    	non-compiled	[CE]  ';'  expected	145	None
1773	[BUG]  [BUGGY]  index[][]  e  =  matrix  root.getEquals();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  e  =  matrix  root.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  e  =  matrix  root.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  ';'  expected	245	None
1774	[BUG]  [BUGGY]  index[][]  is  =  matrix.getEquals();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index[][]  is  =  matrix.getEquals();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index[][]  is  =  matrix.getEquals();	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
1802	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(tolerance  *  size));  [CE]  cannot  find  symbol  tolerance  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(tolerance  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(tolerance  *  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  cannot  find  symbol  tolerance	212	None
1804	[BUG]  [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  turreAccuracy  *  size));  [CE]  ')'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small)+  Math.abs(inverse  turreAccuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small)+  Math.abs(inverse  turreAccuracy  *  size));	      super(Math.abs(small)+    Math.abs(relativeAccuracy    *    size));    	non-compiled	[CE]  ')'  expected	212	None
1832	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(small,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(small,  Integer.MAX_VALUE);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(small,  Integer.MAX_VALUE);	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1833	[BUG]  [BUGGY]  Matrix  matrix  =(Math.abs(small)  ==  Math.abs(relativeAccuracy  *  size));  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =(Math.abs(small)  ==  Math.abs(relativeAccuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =(Math.abs(small)  ==  Math.abs(relativeAccuracy  *  size));	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1834	[BUG]  [BUGGY]  Matrix  matrix  =(Math.abs(small)  <=  Math.abs(relativeAccuracy  *  size));  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =(Math.abs(small)  <=  Math.abs(relativeAccuracy  *  size));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =(Math.abs(small)  <=  Math.abs(relativeAccuracy  *  size));	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
1864	[BUG]  [BUGGY]  throws  new  NonPositiveDefiniteMatrixException( "Undefined  parameter: ");  [CE]  <identifier>  expected  [CONTEXT]      [BUGGY]  throws  new  NonPositiveDefiniteMatrixException( "Undefined  parameter: ");  [BUGGY]      final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	throws  new  NonPositiveDefiniteMatrixException( "Undefined  parameter: ");	  throws    new    NonPositiveDefiniteMatrixException(   "   ");    	non-compiled	[CE]  <identifier>  expected	92	None
1892	[BUG]  [BUGGY]  b[i]  =(double)Math.floor(c,  swap[i]);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =(double)Math.floor(c,  swap[i]);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =(double)Math.floor(c,  swap[i]);	      b[i]    =    b[i];    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	165	None
1894	[BUG]  [BUGGY]  b[i]  =(double)Math.ceil(c,  swap[i]);  [CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =(double)Math.ceil(c,  swap[i]);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =(double)Math.ceil(c,  swap[i]);	      b[i]    =    b[i];    	non-compiled	[CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;	165	None
1924	[BUG]  [BUGGY]  final  int  rank  =  matrix.getLowerBound()  +  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  rank  =  matrix.getLowerBound()  +  1;  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  rank  =  matrix.getLowerBound()  +  1;	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	321	None
1952	[BUG]  [BUGGY]  int[][]  rank  =  matrix.getRowDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  rank  =  matrix.getRowDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  rank  =  matrix.getRowDimension();	      int[][]    rank    =    matrix.getSize();    	non-compiled	[CE]  incompatible  types	483	None
1954	[BUG]  [BUGGY]  int[][]  rank  =  matrix  root.getSize();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  rank  =  matrix  root.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  rank  =  matrix  root.getSize();	      int[][]    rank    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	483	None
1983	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  swap,  0,  order,  permutation);  [CE]  cannot  find  symbol  permutation  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  swap,  0,  order,  permutation);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  swap,  0,  order,  permutation);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  cannot  find  symbol  permutation	95	None
1984	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  swap,  0,  order,  multiplier);  [CE]  cannot  find  symbol  multiplier  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  swap,  0,  order,  multiplier);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  swap,  0,  order,  multiplier);	      System.arraycopy(c,    0,    b,    swap,    0,    order);    	non-compiled	[CE]  cannot  find  symbol  multiplier	95	None
2012	[BUG]  [BUGGY]  int  rank  =  matrix.getLength();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  matrix.getLength();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  matrix.getLength();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol	41	None
2014	[BUG]  [BUGGY]  int  rank  =  matrix  root.getSize();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  int  rank  =  matrix  root.getSize();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	int  rank  =  matrix  root.getSize();	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  ';'  expected	41	None
2044	[BUG]  [BUGGY]  final  int  rank  =  matrix.getGeometricSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  rank  =  matrix.getGeometricSize();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  rank  =  matrix.getGeometricSize();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	323	None
2103	[BUG]  [BUGGY]  if(c[i][i]  ==  b[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  ==  b[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  ==  b[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None
2104	[BUG]  [BUGGY]  if(b[i][i]  ==  c[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(b[i][i]  ==  c[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(b[i][i]  ==  c[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  illegal  start  of  expression	121	None
2133	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSingleComponentType();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getSingleComponentType();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getSingleComponentType();	  final    double[][]    c    =    matrix.getComponentType();    	non-compiled	[CE]  cannot  find  symbol	361	None
2162	[BUG]  [BUGGY]  int  r  =(index  >>  0)?  0  :  index.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '>>'  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  int  r  =(index  >>  0)?  0  :  index.doubleValue();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	int  r  =(index  >>  0)?  0  :  index.doubleValue();	  int    r    =(index    <    0)?    0    :    index.doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	193	None
2193	[BUG]  [BUGGY]  int  rank  =  matrix.getRangeIndex()  -  index;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getRangeIndex()  -  index;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getRangeIndex()  -  index;	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
2194	[BUG]  [BUGGY]  int  rank  =  matrix.getRangeIndex(),  r;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getRangeIndex(),  r;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getRangeIndex(),  r;	      int    rank    =    matrix.getRangeIndex();    	non-compiled	[CE]  <identifier>  expected	243	None
2252	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getEntry(int  order);  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getEntry(int  order);  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getEntry(int  order);	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  '.class'  expected	134	None
2254	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getEntry(ordinal,  order);  [CE]  cannot  find  symbol  ordinal  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getEntry(ordinal,  order);  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getEntry(ordinal,  order);	  final    double[][]    c    =    matrix.getEntry();    	non-compiled	[CE]  cannot  find  symbol  ordinal	134	None
2283	[BUG]  [BUGGY]  e  =  matrix.getSize();  [CE]  cannot  find  symbol  e  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  e  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	e  =  matrix.getSize();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  e	142	None
2284	[BUG]  [BUGGY]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  r  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  r  =  matrix.getSize();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	r  =  matrix.getSize();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  r	142	None
2312	[BUG]  [BUGGY]  final  int  order  =  matrix,  matrix.getOrderedDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  order  =  matrix,  matrix.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  order  =  matrix,  matrix.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  ';'  expected	1	None
2314	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getOrderedDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  int  ordered  =  matrix.getOrderedDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  int  ordered  =  matrix.getOrderedDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  illegal  start  of  type	1	None
2342	[BUG]  [BUGGY]  setSmallIndex(matrix.getShape());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getShape());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getShape());	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
2343	[BUG]  [BUGGY]  setSmallIndex(matrix.getStandardDecomposition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getStandardDecomposition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getStandardDecomposition());	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
2344	[BUG]  [BUGGY]  setSmallIndex(matrician.getDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrician.getDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrician.getDimension());	      setSmallIndex(matrix.getDimension());    	non-compiled	[CE]  ';'  expected	573	None
2374	[BUG]  [BUGGY]  r  =  matrix.getSize();  [CE]  cannot  find  symbol  r  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  r  =  matrix.getSize();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	r  =  matrix.getSize();	      b    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  r	94	None
2461	[BUG]  [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getShape();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  c[i]  =  matrix.getShape();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    c[i]  =  matrix.getShape();	  	non-compiled	[CE]  cannot  find  symbol	164	None
2462	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '-')  {  b[i]  =  c;  if(c  ==  '+'  ||  c  ==  '-')  {  order++;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '-')  {  b[i]  =  c;  if(c  ==  '+'  ||  c  ==  '-')  {  order++;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '-')  {  b[i]  =  c;  if(c  ==  '+'  ||  c  ==  '-')  {  order++;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2463	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '-')  {  b[i]  =  c;  if(c  ==  '+')  {  order++;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '-')  {  b[i]  =  c;  if(c  ==  '+')  {  order++;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '-')  {  b[i]  =  c;  if(c  ==  '+')  {  order++;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2464	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  i  =  0;  if(c  ==  '-')  {  order++;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  i  =  0;  if(c  ==  '-')  {  order++;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '.')  {  i  =  0;  if(c  ==  '-')  {  order++;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2465	[BUG]  [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  if(c  ==  '-')  {  order++;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]      b[i]  =  b[i];  if(c  ==  '.')  {  b[i]  =  c;  if(c  ==  '-')  {  order++;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	        b[i]    =    b[i];    if(c  ==  '.')  {  b[i]  =  c;  if(c  ==  '-')  {  order++;  }	  	non-compiled	[CE]  illegal  start  of  expression	164	None
2493	[BUG]  [BUGGY]  int[]  index  =  new  int[order]  +  swap  /  swap;  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order]  +  swap  /  swap;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[order]  +  swap  /  swap;	  int[]    index    =    new    int[order]    +    swap;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	32	None
2494	[BUG]  [BUGGY]  int[]  index  =  new  int[2]  +  swap;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[2]  +  swap;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[2]  +  swap;	  int[]    index    =    new    int[order]    +    swap;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	32	None
2523	[BUG]  [BUGGY]  this.index  =  matrix.getSize()  -  1;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this.index  =  matrix.getSize()  -  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this.index  =  matrix.getSize()  -  1;	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	62	None
2553	[BUG]  [BUGGY]  final  int[][]  r  =  matrix.getRootDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  r  =  matrix.getRootDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  r  =  matrix.getRootDimension();	      final    int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	221	None
2584	[BUG]  [BUGGY]  final  int  rank  =  matrix,  matrix.getLowDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  rank  =  matrix,  matrix.getLowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  rank  =  matrix,  matrix.getLowDimension();	      final    int    rank    =    matrix.getLowDimension();    	non-compiled	[CE]  ';'  expected	545	None
2612	[BUG]  [BUGGY]  final  int  order  =  matrix,  matrix.getSingleDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix,  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix,  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  ';'  expected	74	None
2613	[BUG]  [BUGGY]  final  int  ordered  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  ordered  =  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  ordered  =  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
2614	[BUG]  [BUGGY]  final  int  ordering  =  matrix.getSingleDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  ordering  =  matrix.getSingleDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  ordering  =  matrix.getSingleDimension();	  final    int    order    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None
2643	[BUG]  [BUGGY]  index  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index  =  matrix.getSlopeDimension();	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	43	None
2644	[BUG]  [BUGGY]  matrix  =  matrix.getSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  matrix  =  matrix.getSlopeDimension();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	matrix  =  matrix.getSlopeDimension();	      c    =    matrix.getSlopeDimension();    	non-compiled	[CE]  cannot  find  symbol	43	None
2674	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  orders;  ++i)  {  [CE]  cannot  find  symbol  orders  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  orders;  ++i)  {  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	for(int  i  =  0;  i  <  orders;  ++i)  {	  for(int    i    =    0;    i    <    indent;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  orders	34	None
2703	[BUG]  [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSmallDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix,  matrix.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  ';'  expected	4	None
2704	[BUG]  [BUGGY]  final  doubl[][]  c  =  matrix.getSmallDimension();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  doubl[][]  c  =  matrix.getSmallDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  doubl[][]  c  =  matrix.getSmallDimension();	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
2734	[BUG]  [BUGGY]  if(c!=  0.0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(c!=  0.0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(c!=  0.0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	      if(switch!=    0)    {    for(int    i    =    0;    i    <    order;    ++i)    {    swap[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	272	None
2762	[BUG]  [BUGGY]  this(null,  matrix.getSmallDecomposition(),  matrix);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallDecomposition(),  matrix);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallDecomposition(),  matrix);	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
2792	[BUG]  [BUGGY]  b[i]  =  matrix.getIntValue(i);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getIntValue(i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getIntValue(i);	      b[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	161	None
2793	[BUG]  [BUGGY]  b[i]  =  matrix.getImpl();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getImpl();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getImpl();	      b[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	161	None
2794	[BUG]  [BUGGY]  b[i]  =  matrix.getDataItem(i);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getDataItem(i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getDataItem(i);	      b[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	161	None
2824	[BUG]  [BUGGY]  index[i]  =  matrix.getImpl();  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[i]  =  matrix.getImpl();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[i]  =  matrix.getImpl();	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  cannot  find  symbol  i	123	None
2852	[BUG]  [BUGGY]  int[]  ordered  =  matrix.getMinimumSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  matrix.getMinimumSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  matrix.getMinimumSize();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  cannot  find  symbol	24	None
2853	[BUG]  [BUGGY]  int[]  ordered  =  matrix  root.getSize();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  ordered  =  matrix  root.getSize();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  ordered  =  matrix  root.getSize();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  ';'  expected	24	None
2881	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[switch  +  1];  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[switch  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  index  =  new  int[switch  +  1];	  	non-compiled	[CE]  illegal  start  of  expression	204	None
2882	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[switch.length  +  1];  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[switch.length  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  index  =  new  int[switch.length  +  1];	  	non-compiled	[CE]  illegal  start  of  expression	204	None
2884	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  matrix.getShape();  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  matrix.getShape();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  index  =  matrix.getShape();	  	non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	204	None
2885	[BUG]  [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[switch.length];  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[order  +  1];  int[]  index  =  new  int[switch.length];  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]    index    =    new    int[order    +    1];    int[]  index  =  new  int[switch.length];	  	non-compiled	[CE]  illegal  start  of  expression	204	None
2912	[BUG]  [BUGGY]  setSmallIndex(matrix.getDimension());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  setSmallIndex(matrix.getDimension());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	setSmallIndex(matrix.getDimension());	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
2913	[BUG]  [BUGGY]  setSmallIndex(matrix.getSmallIndex());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  setSmallIndex(matrix.getSmallIndex());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	setSmallIndex(matrix.getSmallIndex());	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
2914	[BUG]  [BUGGY]  setSmallIndex(matrix.getSize());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  setSmallIndex(matrix.getSize());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	setSmallIndex(matrix.getSize());	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	61	None
2941	[BUG]  [BUGGY]  matrix  =  MatrixUtils.createMatrix(c,  b);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  matrix  =  MatrixUtils.createMatrix(c,  b);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	matrix  =  MatrixUtils.createMatrix(c,  b);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2942	[BUG]  [BUGGY]  matrix  =  MatrixUtils.createMatrix(math.sin(c,  b));  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  matrix  =  MatrixUtils.createMatrix(math.sin(c,  b));  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	matrix  =  MatrixUtils.createMatrix(math.sin(c,  b));	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2943	[BUG]  [BUGGY]  matrix  =  MatrixUtils.createMatrix(c,  swap);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  matrix  =  MatrixUtils.createMatrix(c,  swap);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	matrix  =  MatrixUtils.createMatrix(c,  swap);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2944	[BUG]  [BUGGY]  matrix  =  MatrixUtils.decomposeMatrix(c,  swap);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  matrix  =  MatrixUtils.decomposeMatrix(c,  swap);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	matrix  =  MatrixUtils.decomposeMatrix(c,  swap);	      this(Matrix.NEGATIVE_INFINITY,    small);    	non-compiled	[CE]  ';'  expected	103	None
2973	[BUG]  [BUGGY]  int[]  r  =  matrix.getRelativeSize();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRelativeSize();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getRelativeSize();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
2974	[BUG]  [BUGGY]  int[]  r  =  matrix.getImpl();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getImpl();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getImpl();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
3002	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop!=  vnt;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop!=  vnt;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop!=  vnt;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
3003	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop  <  vnt;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop  <  vnt;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop  <  vnt;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
3004	[BUG]  [BUGGY]  for(boolean  loop  =  true;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  true;  loop!=  0;)  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  true;  loop!=  0;)  {	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	154	None
3033	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getEvalDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getEvalDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  e  =  matrix.getEvalDimension();	  	non-compiled	[CE]  cannot  find  symbol	304	None
3034	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getEquals();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getEquals();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  e  =  matrix.getEquals();	  	non-compiled	[CE]  cannot  find  symbol	304	None
3035	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getSingleNodePointer();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getSingleNodePointer();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  e  =  matrix.getSingleNodePointer();	  	non-compiled	[CE]  cannot  find  symbol	304	None
3064	[BUG]  [BUGGY]  final  int  ordering  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  ordering  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  ordering  =  matrix.getSmallDimension();	      final    int    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	22	None
3093	[BUG]  [BUGGY]  if(matrix  ==  null)  {  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(matrix  ==  null)  {  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(matrix  ==  null)  {  int[]  r  =  matrix.getRowDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  c;  }	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	184	None
3094	[BUG]  [BUGGY]  int[]  r  =  matrix.getColumnDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  r  =  matrix.getColumnDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  r  =  matrix.getColumnDimension();  for(int  i  =  0;  i  <  order;  ++i)  {  swap[i]  =  b;  }	  for(boolean    loop    =    false;    loop    &&    index[r]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	184	None
3123	[BUG]  [BUGGY]  final  int  count  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  count  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  count  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  c	283	None
3124	[BUG]  [BUGGY]  final  int  range  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  range  =  matrix.getRowDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  range  =  matrix.getRowDimension();	      final    int    rank    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  c	283	None
3154	[BUG]  [BUGGY]  index[i]  =  c.equals(b[i]);  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  index[i]  =  c.equals(b[i]);  [BUGGY]    }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	index[i]  =  c.equals(b[i]);	  index[i]    =    c;    	non-compiled	[CE]  incompatible  types	11	None
3184	[BUG]  [BUGGY]  index[i]  =  matrix.getSmallIndex()  -  1;  [CE]  cannot  find  symbol  i  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index[i]  =  matrix.getSmallIndex()  -  1;  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index[i]  =  matrix.getSmallIndex()  -  1;	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	121	None
3211	[BUG]  [BUGGY]  setSmallIndex(matrix.getColumnDimension()  +  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getColumnDimension()  +  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getColumnDimension()  +  1);	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
3213	[BUG]  [BUGGY]  setSmallIndex(matrix.getColumnDimension(),  matrix.getRowDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getColumnDimension(),  matrix.getRowDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getColumnDimension(),  matrix.getRowDimension());	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
3214	[BUG]  [BUGGY]  setSmallIndex(matrix.getColumnDimension()  -  1);  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matrix.getColumnDimension()  -  1);  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matrix.getColumnDimension()  -  1);	      setSmallIndex(matrix.getColumnDimension());    	non-compiled	[CE]  ';'  expected	572	None
3244	[BUG]  [BUGGY]  int  order  =  matrix.size();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  order  =  matrix.size();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  order  =  matrix.size();	      	non-compiled	[CE]  cannot  find  symbol	75	None
3271	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  e  =  matrix.getEvalDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  e  =  matrix.getEvalDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  int[][]  e  =  matrix.getEvalDimension();	  	non-compiled	[CE]  cannot  find  symbol	304	None
3272	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  double[][]  e  =  matrix.getColumnDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  double[][]  e  =  matrix.getColumnDimension();	  	non-compiled	[CE]  incompatible  types	304	None
3274	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  e  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[6][order];  final  int[][]  e  =  matrix.getColumnDimension();  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final    double[][]    b    =    new    double[6][order];    final  int[][]  e  =  matrix.getColumnDimension();	  	non-compiled	[CE]  incompatible  types	304	None
3303	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  orders;  ++i)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  for(int  i  =  0;  i  <  orders;  ++i)  {  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	for(int  i  =  0;  i  <  orders;  ++i)  {	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None
3332	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[0];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[0];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[0];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
3334	[BUG]  [BUGGY]  final  int[]  swap  =  new  int[10];  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  final  int[]  swap  =  new  int[10];  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	final  int[]  swap  =  new  int[10];	      this(null,    matrix.getSmallDecomposition(),    small);    	non-compiled	[CE]  ';'  expected	104	None
3393	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  ordinal);  [CE]  cannot  find  symbol  ordinal  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  ordinal);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  ordinal);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  cannot  find  symbol  ordinal	93	None
3394	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  int  order);  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  int  order);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  int  order);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  '.class'  expected	93	None
3421	[BUG]  [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
3422	[BUG]  [BUGGY]  if(c[i][isi]!=  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]!=  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]!=  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
3424	[BUG]  [BUGGY]  if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  ']'  expected	65	None
3452	[BUG]  [BUGGY]  super(Math.abs(small),  Integer.MAX_VALUE);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small),  Integer.MAX_VALUE);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small),  Integer.MAX_VALUE);	      super(Math.abs(small));    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	213	None
3454	[BUG]  [BUGGY]  super(Math.abs(small),  Math.abs(int));  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(Math.abs(small),  Math.abs(int));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(Math.abs(small),  Math.abs(int));	      super(Math.abs(small));    	non-compiled	[CE]  '.class'  expected	213	None
3483	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getCellSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getCellSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getCellSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	131	None
3484	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getMinimumSize();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getMinimumSize();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getMinimumSize();	  final    double[][]    c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	131	None
3541	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[size][c];  [CE]  cannot  find  symbol  size  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[size][c];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[size][c];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  cannot  find  symbol  size	41	None
3542	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[int][c];  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[int][c];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[int][c];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  '.class'  expected	41	None
3544	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[2][c];  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[2][c];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[2][c];	  final    double[][]    b    =    new    double[order][c];    	non-compiled	[CE]  incompatible  types	41	None
3573	[BUG]  [BUGGY]  if(size  ==  0)  {  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  else  {  throw  new  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(size  ==  0)  {  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  else  {  throw  new  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(size  ==  0)  {  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  else  {  throw  new  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
3574	[BUG]  [BUGGY]  if(size  ==  3)  {  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  else  {  throw  new  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  if(size  ==  3)  {  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  else  {  throw  new  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	if(size  ==  3)  {  throws  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }  else  {  throw  new  NonPositiveDefiniteMatrixException  && "Invalid  row  or  column  index  selection ";  }	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  expression	93	None
3603	[BUG]  [BUGGY]  setSmallIndex(matric.getColumnDimension(),  matrix.getRowDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  setSmallIndex(matric.getColumnDimension(),  matrix.getRowDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	setSmallIndex(matric.getColumnDimension(),  matrix.getRowDimension());	      setSmallIndex(matric.getColumnDimension());    	non-compiled	[CE]  ';'  expected	571	None
3632	[BUG]  [BUGGY]  Arrays.sort(this.index,  new  RectangleInfix(mapping,  index));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  new  RectangleInfix(mapping,  index));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  new  RectangleInfix(mapping,  index));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
3633	[BUG]  [BUGGY]  Arrays.sort(this.index,  matrix.getShape());  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  matrix.getShape());  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  matrix.getShape());	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
3634	[BUG]  [BUGGY]  Arrays.sort(this.index,  new  RectangleInfix(Math.abs(c,  e)));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  Arrays.sort(this.index,  new  RectangleInfix(Math.abs(c,  e)));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Arrays.sort(this.index,  new  RectangleInfix(Math.abs(c,  e)));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  <identifier>  expected	63	None
3722	[BUG]  [BUGGY]  if(c[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(c[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(c[i]  ==  b)  {  int  ii  =  0;  for(int  ii  =  0;  i  <  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
3724	[BUG]  [BUGGY]  if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  b[i];  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  b[i];  }  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	if(index[i]  ==  c)  {  int  ii  =  0;  for(int  ii  =  0;  i  >>  order;  ++i)  {  index[i]  =  b[i];  }	      int[][]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  expression	144	None
3784	[BUG]  [BUGGY]  int  rank  =  matrix.getRangeCount(),  r;  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getRangeCount(),  r;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getRangeCount(),  r;	      int    rank    =    matrix.getRangeCount();    	non-compiled	[CE]  <identifier>  expected	245	None
3843	[BUG]  [BUGGY]  double  r  =(double)index.doubleValue();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double  r  =(double)index.doubleValue();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double  r  =(double)index.doubleValue();	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
3844	[BUG]  [BUGGY]  double  r  =(double)index[i]?  0  :  index[i];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double  r  =(double)index[i]?  0  :  index[i];  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double  r  =(double)index[i]?  0  :  index[i];	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  <identifier>  expected	182	None
3873	[BUG]  [BUGGY]  matrix  =  matrix.getShape();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  matrix  =  matrix.getShape();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	matrix  =  matrix.getShape();	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol	125	None
3874	[BUG]  [BUGGY]  e  =  matrix.getShape();  [CE]  cannot  find  symbol  e  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  e  =  matrix.getShape();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	e  =  matrix.getShape();	      if(c[i][i]    >    b[i][i])    {    int    r    =    0;    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  cannot  find  symbol  e	125	None
3902	[BUG]  [BUGGY]  this(null,  matrix.getDimensions());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getDimensions());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getDimensions());	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
3904	[BUG]  [BUGGY]  this(null,  matrix.getDimension());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getDimension());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getDimension());	      this(null,    matrix.getSize());    	non-compiled	[CE]  ';'  expected	105	None
3932	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getColumnDimension()  *  order;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getColumnDimension()  *  order;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getColumnDimension()  *  order;	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	132	None
3933	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getColumnDimension()  +  order;  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  double[][]  c  =  matrix.getColumnDimension()  +  order;  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  double[][]  c  =  matrix.getColumnDimension()  +  order;	  final    double[][]    c    =    matrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	132	None
3962	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  [Delete]  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	[Delete]	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSmallDimension();    }    	non-compiled	[CE]  illegal  start  of  expression	514	None
3964	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSmallDimension();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSmallDimension();    }    	non-compiled	[CE]  illegal  start  of  expression	514	None
3994	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  index[i]  =  c;  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  index[i]  =  c;  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  index[i]  =  c;  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    index[i]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	515	None
4024	[BUG]  [BUGGY]  int[]  index  =  new  int[small]  -  1;  [CE]  possible  loss  of  precision  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  index  =  new  int[small]  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  index  =  new  int[small]  -  1;	  int[]    index    =    new    int[order]    -    1;    	non-compiled	[CE]  possible  loss  of  precision	33	None
4054	[BUG]  [BUGGY]  final  int  rank  =  matrix.getImpl();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  rank  =  matrix.getImpl();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  rank  =  matrix.getImpl();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	25	None
4084	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSlope();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSlope();    }    	non-compiled	[CE]  illegal  start  of  expression	513	None
4114	[BUG]  [BUGGY]  final  int[]  ordered  =  matrix.getItemCount();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  ordered  =  matrix.getItemCount();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  ordered  =  matrix.getItemCount();	      final    int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	25	None
4172	[BUG]  [BUGGY]  Arrays.sort(b,  c);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  Arrays.sort(b,  c);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	Arrays.sort(b,  c);	      Arrays.sort(c,    b);    	non-compiled	[CE]  cannot  find  symbol  Arrays	485	None
4174	[BUG]  [BUGGY]  arrays.sort(c,  b);  [CE]  cannot  find  symbol  arrays  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  arrays.sort(c,  b);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	arrays.sort(c,  b);	      Arrays.sort(c,    b);    	non-compiled	[CE]  cannot  find  symbol  arrays	485	None
4201	[BUG]  [BUGGY]  int[][]  swap  =  matrix.getSwitchCase();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  swap  =  matrix.getSwitchCase();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  swap  =  matrix.getSwitchCase();	      	non-compiled	[CE]  cannot  find  symbol	115	None
4202	[BUG]  [BUGGY]  int[][]  swap  =  matrix.getSwitchToInt();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  swap  =  matrix.getSwitchToInt();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  swap  =  matrix.getSwitchToInt();	      	non-compiled	[CE]  cannot  find  symbol	115	None
4203	[BUG]  [BUGGY]  int[][]  swap  =  matrix.getSwitchMatchesIn(c,  b,  ordered);  [CE]  cannot  find  symbol  ordered  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  swap  =  matrix.getSwitchMatchesIn(c,  b,  ordered);  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  swap  =  matrix.getSwitchMatchesIn(c,  b,  ordered);	      	non-compiled	[CE]  cannot  find  symbol  ordered	115	None
4204	[BUG]  [BUGGY]  int[][]  swap  =  matrix.getSwitchToComposition();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  swap  =  matrix.getSwitchToComposition();  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  swap  =  matrix.getSwitchToComposition();	      	non-compiled	[CE]  cannot  find  symbol	115	None
4233	[BUG]  [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Matrix  matrix  =  MatrixUtils.createMatrix(small,  true);	      Matrix    matrix    =    MatrixUtils.createMatrix(small,    false);    	non-compiled	[CE]  cannot  find  symbol	324	None
4263	[BUG]  [BUGGY]  for(boolean  loop  =  real;  loop[])  {  [CE]  '.class'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  for(boolean  loop  =  real;  loop[])  {  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	for(boolean  loop  =  real;  loop[])  {	      final    double[][]    r    =    matrix.getSmallDimension();    	non-compiled	[CE]  '.class'  expected	153	None
4294	[BUG]  [BUGGY]  final  int  rank  =  matrix.getLowerBound()  +  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  rank  =  matrix.getLowerBound()  +  1;  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  rank  =  matrix.getLowerBound()  +  1;	      final    int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	282	None
4322	[BUG]  [BUGGY]  this(null,  matrix.getSmallMatrix());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallMatrix());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallMatrix());	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
4323	[BUG]  [BUGGY]  this(null,  matrix.getSmallPosition());  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  this(null,  matrix.getSmallPosition());  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	this(null,  matrix.getSmallPosition());	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
4353	[BUG]  [BUGGY]  final  int  order  =  matrix.getSmallOrder();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getSmallOrder();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getSmallOrder();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None
4354	[BUG]  [BUGGY]  final  int  order  =  matrix.getSmallOctalIndex();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getSmallOctalIndex();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getSmallOctalIndex();	      final    int    order    =    matrix.getSmallIndex();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None
4382	[BUG]  [BUGGY]  super(null,  root);  [CE]  cannot  reference  root  before  supertype  constructor  has  been  called  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  root);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  root);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  reference  root  before  supertype  constructor  has  been  called	175	None
4384	[BUG]  [BUGGY]  super(null,  loop);  [CE]  cannot  find  symbol  loop  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  super(null,  loop);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	super(null,  loop);	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  loop	175	None
4414	[BUG]  [BUGGY]  int[]  index  =  new  int[16  -  1];  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[16  -  1];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[16  -  1];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  <identifier>  expected	65	None
4444	[BUG]  [BUGGY]  for(boolean  loop  =  null;  loop!=  null;)  {  [CE]  incompatible  types  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  null;  loop!=  null;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  null;  loop!=  null;)  {	  for(boolean    loop    =    false;    loop!=    null;)    {    	non-compiled	[CE]  incompatible  types	262	None
4473	[BUG]  [BUGGY]  index  =  matrix.indexOf(c,  r);  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix.indexOf(c,  r);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix.indexOf(c,  r);	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
4474	[BUG]  [BUGGY]  index  =  matrix,  matrix.getSize();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  index  =  matrix,  matrix.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	index  =  matrix,  matrix.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	241	None
4503	[BUG]  [BUGGY]  if(c[i][i]  >=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  if(c[i][i]  >=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	if(c[i][i]  >=  b[i][i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b;  }	      if(c[i][i]    >    b[i][i])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None
4532	[BUG]  [BUGGY]  if(c[i][isi]!=  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]!=  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]!=  b[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
4534	[BUG]  [BUGGY]  if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [CE]  ']'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(c[i][isi]  ==  c[swap[i])  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  b[i];  }	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    b[i];    }    	non-compiled	[CE]  ']'  expected	62	None
4564	[BUG]  [BUGGY]  index  =  matrix.getSlope();  [CE]  cannot  find  symbol  [CONTEXT]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }    [BUGGY]  index  =  matrix.getSlope();  [BUGGY]    int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	75	75	2	replace	index  =  matrix.getSlope();	      c    =    matrix.getSlope();    	non-compiled	[CE]  cannot  find  symbol	44	None
4592	[BUG]  [BUGGY]  final  int[][]  r  =  matrix,  matrix.getSlopeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  r  =  matrix,  matrix.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  r  =  matrix,  matrix.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  ';'  expected	224	None
4594	[BUG]  [BUGGY]  final  int[][]  r  =  matrix  root.getSlopeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  r  =  matrix  root.getSlopeDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  r  =  matrix  root.getSlopeDimension();	      final    int[][]    r    =    matrix.getSlopeDimension();    	non-compiled	[CE]  ';'  expected	224	None
4623	[BUG]  [BUGGY]  this(Math.abs(small)||  Math.abs(relativeAccuracy  *  size));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(small)||  Math.abs(relativeAccuracy  *  size));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(small)||  Math.abs(relativeAccuracy  *  size));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
4624	[BUG]  [BUGGY]  this(Math.abs(small)||  Math.abs(bigInteger));  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  this(Math.abs(small)||  Math.abs(bigInteger));  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	this(Math.abs(small)||  Math.abs(bigInteger));	      if(c[i][isi]    >    b[i][isi])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  <identifier>  expected	64	None
4652	[BUG]  [BUGGY]  int[]  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  int[]  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	int[]  order  =  matrix.getColumnDimension();	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
4682	[BUG]  [BUGGY]  int[][]  r  =  matrix,  matrix.getRangeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix,  matrix.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix,  matrix.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  ';'  expected	141	None
4683	[BUG]  [BUGGY]  int[][]  r  =  matrix  root.getRangeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix  root.getRangeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix  root.getRangeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  ';'  expected	141	None
4742	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSingleNode(order);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.getSingleNode(order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.getSingleNode(order);	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	2	None
4743	[BUG]  [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSingleNode();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSingleNode();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix,  matrix.getSingleNode();	      int[]    r    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	2	None
4772	[BUG]  [BUGGY]  int  rank  =  matrix.getLowerBound()  -  1;  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  matrix.getLowerBound()  -  1;  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  matrix.getLowerBound()  -  1;	      int    rank    =    matrix.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	322	None
4802	[BUG]  [BUGGY]  int  index  =  Math.min(order,  swap);  [CE]  no  suitable  method  found  for  min(int,int[])  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  Math.min(order,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  Math.min(order,  swap);	      	non-compiled	[CE]  no  suitable  method  found  for  min(int,int[])	35	None
4803	[BUG]  [BUGGY]  int  index  =  MatrixUtils.findRoot(matrix,  swap);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  MatrixUtils.findRoot(matrix,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  MatrixUtils.findRoot(matrix,  swap);	      	non-compiled	[CE]  cannot  find  symbol	35	None
4804	[BUG]  [BUGGY]  int  index  =  MatrixUtils.findRoot(math.toString(c,  swap));  [CE]  cannot  find  symbol  math  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int  index  =  MatrixUtils.findRoot(math.toString(c,  swap));  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int  index  =  MatrixUtils.findRoot(math.toString(c,  swap));	      	non-compiled	[CE]  cannot  find  symbol  math	35	None
4893	[BUG]  [BUGGY]  int  ii  =  matrix.getImpl();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getImpl();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getImpl();	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	142	None
4894	[BUG]  [BUGGY]  int  ii  =  matrix.getImpl(index,  i);  [CE]  cannot  find  symbol  index  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getImpl(index,  i);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getImpl(index,  i);	      c    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol  index	142	None
4923	[BUG]  [BUGGY]  System.arraycopy(data,  0,  c,  0,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(data,  0,  c,  0,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(data,  0,  c,  0,  index);	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
4924	[BUG]  [BUGGY]  System.arraycopy(coordinates,  0,  c,  0,  index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(coordinates,  0,  c,  0,  index);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(coordinates,  0,  c,  0,  index);	      System.arraycopy(c,    0,    b,    0,    index);    	non-compiled	[CE]  illegal  start  of  type	4	None
4953	[BUG]  [BUGGY]  final  int  order  =  matrix.getSize(order);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  order  =  matrix.getSize(order);  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  order  =  matrix.getSize(order);	      final    int    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	21	None
4982	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(expand[i],  i);  [CE]  cannot  find  symbol  expand  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(expand[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(expand[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  expand	163	None
4983	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(c,  index[i],  i);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(c,  index[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(c,  index[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	163	None
4984	[BUG]  [BUGGY]  b[i]  =  matrix.getEntry(input,  index[i],  i);  [CE]  cannot  find  symbol  input  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  b[i]  =  matrix.getEntry(input,  index[i],  i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	b[i]  =  matrix.getEntry(input,  index[i],  i);	      b[i]    =    matrix.getEntry(entry[i],    i);    	non-compiled	[CE]  cannot  find  symbol  input	163	None
5013	[BUG]  [BUGGY]  int[]  r  =  matrix,  matrix.getRangeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix,  matrix.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix,  matrix.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  ';'  expected	1	None
5014	[BUG]  [BUGGY]  int[]  r  =  matrix  root.getRangeDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix  root.getRangeDimension();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix  root.getRangeDimension();	      int[]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  ';'  expected	1	None
5043	[BUG]  [BUGGY]  int  rank  =  matrix.getImpl();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  int  rank  =  matrix.getImpl();  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	int  rank  =  matrix.getImpl();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	325	None
5073	[BUG]  [BUGGY]  int  rank  =  matrix.getLength();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix.getLength();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix.getLength();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  <identifier>  expected	241	None
5074	[BUG]  [BUGGY]  int  rank  =  matrix  root.getSize();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  rank  =  matrix  root.getSize();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  rank  =  matrix  root.getSize();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  ';'  expected	241	None
5102	[BUG]  [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matric.toString(),  matrix.toString())!=  0;  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matric.toString(),  matrix.toString())!=  0;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	throws  NonPositiveDefiniteMatrixException  &&  Math.abs(matric.toString(),  matrix.toString())!=  0;	      b    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  expression	94	None
5133	[BUG]  [BUGGY]  c[i]  =  matrix.getImpl();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  c[i]  =  matrix.getImpl();  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	c[i]  =  matrix.getImpl();	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None
5134	[BUG]  [BUGGY]  c[i]  =  matrix.getIntValue(i);  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  c[i]  =  matrix.getIntValue(i);  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	c[i]  =  matrix.getIntValue(i);	      c[i]    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None
5163	[BUG]  [BUGGY]  final  int[]  r  =  matrix.getRootDimension();  [CE]  <identifier>  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  final  int[]  r  =  matrix.getRootDimension();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	final  int[]  r  =  matrix.getRootDimension();	  for(boolean    loop    =    false;    loop    >    0;)    {    	non-compiled	[CE]  <identifier>  expected	183	None
5223	[BUG]  [BUGGY]  int  ii  =  matrix.getSlopeDimension(i);  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getSlopeDimension(i);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getSlopeDimension(i);	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol  i	141	None
5224	[BUG]  [BUGGY]  int  ii  =  matrix.getImplSlopeDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int  ii  =  matrix.getImplSlopeDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int  ii  =  matrix.getImplSlopeDimension();	      int[][]    r    =    matrix.getRangeDimension();    	non-compiled	[CE]  cannot  find  symbol	141	None
5254	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  order);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  swap,  order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  swap,  order);	      System.arraycopy(c,    0,    b,    0,    swap);    	non-compiled	[CE]  illegal  start  of  type	82	None
5283	[BUG]  [BUGGY]  r  =  matrix,  matrix.getRange();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix,  matrix.getRange();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix,  matrix.getRange();	      r    =    matrix.getRange();    	non-compiled	[CE]  ';'  expected	244	None
5284	[BUG]  [BUGGY]  r  =  matrix  root.getRange();  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  r  =  matrix  root.getRange();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	r  =  matrix  root.getRange();	      r    =    matrix.getRange();    	non-compiled	[CE]  ';'  expected	244	None
5312	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  order  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
5314	[BUG]  [BUGGY]  final  int[]  order  =  matrix.getSize(order);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[]  order  =  matrix.getSize(order);  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[]  order  =  matrix.getSize(order);	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
5373	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[4][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	add	final  double[][]  b  =  new  double[4][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  testMath789	305	2
5374	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[4][order];  [FE]  ArrayIndexOutOfBoundsException  testMath789  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  b  =  new  double[4][order];  [BUGGY]      int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  b  =  new  double[4][order];	  final    double[][]    b    =    new    double[6][order];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  testMath789	305	2
5432	[BUG]  [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSingleNodePointer();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix,  matrix.getSingleNodePointer();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix,  matrix.getSingleNodePointer();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  ';'  expected	3	None
5434	[BUG]  [BUGGY]  final  double[][]  c  =  matrix.getSingleNodePointer(order);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  final  double[][]  c  =  matrix.getSingleNodePointer(order);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	final  double[][]  c  =  matrix.getSingleNodePointer(order);	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
5463	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop  &&  r!=  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(boolean  loop  =  false;  loop  &&  r!=  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop  &&  r!=  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
5464	[BUG]  [BUGGY]  for(int  loop  =  false;  loop  &&  r  >  0)  {  [CE]  ';'  expected  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  loop  =  false;  loop  &&  r  >  0)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  loop  =  false;  loop  &&  r  >  0)  {	  for(boolean    loop    =    false;    loop    &&    r    >    0)    {    	non-compiled	[CE]  ';'  expected	182	None
5492	[BUG]  [BUGGY]  Arrays.fill(matrix,  root);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Arrays.fill(matrix,  root);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Arrays.fill(matrix,  root);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  Arrays	215	None
5493	[BUG]  [BUGGY]  Arrays.fill(matrix,  null);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Arrays.fill(matrix,  null);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Arrays.fill(matrix,  null);	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol  Arrays	215	None
5494	[BUG]  [BUGGY]  Arrays.fill(matrix,  new  RectangleIntensity(matrix));  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  Arrays.fill(matrix,  new  RectangleIntensity(matrix));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	Arrays.fill(matrix,  new  RectangleIntensity(matrix));	      Arrays.fill(matrix,    matrix);    	non-compiled	[CE]  cannot  find  symbol	215	None
5554	[BUG]  [BUGGY]  if(matrix  ==  null)  {  throw  new  IllegalStateException( " "));  }  [CE]  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  if(matrix  ==  null)  {  throw  new  IllegalStateException( " "));  }  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	if(matrix  ==  null)  {  throw  new  IllegalStateException( " "));  }	      if(matrix    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	175	None
5584	[BUG]  [BUGGY]  int[]  index  =  new  int[switch  -  1];  [CE]  illegal  start  of  expression  [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int[]  index  =  new  int[switch  -  1];  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int[]  index  =  new  int[switch  -  1];	      if(c[i][isi]    >    b[swap[i]])    {    for(int    i    =    0;    i    <    order;    ++i)    {    c[i][i]    =    r;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None
5611	[BUG]  [BUGGY]      super();  setSmallIndex(matrix.getDimension());  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  setSmallIndex(matrix.getDimension());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    setSmallIndex(matrix.getDimension());	  	non-compiled	[CE]  cannot  find  symbol	171	None
5612	[BUG]  [BUGGY]      super();  setSmallIndex(matrix.getColumnDimension());  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  setSmallIndex(matrix.getColumnDimension());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    setSmallIndex(matrix.getColumnDimension());	  	non-compiled	[CE]  cannot  find  symbol	171	None
5613	[BUG]  [BUGGY]      super();  setSmallIndex(matrix.getMinimumSize());  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  setSmallIndex(matrix.getMinimumSize());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    setSmallIndex(matrix.getMinimumSize());	  	non-compiled	[CE]  cannot  find  symbol	171	None
5614	[BUG]  [BUGGY]      super();  setSmallIndex(matrix.getSize());  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  setSmallIndex(matrix.getSize());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    setSmallIndex(matrix.getSize());	  	non-compiled	[CE]  cannot  find  symbol	171	None
5615	[BUG]  [BUGGY]      super();  _checkSmall(matrix.getScale());  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]      super();  _checkSmall(matrix.getScale());  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	        super();    _checkSmall(matrix.getScale());	  	non-compiled	[CE]  cannot  find  symbol	171	None
5642	[BUG]  [BUGGY]  final  int  order  =  matrix.getOwnMask();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getOwnMask();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getOwnMask();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
5643	[BUG]  [BUGGY]  final  int  order  =  matrix.getOwnMean();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getOwnMean();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getOwnMean();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
5644	[BUG]  [BUGGY]  final  int  order  =  matrix.getMean();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  final  int  order  =  matrix.getMean();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	final  int  order  =  matrix.getMean();	  final    int    order    =    matrix.getSize();    	non-compiled	[CE]  cannot  find  symbol	71	None
5672	[BUG]  [BUGGY]  checkSmall(Math.pow(10,  e));  [CE]  cannot  find  symbol  e  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  checkSmall(Math.pow(10,  e));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	checkSmall(Math.pow(10,  e));	      super();    	non-compiled	[CE]  cannot  find  symbol  e	172	None
5673	[BUG]  [BUGGY]  checkSmall(Math.pow(10,  e),  false);  [CE]  cannot  find  symbol  e  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  checkSmall(Math.pow(10,  e),  false);  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	checkSmall(Math.pow(10,  e),  false);	      super();    	non-compiled	[CE]  cannot  find  symbol  e	172	None
5674	[BUG]  [BUGGY]  checkSmall(Math.pow(10,  3));  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {    [BUGGY]  checkSmall(Math.pow(10,  3));  [BUGGY]    final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	65	65	2	replace	checkSmall(Math.pow(10,  3));	      super();    	non-compiled	[CE]  cannot  find  symbol	172	None
5702	[BUG]  [BUGGY]  b[i]  =  matrix.getSlopeDimension(i);  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[i]  =  matrix.getSlopeDimension(i);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[i]  =  matrix.getSlopeDimension(i);	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
5703	[BUG]  [BUGGY]  b[i]  =  matrix.getInequality(i);  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[i]  =  matrix.getInequality(i);  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[i]  =  matrix.getInequality(i);	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
5704	[BUG]  [BUGGY]  b[i]  =  matrix.getSlopeDimension()  +  swap;  [CE]  cannot  find  symbol  i  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  b[i]  =  matrix.getSlopeDimension()  +  swap;  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	b[i]  =  matrix.getSlopeDimension()  +  swap;	      int[][]    r    =    new    int[order];    	non-compiled	[CE]  cannot  find  symbol  i	143	None
5734	[BUG]  [BUGGY]  final  int[][]  ordinal  =  matrix.getSmallDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  int[][]  ordinal  =  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  int[][]  ordinal  =  matrix.getSmallDimension();	      final    int[][]    order    =    matrix.getSmallDimension();    	non-compiled	[CE]  cannot  find  symbol	152	None
5822	[BUG]  [BUGGY]  int[]  r  =  matrix.getSmallRowIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getSmallRowIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getSmallRowIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
5823	[BUG]  [BUGGY]  int[]  r  =  matrix.getSmallReturnIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getSmallReturnIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getSmallReturnIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
5824	[BUG]  [BUGGY]  int[]  r  =  matrix.getSmallRangeIndex();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int[]  r  =  matrix.getSmallRangeIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int[]  r  =  matrix.getSmallRangeIndex();	      int[]    r    =    matrix.getSmallIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None
5852	[BUG]  [BUGGY]  final  int  count  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  count  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  count  =  matrix.getColumnDimension();	      final    int    rank    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  c	285	None
5854	[BUG]  [BUGGY]  final  int  range  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  c  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int  range  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int  range  =  matrix.getColumnDimension();	      final    int    rank    =    matrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  c	285	None
5883	[BUG]  [BUGGY]  int  rank  =  matrix.getLength();  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  int  rank  =  matrix.getLength();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	int  rank  =  matrix.getLength();	      int    rank    =    matrix.getSize();    	non-compiled	[CE]  illegal  start  of  type	85	None
5912	[BUG]  [BUGGY]  int[][]  r  =  matrix.getColumnDimension();  [CE]  incompatible  types  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getColumnDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getColumnDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	482	None
5913	[BUG]  [BUGGY]  int[][]  r  =  matrix.getRootDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getRootDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getRootDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	482	None
5914	[BUG]  [BUGGY]  int[][]  r  =  matrix.getReowDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  r  =  matrix.getReowDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  r  =  matrix.getReowDimension();	      int[][]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	482	None
5941	[BUG]  [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(sqrt!=  0)  {  order++;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(sqrt!=  0)  {  order++;  }  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(sqrt!=  0)  {  order++;  }	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
5942	[BUG]  [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(order  ==  size)  {  order++;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(order  ==  size)  {  order++;  }  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(order  ==  size)  {  order++;  }	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
5943	[BUG]  [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(order!=  size)  {  order++;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(order!=  size)  {  order++;  }  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(order!=  size)  {  order++;  }	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
5944	[BUG]  [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(sqrt!=  0)  {  ordered++;  }  [CE]  ';'  expected  [CONTEXT]      [BUGGY]  if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(sqrt!=  0)  {  ordered++;  }  [BUGGY]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	63	63	2	replace	if(order  <  0)  {  int[]  rank  =  matrix.getSize();  if(sqrt!=  0)  {  ordered++;  }	      this(null,    matrix.getSmallDecomposition());    	non-compiled	[CE]  ';'  expected	101	None
5973	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  matrix.getScale();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  matrix.getScale();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  matrix.getScale();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getScale();    }    	non-compiled	[CE]  illegal  start  of  expression	511	None
5974	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getScale();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getScale();    }    	non-compiled	[CE]  illegal  start  of  expression	511	None
6003	[BUG]  [BUGGY]  final  double[][]  e  =  matrix,  matrix.getSmallDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();    [BUGGY]  final  double[][]  e  =  matrix,  matrix.getSmallDimension();  [BUGGY]    final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	67	67	2	replace	final  double[][]  e  =  matrix,  matrix.getSmallDimension();	      final    double[][]    e    =    matrix.getSmallDimension();    	non-compiled	[CE]  ';'  expected	155	None
6032	[BUG]  [BUGGY]  final  int[][]  order  =  matrix.getColumnDimension();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  order  =  matrix.getColumnDimension();  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  order  =  matrix.getColumnDimension();	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
6034	[BUG]  [BUGGY]  final  int[][]  order  =  matrix.getSize(order);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();    [BUGGY]  final  int[][]  order  =  matrix.getSize(order);  [BUGGY]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	66	66	2	replace	final  int[][]  order  =  matrix.getSize(order);	      final    int[][]    order    =    matrix.getSize();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None
6063	[BUG]  [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  matrix.getSize();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSize();    }    	non-compiled	[CE]  illegal  start  of  expression	512	None
6064	[BUG]  [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  matrix.getSize();  }  [CE]  illegal  start  of  expression  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {    [BUGGY]  if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  matrix.getSize();  }  [BUGGY]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	72	72	2	replace	if(index[i]  ==  b)  {  for(int  i  =  0;  i  >>  order;  ++i)  {  matrix.getSize();  }	      if(index[i]    ==    c)    {    for(int    i    =    0;    i    <    order;    ++i)    {    matrix.getSize();    }    	non-compiled	[CE]  illegal  start  of  expression	512	None
6123	[BUG]  [BUGGY]  int[][]  e  =  matrix,  matrix.getEvalDimension();  [CE]  ';'  expected  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  e  =  matrix,  matrix.getEvalDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  e  =  matrix,  matrix.getEvalDimension();	      int[][]    e    =    matrix.getEvalDimension();    	non-compiled	[CE]  ';'  expected	484	None
6124	[BUG]  [BUGGY]  int[][]  E  =  matrix.getEvalDimension();  [CE]  cannot  find  symbol  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];    [BUGGY]  int[][]  E  =  matrix.getEvalDimension();  [BUGGY]    int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	69	69	2	replace	int[][]  E  =  matrix.getEvalDimension();	      int[][]    e    =    matrix.getEvalDimension();    	non-compiled	[CE]  cannot  find  symbol	484	None
6153	[BUG]  [BUGGY]  System.arraycopy(data,  0,  c,  0,  b,  0,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(data,  0,  c,  0,  b,  0,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(data,  0,  c,  0,  b,  0,  swap);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
6154	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  size,  index,  swap);  [CE]  illegal  start  of  type  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];    [BUGGY]  System.arraycopy(c,  0,  b,  0,  size,  index,  swap);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	71	71	2	replace	System.arraycopy(c,  0,  b,  0,  size,  index,  swap);	      System.arraycopy(c,    0,    b,    0,    index,    swap);    	non-compiled	[CE]  illegal  start  of  type	5	None
6183	[BUG]  [BUGGY]  int[]  r  =  matrix.getRowDimension()  *  swap;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]    throws  NonPositiveDefiniteMatrixException  {  final  int  order  =  matrix.getRowDimension();  final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];    [BUGGY]  int[]  r  =  matrix.getRowDimension()  *  swap;  [BUGGY]    int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	70	70	2	replace	int[]  r  =  matrix.getRowDimension()  *  swap;	      int[]    r    =    matrix.getRowDimension();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	181	None
