bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
3	[BUG]  [BUGGY]  int  i  =  0;  i  <  b.length;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  i  =  0;  i  <  b.length;  ++i)  {	  for(int    i    =    0;    i    <    b.length;    ++i)    {    int    i    =    0;    i    <    b.length;    ++i)    {    	non-compiled	[CE]  >  expected	22	None	replace
4	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(r,  scale);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(r,  scale);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(r,  scale);	  int[][]    b    =    matrix.getMatrixes(loop,    scale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
5	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(small,  scale);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(small,  scale);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(small,  scale);	  int[][]    b    =    matrix.getMatrixes(loop,    scale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
6	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  ii  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  ii	51	None	replace
7	[BUG]  [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  loop  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	51	None	replace
8	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  For(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  index.length;  ++i)  {	  for(int    i    =    0;    i    <    index.length;    ++i)    {    For(int    i    =    0;    i    <    index.length;    ++i)    {    	non-compiled	[CE]  '.class'  expected	27	None	replace
9	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  b.length;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  For(int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  b.length;  ++i)  {	  for(int    i    =    0;    i    <    b.length;    ++i)    {    for(int    i    =    0;    i    <    b.length;    ++i)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
10	[BUG]  [BUGGY]  int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  i  =  0;  i  <  index.length;  ++i)  {	  for(int    i    =    0;    i    <    index.length;    ++i)    {    int    i    =    0;    i    <    index.length;    ++i)    {    	non-compiled	[CE]  >  expected	26	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length    -    1;    ++i)    {    for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length    -    1;    ++i)    {    int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  	non-compiled	[CE]  >  expected	8	None	add
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  For(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  For(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length    -    1;    ++i)    {    For(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	8	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    index.length    -    1;    ++i)    {    	compilable	  [FE]  AssertionError  	9	3	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    index.length    -    1;    ++i)    {    	compilable	  [FE]  AssertionError  	9	3	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  }	  for(int    i    =    0;    i    <    b.length;    ++i)    {    if(b.length!=    0)    {    for(int    i    =    0;    i    <    b.length;    ++i)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
17	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  index);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  index);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(loop,  index);	  int[][]    b    =    matrix.getMatrixes(loop,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
18	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  size);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(loop,  size);	  int[][]    b    =    matrix.getMatrixes(loop,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
19	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  scale);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  scale);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(root,  scale);	  int[][]    b    =    matrix.getMatrixes(root);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
20	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(c);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(c);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(c);	  int[][]    b    =    matrix.getMatrixes(small);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
21	[BUG]  [BUGGY]  int  index  =  b.length;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  b.length;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  b.length;	  int    index    =    matrix.length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
22	[BUG]  [BUGGY]  int  index  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  0;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  0;	  int    index    =    matrix.length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(root!=    null)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
24	[BUG]  [BUGGY]  int  index  =  root.getIndex()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  root.getIndex()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  root.getIndex()  -  1;	  int    index    =    root.getIndex();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
27	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(loop,  small);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(loop,  small);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(loop,  small);	  int    index    =    matrix.getIndex(small);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
28	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	50	None	replace
29	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  cannot  find  symbol  j  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  j	52	None	replace
30	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  loop  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	35	None	replace
31	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  loop  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	35	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  int  i  =  0;  i  <  rank;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  int  i  =  0;  i  <  rank;  ++i)  {	  for(int    i    =    0;    i    <    rank;    ++i)    {    int    i    =    0;    i    <    rank;    ++i)    {    	non-compiled	[CE]  >  expected	4	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  index;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  index;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length  -  index;  ++i)  {	  for(int    i    =    0;    i    <    b.length    -    rank;    ++i)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	46	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index  +  2;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index  +  2;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index  +  2;  ++i)  {	  for(int    i    =    0;    i    <    index    +    1;    ++i)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	15	None	replace
35	[BUG]  [BUGGY]  int[]  index  =  matrix.getIndexedValues();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[]  index  =  matrix.getIndexedValues();  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[]  index  =  matrix.getIndexedValues();	  int[]    index    =    matrix.getIndexedFields();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
36	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(loop,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(loop,  ii);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(loop,  ii);	  int    index    =    matrix.getIndex(loop,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
37	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(loop,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(loop,  size);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(loop,  size);	  int    index    =    matrix.getIndex(loop,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
38	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(root,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(root,  rank);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(root,  rank);	  int    index    =    matrix.getIndex(root);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
39	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(len  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(len  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(len  -  2);	  int    index    =    matrix.getIndex(len    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
40	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(index  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(index  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(index  +  1);	  int    index    =    matrix.getIndex(index);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    rank;    ++i)    {    for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    rank;    ++i)    {    int  i  =  0;  i  <  b.length  -  rank;  ++i)  {	  	non-compiled	[CE]  >  expected	45	None	add
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  For(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  For(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    rank;    ++i)    {    For(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	45	None	add
44	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  For(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  For(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  '.class'  expected	20	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  2;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  b.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    	compilable	  [FE]  AssertionError  	2	3	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  2;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  2;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    	compilable	  [FE]  AssertionError  	2	3	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    int  i  =  0;  i  <  b.length  -  1;  ++i)  {	  	non-compiled	[CE]  >  expected	1	None	add
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  for(int  i  =  0;  i  <  b[i].length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  for(int  i  =  0;  i  <  b[i].length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    for(int  i  =  0;  i  <  b[i].length  -  1;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  if(root!=    null)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
51	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  r);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  r);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(loop,  r);	  int[][]    b    =    matrix.getMatrixes(r);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
52	[BUG]  [BUGGY]  int  index  =  matrix.length()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.length()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.length()  -  1;	  int    index    =    matrix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
53	[BUG]  [BUGGY]  int  index  =  b.length();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  b.length();  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  b.length();	  int    index    =    matrix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
54	[BUG]  [BUGGY]  b[i][j]  =  matrix.doubleValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  b[i][j]  =  matrix.doubleValue()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	b[i][j]  =  matrix.doubleValue()  +  1;	  b[i][j]    =    matrix.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
55	[BUG]  [BUGGY]  int  index  =  matrix.getIndex()  -  rank  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex()  -  rank  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex()  -  rank  +  1;	  int    index    =    matrix.getIndex()    -    rank;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
56	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  +  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  index.length  +  1;  ++i)  {	  for(int    i    =    0;    i    <    index    +    1;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	3	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  +  1;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  +  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length  +  1;  ++i)  {	  for(int    i    =    0;    i    <    index    +    1;    ++i)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	3	replace
58	[BUG]  [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  cannot  find  symbol  loop  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	52	None	replace
59	[BUG]  [BUGGY]  if(list!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  list  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(list!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(list!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  list	51	None	replace
60	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  ii);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(root,  ii);	  int[][]    b    =    matrix.getMatrixes(root);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
61	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(root,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(root,  ii);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(root,  ii);	  int    index    =    matrix.getIndex(root);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	53	2	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	53	2	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length  ==  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length  ==  0)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	53	2	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length  ==  0)  {  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length  ==  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length  ==  0)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	53	2	replace
66	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  For(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  For(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  '.class'  expected	12	None	replace
67	[BUG]  [BUGGY]  int  index  =  matrix.length  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.length  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.length  -  1;	  int    index    =    matrix.length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
68	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  rank);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(root,  rank);	  int[][]    b    =    matrix.getMatrixes(loop,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  n;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  }	  for(int    i    =    0;    i    <    b.length;    ++i)    {    if(b.length!=    0)    {    for(int    i    =    0;    i    <    b.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	48	2	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  }	  for(int    i    =    0;    i    <    b.length;    ++i)    {    if(b.length!=    0)    {    for(int    i    =    0;    i    <    b.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	48	2	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  r.length;  ++i)  {  if(b.length!=  0)  {  }  [CE]  int  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  r.length;  ++i)  {  if(b.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  r.length;  ++i)  {  if(b.length!=  0)  {  }	  for(int    i    =    0;    i    <    b.length;    ++i)    {    if(b.length!=    0)    {    for(int    i    =    0;    i    <    b.length;    ++i)    {    }    	non-compiled	[CE]  int  cannot  be  dereferenced	48	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  int  j  =  0;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length    -    1;    ++i)    {    int  j  =  0;  j  <  r;  ++j)  {	  	non-compiled	[CE]  >  expected	8	None	add
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  (int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  (int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    rank;    ++i)    {    (int  i  =  0;  i  <  b.length  -  rank;  ++i)  {	  	non-compiled	[CE]  ')'  expected	45	None	add
75	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  For(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  For(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  '.class'  expected	20	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  (int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  (int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    (int  i  =  0;  i  <  b.length  -  1;  ++i)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  int  j  =  0;  j  <  r;  ++j)  {  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  int  j  =  0;  j  <  r;  ++j)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    1;    ++i)    {    int  j  =  0;  j  <  r;  ++j)  {	  	non-compiled	[CE]  >  expected	1	None	add
78	[BUG]  [BUGGY]  int[]  index  =  matrix.getIndexedFields()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[]  index  =  matrix.getIndexedFields()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[]  index  =  matrix.getIndexedFields()  -  1;	  int[]    index    =    matrix.getIndexedFields();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
79	[BUG]  [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  0,  b[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  0,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  0,  b[i][i]);  }	  if(root!=    null)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	36	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(index.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  b.length;  ++i)  {  if(index.length!=  0)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	53	2	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(index.length!=  0)  {  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(index.length!=  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  if(index.length!=  0)  {  }	  for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=    0)    {    for(int    i    =    0;    i    <    index.length;    ++i)    {    }    	compilable	  [FE]  AssertionError  	53	2	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  if(b.length!=  i)  {  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  if(b.length!=  i)  {  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length    -    rank;    ++i)    {    if(b.length!=  i)  {  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
83	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  ii);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(loop,  ii);	  int[][]    b    =    matrix.getMatrixes(loop,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
84	[BUG]  [BUGGY]  int  index  =  matrix.length()  -  rank;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.length()  -  rank;  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.length()  -  rank;	  int    index    =    matrix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
85	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  cannot  find  symbol  j  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  j	52	None	replace
86	[BUG]  [BUGGY]  int  i  =  0;  i  <  rank;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  i  =  0;  i  <  rank;  ++i)  {	  for(int    i    =    0;    i    <    rank;    ++i)    {    int    i    =    0;    i    <    rank;    ++i)    {    	non-compiled	[CE]  >  expected	4	None	replace
87	[BUG]  [BUGGY]  int  index  =  matrix.getIndex()  -  rank  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex()  -  rank  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex()  -  rank  -  1;	  int    index    =    matrix.getIndex()    -    rank;    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  isi;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  isi;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  isi;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    rank;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  for(int    i    =    0;    i    <    rank;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  isi;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  for(int  i  =  0;  i  <  isi;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  isi;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	  for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
91	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  index);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int[][]  b  =  matrix.getMatrixes(root,  index);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(root,  index);	  int[][]    b    =    matrix.getMatrixes(root);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
92	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(primary  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(primary  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(primary  -  1);	  int    index    =    matrix.getIndex(len    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
93	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(small,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  int  index  =  matrix.getIndex(small,  ii);  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(small,  ii);	  int    index    =    matrix.getIndex(small);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
94	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]      }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	  if(loop!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	50	None	replace
