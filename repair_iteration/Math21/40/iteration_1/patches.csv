bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    b.length;    ++i)    {    	compilable	  [FE]  AssertionError  	3	3	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    b.length;    ++i)    {    	compilable	  [FE]  AssertionError  	3	3	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    rank;    ++i)    {    for(int  i  =  0;  i  <  rank;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  int  i  =  0;  i  <  rank;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    rank;    ++i)    {    int  i  =  0;  i  <  rank;  ++i)  {	  	non-compiled	[CE]  >  expected	16	None	add
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  For(int  i  =  0;  i  <  rank;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  For(int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    rank;    ++i)    {    For(int  i  =  0;  i  <  rank;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	16	None	add
6	[BUG]  [BUGGY]  int  index  =  matrix.getIndex()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex()  -  1;	      int    index    =    matrix.getIndex();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
7	[BUG]  [BUGGY]  int  index  =  root.getIndex();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  root.getIndex();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  root.getIndex();	      int    index    =    matrix.getIndex();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    index.length;    ++i)    {    	compilable	  [FE]  AssertionError  	12	3	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    index.length;    ++i)    {    	compilable	  [FE]  AssertionError  	12	3	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
12	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  For(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  '.class'  expected	9	None	replace
13	[BUG]  [BUGGY]  b[i][j]  =  matrix.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  b[i][j]  =  matrix.doubleValue();  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	b[i][j]  =  matrix.doubleValue();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
14	[BUG]  [BUGGY]  int[]  index  =  matrix.getIndexedFields();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[]  index  =  matrix.getIndexedFields();  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[]  index  =  matrix.getIndexedFields();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index  +  1;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index  +  1;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index  +  1;  ++i)  {	  for(int    i    =    0;    i    <    index;    ++i)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
16	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(small);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex(small);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(small);	      int    index    =    matrix.getIndex(len);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
17	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  scale);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  scale);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(loop,  scale);	      int[][]    b    =    matrix.getMatrixes(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
18	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[][]  b  =  matrix.getMatrixes(loop,  rank);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(loop,  rank);	      int[][]    b    =    matrix.getMatrixes(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
20	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  For(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	For(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  '.class'  expected	8	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  for(int  i  =  0;  i  <  b.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  for(int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length;    ++i)    {    for(int  i  =  0;  i  <  b.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  int  i  =  0;  i  <  b.length;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length;    ++i)    {    int  i  =  0;  i  <  b.length;  ++i)  {	  	non-compiled	[CE]  >  expected	2	None	add
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  For(int  i  =  0;  i  <  b.length;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  For(int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length;    ++i)    {    For(int  i  =  0;  i  <  b.length;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	2	None	add
24	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(loop,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex(loop,  rank);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(loop,  rank);	      int    index    =    matrix.getIndex(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    for(int  i  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    int  i  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  >  expected	11	None	add
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  For(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  '.class'  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  For(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    For(int  i  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  '.class'  expected	11	None	add
28	[BUG]  [BUGGY]  b[i][j]  =  root.getMatrix();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  b[i][j]  =  root.getMatrix();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	b[i][j]  =  root.getMatrix();	      b[i][j]    =    matrix.getMatrix();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
29	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(root);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex(root);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(root);	      int    index    =    matrix.getIndex(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
30	[BUG]  [BUGGY]  int  index  =  matrix.length;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.length;  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.length;	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
31	[BUG]  [BUGGY]  int  index  =  matrix.length();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.length();  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.length();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
32	[BUG]  [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(root!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  (int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  (int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    (int  i  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
35	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  loop  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	10	None	replace
36	[BUG]  [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  i  [FE]              AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	10	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  (int  i  =  0;  i  <  b.length;  ++i)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  (int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length;    ++i)    {    (int  i  =  0;  i  <  b.length;  ++i)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
38	[BUG]  [BUGGY]  int  index  =  matrix.getIndex()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex()  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex()  +  1;	      int    index    =    matrix.getIndex();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
39	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(root);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[][]  b  =  matrix.getMatrixes(root);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(root);	      int[][]    b    =    matrix.getMatrixes(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
40	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(r);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[][]  b  =  matrix.getMatrixes(r);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(r);	      int[][]    b    =    matrix.getMatrixes(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
41	[BUG]  [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  cannot  find  symbol  j  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(root!=  null)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  j	9	None	replace
42	[BUG]  [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  cannot  find  symbol  j  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(root!=  null)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  j	9	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [CE]  cannot  find  symbol  size  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {	  for(int    i    =    0;    i    <    index;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  size	1	None	replace
44	[BUG]  [BUGGY]  int[][]  b  =  matrix.getRawMatrixes();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[][]  b  =  matrix.getRawMatrixes();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getRawMatrixes();	      int[][]    b    =    matrix.getMatrixes();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {	  for(int    i    =    0;    i    <    b.length;    ++i)    {    	compilable	  [FE]  AssertionError  	3	3	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length  -  rank;  ++i)  {	  for(int    i    =    0;    i    <    b.length;    ++i)    {    	compilable	  [FE]  AssertionError  	3	3	replace
47	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(len  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex(len  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(len  -  1);	      int    index    =    matrix.getIndex(len);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  for(int  i  =  0;  i  <  b.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  if(b.length!=  0)  {  for(int  i  =  0;  i  <  b.length;  ++i)  {  }  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    b.length;    ++i)    {    if(b.length!=  0)  {  for(int  i  =  0;  i  <  b.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
49	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes(small);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int[][]  b  =  matrix.getMatrixes(small);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int[][]  b  =  matrix.getMatrixes(small);	      int[][]    b    =    matrix.getMatrixes(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
50	[BUG]  [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  loop  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	8	None	replace
51	[BUG]  [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  cannot  find  symbol  loop  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][i]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	10	None	replace
52	[BUG]  [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  cannot  find  symbol  loop  [FE]          AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  if(loop!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	if(loop!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(root!=    null)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  cannot  find  symbol  loop	9	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index.length!=  0)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  }  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index.length!=  0)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
54	[BUG]  [BUGGY]  int  index  =  matrix.getIndex()  -  rank;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex()  -  rank;  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex()  -  rank;	      int    index    =    matrix.getIndex();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
55	[BUG]  [BUGGY]  int  index  =  matrix.getIndex(index);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);    [BUGGY]  int  index  =  matrix.getIndex(index);  [BUGGY]    for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	int  index  =  matrix.getIndex(index);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
