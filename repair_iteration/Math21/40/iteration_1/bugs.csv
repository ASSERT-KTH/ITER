bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	79	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  b.length;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	79	2	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  b.length;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  b.length;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	79	2	replace
4	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	  	for  (int  i  =  0;  i  <  order;  ++i)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
5	[BUG]  [BUGGY]    int[][]  b  =  matrix.getMatrixes();  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    int[][]  b  =  matrix.getMatrixes();  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    int[][]  b  =  matrix.getMatrixes();		non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	80	None	add
6	[BUG]  [BUGGY]    b[i][j]  =  matrix.getMatrix();  [CE]  cannot  find  symbol  i  [FE]      AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    b[i][j]  =  matrix.getMatrix();  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    b[i][j]  =  matrix.getMatrix();		non-compiled	[CE]  cannot  find  symbol  i	80	None	add
7	[BUG]  [BUGGY]    int[][]  b  =  matrix.getMatrixes(loop);  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    int[][]  b  =  matrix.getMatrixes(loop);  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    int[][]  b  =  matrix.getMatrixes(loop);		non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	80	None	add
8	[BUG]  [BUGGY]    if(root!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    if(root!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    if(root!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }		non-compiled	[CE]  illegal  start  of  expression	80	None	add
9	[BUG]  [BUGGY]    if(root!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    if(root!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    if(root!=  null)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	80	None	add
10	[BUG]  [BUGGY]    if(root!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    if(root!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    if(root!=  null)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][i]);  }		non-compiled	[CE]  illegal  start  of  expression	80	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  index.length;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	79	2	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	79	2	replace
13	[BUG]  [BUGGY]    int  index  =  matrix.getIndex();  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    int  index  =  matrix.getIndex();  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    int  index  =  matrix.getIndex();		non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	80	None	add
14	[BUG]  [BUGGY]    int  index  =  matrix.getIndex(loop);  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    int  index  =  matrix.getIndex(loop);  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    int  index  =  matrix.getIndex(loop);		non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	80	None	add
15	[BUG]  [BUGGY]    int  index  =  matrix.getIndex(len);  [CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]    int  index  =  matrix.getIndex(len);  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	    int  index  =  matrix.getIndex(len);		non-compiled	[CE]  variable  index  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	80	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	add	for(int  i  =  0;  i  <  rank;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	79	2	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  [BUGGY]  for(int  i  =  0;  i  <  rank;  ++i)  {  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	145	145	2	replace	for(int  i  =  0;  i  <  rank;  ++i)  {	for  (int  i  =  0;  i  <  order;  ++i)  {  	compilable	  [FE]  AssertionError  	79	2	replace
