projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121if(loop){for(inti=0;i<size;++i){c[i][i]=0;}
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121if(loop){for(inti=0;i<size;++i){c[i][ir]=0;}
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121tmp=Math.sqrt(c[ii][ir]);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121finaldoublesqrt=FastMath.sqrt(c[ir][ir]);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121finaldoublesqrt=FastMath.sqrt(c[ii][ir]);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121finaldoublesqrt=FastMath.sqrt(c[0][ir]);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121finaldoubleorder=FastMath.sqrt(c[ir][ir]);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121finaldoubleorder=FastMath.sqrt(root);
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121finaldoubleorder=FastMath.sqrt(c[ir][ir]);if(order==0){
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121intorder=matrix.size();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121intorder=matrix.length();
projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java121intorder=matrix.length;
