bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[1][ir]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	add	final  double  sqrt  =  FastMath.sqrt(c[1][ir]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	compilable	  [FE]  AssertionError  	6	3	replace
2	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[1][ir]);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[1][ir]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[1][ir]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	compilable	  [FE]  AssertionError  	6	3	replace
3	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][l]);  [CE]  cannot  find  symbol  l  [FE]      AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][l]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[0][l]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	non-compiled	[CE]  cannot  find  symbol  l	6	None	replace
4	[BUG]  [BUGGY]  int  order  =  matrix.size()  -  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  int  order  =  matrix.size()  -  1;  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	int  order  =  matrix.size()  -  1;	      int    order    =    matrix.size();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	10	None	replace
5	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir],  inverse);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir],  inverse);  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  order  =  FastMath.sqrt(c[ir][ir],  inverse);	      final    double    order    =    FastMath.sqrt(c[ir][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	replace
6	[BUG]  [BUGGY]  sqrt  =  Math.sqrt(c[ii][ir]);  [CE]  cannot  find  symbol  sqrt  [FE]            AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  sqrt  =  Math.sqrt(c[ii][ir]);  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	sqrt  =  Math.sqrt(c[ii][ir]);	      tmp    =    Math.sqrt(c[ii][ir]);    	non-compiled	[CE]  cannot  find  symbol  sqrt	3	None	replace
7	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  [CE]  variable  sqrt  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    final  double  sqrt  =  FastMath.sqrt(c[0][ir]);	  	non-compiled	[CE]  variable  sqrt  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	add
8	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  final  double  sqrt  =  FastMath.sqrt(c[1][ir]);  [CE]  variable  sqrt  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  final  double  sqrt  =  FastMath.sqrt(c[1][ir]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    final  double  sqrt  =  FastMath.sqrt(c[1][ir]);	  	non-compiled	[CE]  variable  sqrt  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	add
9	[BUG]  [BUGGY]  int  order  =  matrix.length  -  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  int  order  =  matrix.length  -  1;  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	int  order  =  matrix.length  -  1;	      int    order    =    matrix.length;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
10	[BUG]  [BUGGY]  int  order  =  matrix.length  -  2;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  int  order  =  matrix.length  -  2;  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	int  order  =  matrix.length  -  2;	      int    order    =    matrix.length;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
11	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(matrix);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  order  =  FastMath.sqrt(matrix);  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  order  =  FastMath.sqrt(matrix);	      final    double    order    =    FastMath.sqrt(root);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
12	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(matrix,  root);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  order  =  FastMath.sqrt(matrix,  root);  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  order  =  FastMath.sqrt(matrix,  root);	      final    double    order    =    FastMath.sqrt(root);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
13	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][i]  =  1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][i]  =  1;  }  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][i]  =  1;  }	      if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    c[i][i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][l]);  [CE]  cannot  find  symbol  ii  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][l]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[ii][l]);	  final    double    sqrt    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  cannot  find  symbol  ii	4	None	replace
15	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][short]);  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][short]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[ii][short]);	  final    double    sqrt    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  '.class'  expected	4	None	replace
16	[BUG]  [BUGGY]  int  order  =  matrix.length()  -  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  int  order  =  matrix.length()  -  1;  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	int  order  =  matrix.length()  -  1;	      int    order    =    matrix.length();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	replace
17	[BUG]  [BUGGY]  int  order  =  matrix.length()  +  1;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  int  order  =  matrix.length()  +  1;  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	int  order  =  matrix.length()  +  1;	      int    order    =    matrix.length();    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	replace
18	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir]);  if(order  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir]);  if(order  ==  1)  {  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  order  =  FastMath.sqrt(c[ir][ir]);  if(order  ==  1)  {	      final    double    order    =    FastMath.sqrt(c[ir][ir]);    if(order    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][ir]  =  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][ir]  =  1;  }  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][ir]  =  1;  }	      if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    c[i][ir]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  b[i][i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  b[i][i]  =  0;  }  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  b[i][i]  =  0;  }	      if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    c[i][i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][small]);  [CE]  cannot  find  symbol  ii  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][small]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[ii][small]);	  final    double    sqrt    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  cannot  find  symbol  ii	4	None	replace
22	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(small);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  order  =  FastMath.sqrt(small);  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  order  =  FastMath.sqrt(small);	      final    double    order    =    FastMath.sqrt(root);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
23	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  b[i][ir]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  b[i][ir]  =  0;  }  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  b[i][ir]  =  0;  }	      if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    c[i][ir]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ij]);  [CE]  cannot  find  symbol  ij  [FE]    AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ij]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[0][ij]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	non-compiled	[CE]  cannot  find  symbol  ij	6	None	replace
25	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][ir]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][ir]  =  0;  }  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][ir]  =  0;  }	      if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    c[i][ir]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][sqrt]);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][sqrt]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[0][sqrt]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
27	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(b[0][ir]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	add	final  double  sqrt  =  FastMath.sqrt(b[0][ir]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
28	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(b[0][ir]);  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(b[0][ir]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(b[0][ir]);	  final    double    sqrt    =    FastMath.sqrt(c[0][ir]);    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
29	[BUG]  [BUGGY]  double  order  =  matrix.length;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  double  order  =  matrix.length;  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	double  order  =  matrix.length;	      int    order    =    matrix.length;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
30	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][ij]);  [CE]  cannot  find  symbol  ii  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][ij]);  [BUGGY]    b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[ii][ij]);	  final    double    sqrt    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  cannot  find  symbol  ii	4	None	replace
31	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(b[ir][ir]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  final  double  order  =  FastMath.sqrt(b[ir][ir]);  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  order  =  FastMath.sqrt(b[ir][ir]);	      final    double    order    =    FastMath.sqrt(c[ir][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	replace
32	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }    ++r;  loop  =  false;  }  else  {      [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  0;  }  [BUGGY]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  c[i][i]  =  0;  }	      if(loop)    {    for(int    i    =    0;    i    <    size;    ++i)    {    c[i][i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
