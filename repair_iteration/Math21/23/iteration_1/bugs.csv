bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][i]  =  0;  }  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][i]  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	46	None	add
2	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][ir]  =  0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][ir]  =  0;  }  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  c[i][ir]  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	46	None	add
3	[BUG]  [BUGGY]    tmp  =  Math.sqrt(c[ii][ir]);  [CE]  cannot  find  symbol  tmp  [FE]        AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    tmp  =  Math.sqrt(c[ii][ir]);  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    tmp  =  Math.sqrt(c[ii][ir]);		non-compiled	[CE]  cannot  find  symbol  tmp	46	None	add
4	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][ir]);  [CE]  cannot  find  symbol  ii  [FE]    AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ii][ir]);  [BUGGY]  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[ii][ir]);	final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  	non-compiled	[CE]  cannot  find  symbol  ii	45	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  [BUGGY]  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	add	final  double  sqrt  =  FastMath.sqrt(c[0][ir]);	final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  	compilable	  [FE]  AssertionError  	45	3	replace
6	[BUG]  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[0][ir]);  [BUGGY]  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	final  double  sqrt  =  FastMath.sqrt(c[0][ir]);	final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  	compilable	  [FE]  AssertionError  	45	3	replace
7	[BUG]  [BUGGY]    final  double  order  =  FastMath.sqrt(c[ir][ir]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    final  double  order  =  FastMath.sqrt(c[ir][ir]);  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    final  double  order  =  FastMath.sqrt(c[ir][ir]);		non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	add
8	[BUG]  [BUGGY]    final  double  order  =  FastMath.sqrt(root);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    final  double  order  =  FastMath.sqrt(root);  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    final  double  order  =  FastMath.sqrt(root);		non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	add
9	[BUG]  [BUGGY]    final  double  order  =  FastMath.sqrt(c[ir][ir]);  if(order  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    final  double  order  =  FastMath.sqrt(c[ir][ir]);  if(order  ==  0)  {  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    final  double  order  =  FastMath.sqrt(c[ir][ir]);  if(order  ==  0)  {		non-compiled	[CE]  illegal  start  of  expression	46	None	add
10	[BUG]  [BUGGY]    int  order  =  matrix.size();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    int  order  =  matrix.size();  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    int  order  =  matrix.size();		non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	add
11	[BUG]  [BUGGY]    int  order  =  matrix.length();  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    int  order  =  matrix.length();  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    int  order  =  matrix.length();		non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	add
12	[BUG]  [BUGGY]    int  order  =  matrix.length;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError  [CONTEXT]  }    ++r;  loop  =  false;  }  else  {    [BUGGY]    int  order  =  matrix.length;  [BUGGY]  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	121	121	2	replace	    int  order  =  matrix.length;		non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	add
