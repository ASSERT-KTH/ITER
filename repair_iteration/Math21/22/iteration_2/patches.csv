bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  order  =  ir.length  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  ir.length  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  ir.length  -  1;	  int    order    =    ir.length;    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
2	[BUG]  [BUGGY]  int  order  =  ir.length  +  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  ir.length  +  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  ir.length  +  1;	  int    order    =    ir.length;    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
3	[BUG]  [BUGGY]  int  r  =  index[r]  -  2;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  index[r]  -  2;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  index[r]  -  2;	  int    r    =    index[r]    -    1;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
4	[BUG]  [BUGGY]  int  r  =  index[i]  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  index[i]  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  index[i]  -  1;	  int    r    =    index[i];    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
5	[BUG]  [BUGGY]  int  r  =  index[i]  +  1;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  index[i]  +  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  index[i]  +  1;	  int    r    =    index[i];    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
6	[BUG]  [BUGGY]  int  r  =  index[sqrt]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  index[sqrt]  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  index[sqrt]  -  1;	  int    r    =    index[sqrt];    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
7	[BUG]  [BUGGY]  int  order  =  ir  +  1;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  ir  +  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  ir  +  1;	  int    order    =    ir;    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
8	[BUG]  [BUGGY]  int  order  =  ij;  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  ij;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  ij;	  int    order    =    ir;    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
9	[BUG]  [BUGGY]  c[ir][ir]  =  index[swap[r]];  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  c[ir][ir]  =  index[swap[r]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	c[ir][ir]  =  index[swap[r]];	  c[ir][ir]    =    swap[swap[r]];    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
10	[BUG]  [BUGGY]  c[ir][ir]  =  b[swap[r]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  c[ir][ir]  =  b[swap[r]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	c[ir][ir]  =  b[swap[r]];	  c[ir][ir]    =    swap[swap[r]];    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
11	[BUG]  [BUGGY]  c[ir][ir]  =  b[swap[i]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  c[ir][ir]  =  b[swap[i]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	c[ir][ir]  =  b[swap[i]];	  c[ir][ir]    =    root[swap[i]];    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
12	[BUG]  [BUGGY]  int  order  =  swap[r]];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  swap[r]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  swap[r]];	  int    order    =    c[r]];    	non-compiled	[CE]  ';'  expected	21	None	replace
13	[BUG]  [BUGGY]  if  (c[ir][ir]  <  0)  {  if  (c[ir][ir]  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if  (c[ir][ir]  <  0)  {  if  (c[ir][ir]  <  0)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	if    (c[ir][ir]    <    0)    {    if  (c[ir][ir]  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
14	[BUG]  [BUGGY]  if  (c[ir][ir]  <  0)  {  If  (c[ir][ir]  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if  (c[ir][ir]  <  0)  {  If  (c[ir][ir]  <  0)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	if    (c[ir][ir]    <    0)    {    If  (c[ir][ir]  <  0)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
15	[BUG]  [BUGGY]  int  r  =  index[s]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  index[s]  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  index[s]  -  1;	  int    r    =    index[s];    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
16	[BUG]  [BUGGY]  int  r  =  index[l];  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  index[l];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  index[l];	  int    r    =    index[s];    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
17	[BUG]  [BUGGY]  int  order  =  index[swap[r]]  &  0xff;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  index[swap[r]]  &  0xff;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  index[swap[r]]  &  0xff;	  int    order    =    index[swap[r]];    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
18	[BUG]  [BUGGY]  int  order  =  swap[r]  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  swap[r]  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  swap[r]  -  1;	  int    order    =    index[r]    -    1;    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
19	[BUG]  [BUGGY]  int  order  =  swap[swap[r]  -  1];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  swap[swap[r]  -  1];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  swap[swap[r]  -  1];	  int    order    =    matrix[swap[r]    -    1];    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
20	[BUG]  [BUGGY]  int  r  =  size();  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  size();  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  size();	  int    r    =    swap[r]];    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
21	[BUG]  [BUGGY]  int  order  =  b[swap[r]];  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  b[swap[r]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  b[swap[r]];	  int    order    =    c[swap[r]];    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
22	[BUG]  [BUGGY]  If  (c[ir][ir]  <  -small)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  If  (c[ir][ir]  <  -small)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	If  (c[ir][ir]  <  -small)  {	  if    (c[ir][ir]    <    -small)    {    If    (c[ir][ir]    <    -small)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if(c[ir][ir]  ==  -1)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	add	if(c[ir][ir]  ==  -1)  {	  if(c[ir][ir]    <    -1)    {    	compilable	  [FE]  AssertionError  	11	2	replace
24	[BUG]  [BUGGY]  if(c[ir][ir]  ==  -1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if(c[ir][ir]  ==  -1)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	if(c[ir][ir]  ==  -1)  {	  if(c[ir][ir]    <    -1)    {    	compilable	  [FE]  AssertionError  	11	2	replace
25	[BUG]  [BUGGY]  int  order  =  matrix.length  -  2;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  matrix.length  -  2;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  matrix.length  -  2;	  int    order    =    matrix.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if(c[ir][ir]  ==  0)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	add	if(c[ir][ir]  ==  0)  {	  if    (c[ir][ir]    <    0)    {    	compilable	  [FE]  AssertionError  	9	2	replace
27	[BUG]  [BUGGY]  if(c[ir][ir]  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if(c[ir][ir]  ==  0)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	if(c[ir][ir]  ==  0)  {	  if    (c[ir][ir]    <    0)    {    	compilable	  [FE]  AssertionError  	9	2	replace
28	[BUG]  [BUGGY]  int  order  =  c.length  /  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  c.length  /  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  c.length  /  1;	  int    order    =    c.length    +    1;    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
29	[BUG]  [BUGGY]  int  order  =  swap[r]  &  0xff;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  swap[r]  &  0xff;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  swap[r]  &  0xff;	  int    order    =    index[r]    &    0xff;    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
30	[BUG]  [BUGGY]  int  order  =  matrix[swap[r]]  &  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  matrix[swap[r]]  &  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  matrix[swap[r]]  &  1;	  int    order    =    matrix[swap[r]]    &    0xff;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
31	[BUG]  [BUGGY]  if(c[ir][ir]  <  -1)  {  if(c[ir][ir]  <  -1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if(c[ir][ir]  <  -1)  {  if(c[ir][ir]  <  -1)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	if(c[ir][ir]    <    -1)    {    if(c[ir][ir]  <  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
32	[BUG]  [BUGGY]  if(c[ir][ir]  <  -1)  {  If(c[ir][ir]  <  -1)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  if(c[ir][ir]  <  -1)  {  If(c[ir][ir]  <  -1)  {  [BUGGY]        if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	if(c[ir][ir]    <    -1)    {    If(c[ir][ir]  <  -1)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
33	[BUG]  [BUGGY]  c[ir][ir]  =  swap[swap[i]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  c[ir][ir]  =  swap[swap[i]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	c[ir][ir]  =  swap[swap[i]];	  c[ir][ir]    =    index[swap[i]];    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
34	[BUG]  [BUGGY]  int  order  =  matrix[swap[r]  -  1]  +  ij;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  matrix[swap[r]  -  1]  +  ij;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  matrix[swap[r]  -  1]  +  ij;	  int    order    =    matrix[swap[r]    -    1];    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
35	[BUG]  [BUGGY]  int  order  =  matrix[swap[r]]  &  0xff  +  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  matrix[swap[r]]  &  0xff  +  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  matrix[swap[r]]  &  0xff  +  1;	  int    order    =    matrix[swap[r]]    &    0xff;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
36	[BUG]  [BUGGY]  int  r  =  swap[r]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  swap[r]  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  swap[r]  -  1;	  int    r    =    index[r]    -    1;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
37	[BUG]  [BUGGY]  int  order  =  c[r];  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  c[r];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  c[r];	  int    order    =    c[r]];    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
38	[BUG]  [BUGGY]  c[ir][ir]  =  c[swap[i]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  c[ir][ir]  =  c[swap[i]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	c[ir][ir]  =  c[swap[i]];	  c[ir][ir]    =    index[swap[i]];    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
39	[BUG]  [BUGGY]  c[ir][ir]  =  swap[i]];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  c[ir][ir]  =  swap[i]];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	c[ir][ir]  =  swap[i]];	  c[ir][ir]    =    index[swap[i]];    	non-compiled	[CE]  ';'  expected	3	None	replace
40	[BUG]  [BUGGY]  int  r  =  swap[s];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  swap[s];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  swap[s];	  int    r    =    index[s];    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
41	[BUG]  [BUGGY]  int  order  =  swap.length  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  swap.length  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  swap.length  -  1;	  int    order    =    matrix.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
42	[BUG]  [BUGGY]  int  order  =  c[swap[r]  -  1];  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  c[swap[r]  -  1];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  c[swap[r]  -  1];	  int    order    =    c[swap[r]];    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
43	[BUG]  [BUGGY]  int  order  =  0;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  0;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  0;	  int    order    =    ir;    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
44	[BUG]  [BUGGY]  int  order  =  swap.length;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  swap.length;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  swap.length;	  int    order    =    ir.length;    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
45	[BUG]  [BUGGY]  int  r  =  swap[r]  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  swap[r]  +  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  swap[r]  +  1;	  int    r    =    index[r]    +    1;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
46	[BUG]  [BUGGY]  int  order  =  c[r]  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  order  =  c[r]  -  1;  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  order  =  c[r]  -  1;	  int    order    =    c[r]];    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
47	[BUG]  [BUGGY]  int  r  =  swap[sqrt];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  swap[sqrt];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  swap[sqrt];	  int    r    =    index[sqrt];    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
48	[BUG]  [BUGGY]  int  r  =  swap[i];  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];      [BUGGY]  int  r  =  swap[i];  [BUGGY]      if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	98	98	2	replace	int  r  =  swap[i];	  int    r    =    index[i];    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
