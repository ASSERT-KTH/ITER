bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  c[ij][ii]  -=  e  *  b;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  -=  e  *  b;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]  -=  e  *  b;	          c[ij][ii]    -=    e    *    f;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	35	None	replace
2	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][j]  =  inverse;	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
3	[BUG]  [BUGGY]  c[ii][j]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][j]  =  inverse;	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
4	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
5	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij]  =  f;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ij]        =        f;        b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	8	3	add
7	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij]  =  f;  b[ii][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij]  =  f;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	8	3	add
8	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij],  f;  b[ii][ij]  =  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij],  f;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][ij]    =    f;    b[ii][ij],  f;  b[ii][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	8	None	add
9	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  if(ii][ij]  =  f;  b[ii][ij]  =  f;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  if(ii][ij]  =  f;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][ij]    =    f;    if(ii][ij]  =  f;  b[ii][ij]  =  f;	  	non-compiled	[CE]  ')'  expected	8	None	add
10	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]  =  e;  c[ij][ii]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    e;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	63	3	replace
11	[BUG]  [BUGGY]  c[ii][ij]  =  e;  c[ij][ii]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]  =  e;  c[ij][ii]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    e;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	63	3	replace
12	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    e;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	63	3	replace
13	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ij][ii]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    e;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	63	3	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
15	[BUG]  [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  e  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij]  =  e  +  1;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
17	[BUG]  [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  e  +  1;  c[ii][ij]  =  f  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  e  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij]  =  e  +  1;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
18	[BUG]  [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij],  f  +  1;  c[ii][ij]  =  f  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij],  f  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij],  f  +  1;  c[ii][ij]  =  f  +  1;	  	non-compiled	[CE]  not  a  statement	29	None	add
19	[BUG]  [BUGGY]  if[ii][ij]  =  f  +  1;  [CE]  '('  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if[ii][ij]  =  f  +  1;	  c[ii][ij]    =    f    +    1;    if[ii][ij]    =    f    +    1;    	non-compiled	[CE]  '('  expected	31	None	replace
20	[BUG]  [BUGGY]  if[ii][ij]  <  f  +  1;  [CE]  '('  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if[ii][ij]  <  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if[ii][ij]  <  f  +  1;	  c[ii][ij]    =    f    +    1;    if[ii][ij]    =    f    +    1;    	non-compiled	[CE]  '('  expected	31	None	replace
21	[BUG]  [BUGGY]  b[ii][ii],  =  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii],  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii],  =  f;	          b[ii][ii]    =    f;    b[ii][ii],    =    f;    	non-compiled	[CE]  not  a  statement	58	None	replace
22	[BUG]  [BUGGY]  b[ii][ii]  =  c;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  c;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]  =  c;	          b[ii][ii]    =    f;    b[ii][ii]    =    f;    	non-compiled	[CE]  incompatible  types	2	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  f  *  f;	  	compilable	  [FE]  AssertionError  	36	2	add
24	[BUG]  [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  f  *  f;	  	compilable	  [FE]  AssertionError  	36	2	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  f  *  e;	  	compilable	  [FE]  AssertionError  	36	2	add
26	[BUG]  [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  e;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  f  *  e;	  	compilable	  [FE]  AssertionError  	36	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	36	2	add
28	[BUG]  [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  e  *  f;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	36	2	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]    =    f    +    1;    c[ij][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	70	3	add
30	[BUG]  [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij]  =  f  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    f    +    1;    c[ij][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	70	3	add
31	[BUG]  [BUGGY]  c[ij][ij]  =  f  +  1;  if[ij][ij]  =  f  +  1;  [CE]  '('  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  f  +  1;  if[ij][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    f    +    1;    if[ij][ij]  =  f  +  1;	  	non-compiled	[CE]  '('  expected	70	None	add
32	[BUG]  [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij],  f  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij],  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    f    +    1;    c[ij][ij],  f  +  1;	  	non-compiled	[CE]  not  a  statement	70	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	56	3	add
34	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij]  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    inverse;    c[ij][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	56	3	add
35	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  if[ij][ij]  =  inverse;  [CE]  '('  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  if[ij][ij]  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    inverse;    if[ij][ij]  =  inverse;	  	non-compiled	[CE]  '('  expected	56	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ii]    =    f;    c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	49	2	add
37	[BUG]  [BUGGY]  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]    =    f;    c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	49	2	add
38	[BUG]  [BUGGY]  c[ij][ii]  =  f;  if[ij][ii]  =  f;  [CE]  '('  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  if[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]    =    f;    if[ij][ii]  =  f;	  	non-compiled	[CE]  '('  expected	49	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii]  =  e;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ii]    =    f;    c[ij][ii]  =  e;	  	compilable	  [FE]  AssertionError  	49	2	add
40	[BUG]  [BUGGY]  c[ij][ii]  =  f;  c[ij][ii]  =  e;  [FE]  AssertionError  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii]  =  e;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]    =    f;    c[ij][ii]  =  e;	  	compilable	  [FE]  AssertionError  	49	2	add
41	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    c[ij][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
42	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    c[ij][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
43	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    if(ij][ij]    <    f)    {    c[ij][ij]    =    f;    }    else    {    c[ij][ij]    =    f;    }    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	59	3	replace
44	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    if(ij][ij]    <    f)    {    c[ij][ij]    =    f;    }    else    {    c[ij][ij]    =    f;    }    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	59	3	replace
45	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  c[ii][ij];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  c[ii][ij];	          final    double    f    =    f    *    c[ii][ij];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	replace
46	[BUG]  [BUGGY]  final  double  f  =  inverse  *  c[ii][ij];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  inverse  *  c[ii][ij];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  inverse  *  c[ii][ij];	          final    double    f    =    f    *    c[ii][ij];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	46	None	replace
47	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  s  *  b[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  c[ii][ij]  -  s  *  b[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  c[ii][ij]  -  s  *  b[j][r];	  final    double    f    =    c[ii][ij]    -    f    *    b[j][r];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	45	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][ij]  =  f;  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ij]        =        f;        b[ii][j]    =    f;    b[ii][ij]  =  f;  b[ii][j]  =  f;	  	compilable	  [FE]  AssertionError  	10	3	add
49	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][ij]  =  f;  b[ii][j]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][ij]  =  f;  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][j]    =    f;    b[ii][ij]  =  f;  b[ii][j]  =  f;	  	compilable	  [FE]  AssertionError  	10	3	add
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][j]  =  f;  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ij]        =        f;        b[ii][j]    =    f;    b[ii][j]  =  f;  b[ii][j]  =  f;	  	compilable	  [FE]  AssertionError  	10	3	add
51	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][j]  =  f;  b[ii][j]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][j]  =  f;  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][j]    =    f;    b[ii][j]  =  f;  b[ii][j]  =  f;	  	compilable	  [FE]  AssertionError  	10	3	add
52	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][ij],  f;  b[ii][j]  =  f;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][j]  =  f;  b[ii][ij],  f;  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][j]    =    f;    b[ii][ij],  f;  b[ii][j]  =  f;	  	non-compiled	[CE]  not  a  statement	10	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	2	add
54	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	2	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	2	add
56	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	2	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	2	add
58	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  e;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	2	add
59	[BUG]  [BUGGY]  c[ii][ij],  f  +  1;  [CE]  not  a  statement  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij],  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij],  f  +  1;	  c[ii][ij]    =    f    +    1;    c[ii][ij],    f    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
60	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ii]    =    f;    c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	add
61	[BUG]  [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ii]    =    f;    c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	add
62	[BUG]  [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  tmp;  [CE]  cannot  find  symbol  tmp  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  tmp;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ii]    =    f;    c[ii][ii]  =  tmp;	  	non-compiled	[CE]  cannot  find  symbol  tmp	5	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  e;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ii]    =    f;    c[ii][ii]  =  e;	  	compilable	  [FE]  AssertionError  	5	3	add
64	[BUG]  [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  e;  [FE]  AssertionError  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ii]  =  e;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ii]    =    f;    c[ii][ii]  =  e;	  	compilable	  [FE]  AssertionError  	5	3	add
65	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r]  +  1;  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][r]  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][r]  +  1;	          final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	33	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	38	2	add
67	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	38	2	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	38	2	add
69	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	38	2	add
70	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  e[ij][ii]  =  f;  [CE]  array  required,  but  double  found  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  e[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ij][ii]  =  f;  e[ij][ii]  =  f;	  	non-compiled	[CE]  array  required,  but  double  found	38	None	add
71	[BUG]  [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  [CE]  ';'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]	          if(f!=    small)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    b[j]    	non-compiled	[CE]  ';'  expected	69	None	replace
72	[BUG]  [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  }  [CE]  ';'  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  }	          if(f!=    small)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    b[j]    	non-compiled	[CE]  ';'  expected	69	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	34	2	add
74	[BUG]  [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f;	  	compilable	  [FE]  AssertionError  	34	2	add
75	[BUG]  [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  e  *  f);  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  e  *  f);	  	non-compiled	[CE]  ';'  expected	34	None	add
76	[BUG]  [BUGGY]  if(f  >  e)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [CE]  '('  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f  >  e)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f  >  e)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }	  c[ii][ij]    =    e;    if[ii][ij]    =    e;    	non-compiled	[CE]  '('  expected	21	None	replace
77	[BUG]  [BUGGY]  if(f!=  e)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [CE]  '('  expected  [FE]              NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }	  c[ii][ij]    =    e;    if[ii][ij]    =    e;    	non-compiled	[CE]  '('  expected	21	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;  c[ii][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;	  	compilable	  [FE]  AssertionError  	17	2	add
79	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;  c[ii][ij]  =  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;  c[ii][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;	  	compilable	  [FE]  AssertionError  	17	2	add
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  f;  c[ii][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e;	  	compilable	  [FE]  AssertionError  	17	2	add
81	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  f;  c[ii][ij]  =  e;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  f;  c[ii][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e;	  	compilable	  [FE]  AssertionError  	17	2	add
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	17	2	add
83	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	17	2	add
84	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ii]  -=  f  *  e;	          c[ij][ii]    -=    f    *    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	37	3	replace
85	[BUG]  [BUGGY]  c[ij][ii]  -=  f  *  e;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  -=  f  *  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]  -=  f  *  e;	          c[ij][ii]    -=    f    *    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	37	3	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  AssertionError  	27	2	add
87	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  AssertionError  	27	2	add
88	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  if[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [CE]  '('  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  if[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    if[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	non-compiled	[CE]  '('  expected	27	None	add
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  AssertionError  	27	2	add
90	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  AssertionError  	27	2	add
91	[BUG]  [BUGGY]  c[ii][ij],  =  f  +  1;  [CE]  not  a  statement  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij],  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij],  =  f  +  1;	  c[ii][ij]    =    f    +    1;    c[ii][ij],    =    f    +    1;    	non-compiled	[CE]  not  a  statement	43	None	replace
92	[BUG]  [BUGGY]  c[ii][ij],  =  f  +  2;  [CE]  not  a  statement  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij],  =  f  +  2;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij],  =  f  +  2;	  c[ii][ij]    =    f    +    1;    c[ii][ij],    =    f    +    1;    	non-compiled	[CE]  not  a  statement	43	None	replace
93	[BUG]  [BUGGY]  c[ij][ij].  =  f;  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij].  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij].  =  f;	  c[ij][ij]    =    f;    c[ij][ij].    =    f;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii]  =  f;  b[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ii]        =        f;        b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii]  =  f;	  	compilable	  [FE]  AssertionError  	1	3	add
95	[BUG]  [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii]  =  f;  b[ii][ii]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii]  =  f;  b[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii]  =  f;	  	compilable	  [FE]  AssertionError  	1	3	add
96	[BUG]  [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii],  f;  b[ii][ii]  =  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii],  f;  b[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        b[ii][ii]    =    f;    b[ii][ii],  f;  b[ii][ii]  =  f;	  	non-compiled	[CE]  not  a  statement	1	None	add
97	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
98	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
99	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  if(ij  <  0)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  if(ij  <  0)  {  continue;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  if(ij  <  0)  {  continue;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
100	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	39	3	replace
101	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	39	3	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	24	2	add
103	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	compilable	  [FE]  AssertionError  	24	2	add
104	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  if[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [CE]  '('  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  if[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    if[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  '('  expected	24	None	add
105	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij],  inverse;  c[ii][ij]  =  inverse;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij],  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][ij],  inverse;  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  not  a  statement	24	None	add
106	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ii]  =  inverse;	  b[ii][ii]    =    sqrt;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	23	3	replace
107	[BUG]  [BUGGY]  b[ii][ii]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]  =  inverse;	  b[ii][ii]    =    sqrt;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	23	3	replace
108	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	25	3	replace
109	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	25	3	replace
110	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  if[ij][ii]  >  0;  }  [CE]  '('  expected  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  if[ij][ii]  >  0;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  f;  if[ij][ii]  >  0;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	non-compiled	[CE]  '('  expected	40	None	replace
111	[BUG]  [BUGGY]  if(ij  <  0  ||  ij  >  0)  {  c[ii][ij]  =  f;  if[ij][ii]  }  [CE]  '('  expected  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0  ||  ij  >  0)  {  c[ii][ij]  =  f;  if[ij][ii]  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0  ||  ij  >  0)  {  c[ii][ij]  =  f;  if[ij][ii]  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	non-compiled	[CE]  '('  expected	40	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ij]        =        f;        c[ii][ij]    =    f;    b[ii][ij]  =  f;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	64	3	add
113	[BUG]  [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij]  =  f;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        c[ii][ij]    =    f;    b[ii][ij]  =  f;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	64	3	add
114	[BUG]  [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij],  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij],  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        c[ii][ij]    =    f;    b[ii][ij],  c[ii][ij]  =  f;  c[ii][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	64	None	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	64	3	add
116	[BUG]  [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        c[ii][ij]    =    f;    c[ii][ij]  =  f;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	64	3	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij    <    0)    {    c[ii][ij]    =    f;    c[ij][ii]    =    f;    }    if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	  	compilable	  [FE]  AssertionError  	51	2	add
118	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij    <    0)    {    c[ii][ij]    =    f;    c[ij][ii]    =    f;    }    if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	  	compilable	  [FE]  AssertionError  	51	2	add
119	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  If(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [CE]  ';'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  If(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij    <    0)    {    c[ii][ij]    =    f;    c[ij][ii]    =    f;    }    If(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	  	non-compiled	[CE]  ';'  expected	51	None	add
120	[BUG]  [BUGGY]  b[ii][ij],  =  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij],  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij],  =  f;	          b[ii][ij]    =    f;    b[ii][ij],    =    f;    	non-compiled	[CE]  not  a  statement	53	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	12	3	add
122	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	12	3	add
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	12	3	add
124	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	12	3	add
125	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij],  f;  c[ij][ij]  =  f;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  c[ij][ij],  f;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    c[ij][ij],  f;  c[ij][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	12	None	add
126	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    b[ii][ii]  =  f;  c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	3	3	add
127	[BUG]  [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ii]  =  f;  c[ii][ii]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    b[ii][ii]  =  f;  c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	3	3	add
128	[BUG]  [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ii],  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ii],  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    b[ii][ii],  c[ii][ii]  =  f;  c[ii][ii]  =  f;	  	non-compiled	[CE]  not  a  statement	3	None	add
129	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    c[ii][ii]  =  f;  c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	3	3	add
130	[BUG]  [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  c[ii][ii]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    c[ii][ii]  =  f;  c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	3	3	add
131	[BUG]  [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j][  [CE]  ']'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j][	  if(f!=    small)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    b[i][ij];    b[i][ii]    -=    e    *    b[j][    	non-compiled	[CE]  ']'  expected	67	None	replace
132	[BUG]  [BUGGY]  if(f!=  small)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j][  [CE]  ']'  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  small)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j][  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  small)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j][	  if(f!=    small)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    b[i][ij];    b[i][ii]    -=    e    *    b[j][    	non-compiled	[CE]  ']'  expected	67	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        e;        c[ii][ij]    =    f;    c[ii][ij]  =  e;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	19	2	add
134	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    f;    c[ii][ij]  =  e;  c[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	19	2	add
135	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e,  c[ii][ij]  =  f;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij]  =  e,  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    f;    c[ii][ij]  =  e,  c[ii][ij]  =  f;	  	non-compiled	[CE]  ';'  expected	19	None	add
136	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij],  e;  c[ii][ij]  =  f;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij],  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    f;    c[ii][ij],  e;  c[ii][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	19	None	add
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]    =    e;    c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	41	3	add
138	[BUG]  [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    e;    c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	41	3	add
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]    =    e;    c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	41	3	add
140	[BUG]  [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    e;    c[ij][ij]  =  f;	  	compilable	  [FE]  AssertionError  	41	3	add
141	[BUG]  [BUGGY]  c[ij][ij]  =  e;  if[ij][ij]  =  e;  [CE]  '('  expected  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  e;  if[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    e;    if[ij][ij]  =  e;	  	non-compiled	[CE]  '('  expected	41	None	add
142	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ij]  =  inverse;	  b[ii][ij]    =    sqrt;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	replace
143	[BUG]  [BUGGY]  b[ii][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]  =  inverse;	  b[ii][ij]    =    sqrt;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]        =        f;        c[ij][ij]    =    e;    c[ij][ij]  =  f;  c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	15	3	add
145	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;  c[ij][ij]  =  e;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  f;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    e;    c[ij][ij]  =  f;  c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	15	3	add
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]        =        f;        c[ij][ij]    =    e;    c[ij][ij]  =  e;  c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	15	3	add
147	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij]  =  e;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    e;    c[ij][ij]  =  e;  c[ij][ij]  =  e;	  	compilable	  [FE]  AssertionError  	15	3	add
148	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  if(ij][ij]  =  f;  c[ij][ij]  =  e;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  if(ij][ij]  =  f;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    e;    if(ij][ij]  =  f;  c[ij][ij]  =  e;	  	non-compiled	[CE]  ')'  expected	15	None	add
149	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][j]  =  f;	          b[ii][ij]    =    f;    b[ii][j]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	11	3	replace
150	[BUG]  [BUGGY]  b[ii][j]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][j]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][j]  =  f;	          b[ii][ij]    =    f;    b[ii][j]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	11	3	replace
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ij]    =    sqrt;    b[ii][ij]  =  sqrt;	  	compilable	  [FE]  AssertionError  	47	3	add
152	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  sqrt;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][ij]  =  sqrt;	  	compilable	  [FE]  AssertionError  	47	3	add
153	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  sqrt.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  sqrt.doubleValue();  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][ij]  =  sqrt.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	47	None	add
154	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  scale;  [CE]  cannot  find  symbol  scale  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  scale;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][ij]  =  scale;	  	non-compiled	[CE]  cannot  find  symbol  scale	47	None	add
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ii]    =    sqrt;    b[ii][ii]  =  sqrt;	  	compilable	  [FE]  AssertionError  	22	2	add
156	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sqrt;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ii]  =  sqrt;	  	compilable	  [FE]  AssertionError  	22	2	add
157	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sqrt.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sqrt.doubleValue();  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ii]  =  sqrt.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	add
158	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sql;  [CE]  cannot  find  symbol  sql  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  sql;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ii]  =  sql;	  	non-compiled	[CE]  cannot  find  symbol  sql	22	None	add
159	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	25	3	replace
160	[BUG]  [BUGGY]  if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	25	3	replace
161	[BUG]  [BUGGY]  if(loop  >  0)  {  c[ij][ij]  =  f;  if(ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  [CE]  ')'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(loop  >  0)  {  c[ij][ij]  =  f;  if(ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(loop  >  0)  {  c[ij][ij]  =  f;  if(ij][ij]  <  f)  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    if(ij][ij]    <    f)    {    c[ij][ij]    =    f;    }    else    {    c[ij][ij]    =    f;    }    	non-compiled	[CE]  ')'  expected	59	None	replace
162	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
163	[BUG]  [BUGGY]  if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(inverse  >  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
164	[BUG]  [BUGGY]  c[ii][ij],  =  f;  c[ij][ii]  =  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij],  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij],  =  f;  c[ij][ii]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij],    =    f;    c[ij][ii]    =    f;    	non-compiled	[CE]  not  a  statement	54	None	replace
165	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ii]    =    f;    c[ii][ij]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	add
166	[BUG]  [BUGGY]  c[ii][ii]  =  f;  c[ii][ij]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ii]    =    f;    c[ii][ij]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	add
167	[BUG]  [BUGGY]  c[ii][ii]  =  f;  c[ii][ii],  =  f;  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  f;  c[ii][ii],  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ii]    =    f;    c[ii][ii],  =  f;	  	non-compiled	[CE]  not  a  statement	5	None	add
168	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  if[ij][ij]  =  f;  c[ij][ij]  =  e;  [CE]  '('  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  if[ij][ij]  =  f;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    e;    if[ij][ij]  =  f;  c[ij][ij]  =  e;	  	non-compiled	[CE]  '('  expected	15	None	add
169	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ij]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    b[ii][ij]  =  f;  c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	3	3	add
170	[BUG]  [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ij]  =  f;  c[ii][ii]  =  f;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    c[ii][ii]  =  f;  b[ii][ij]  =  f;  c[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        c[ii][ii]    =    f;    b[ii][ij]  =  f;  c[ii][ii]  =  f;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	3	3	add
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	38	3	add
172	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	38	3	add
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	3	add
174	[BUG]  [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]  =  e;  c[ij][ii]  =  f;  c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        f;        c[ij][ii]        =        f;        c[ii][ij]    =    e;    c[ij][ii]    =    f;    c[ii][ij]  =  f;  c[ij][ij]  =  f;  c[ij][ii]  =  f;	  	compilable	  [FE]  AssertionError  	62	3	add
175	[BUG]  [BUGGY]  if(f!=  0)  {  c[ij][ij]  =  f;  c[ij][ij].  =  f;  }  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  0)  {  c[ij][ij]  =  f;  c[ij][ij].  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  0)  {  c[ij][ij]  =  f;  c[ij][ij].  =  f;  }	  c[ij][ij]    =    f;    c[ij][ij].    =    f;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
176	[BUG]  [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij],  =  f  +  1;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij],  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    f    +    1;    c[ij][ij],  =  f  +  1;	  	non-compiled	[CE]  not  a  statement	70	None	add
177	[BUG]  [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij].  =  f  +  1;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  f  +  1;  c[ij][ij].  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    f    +    1;    c[ij][ij].  =  f  +  1;	  	non-compiled	[CE]  <identifier>  expected	70	None	add
178	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][j]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][j]  =  sqrt;	          b[ii][ij]    =    f;    b[ii][j]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	11	3	replace
179	[BUG]  [BUGGY]  b[ii][j]  =  sqrt;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][j]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][j]  =  sqrt;	          b[ii][ij]    =    f;    b[ii][j]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	11	3	replace
180	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  if[ii][ij]  =  inverse;  }  [CE]  '('  expected  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  if[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  if[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	non-compiled	[CE]  '('  expected	26	None	replace
181	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  if[ii][ij]  =  f;  }  [CE]  '('  expected  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  if[ii][ij]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  if[ii][ij]  =  f;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	non-compiled	[CE]  '('  expected	26	None	replace
182	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  if(ij][ij]  =  f;  c[ij][ij]  =  f;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  f;  if(ij][ij]  =  f;  c[ij][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    f;    if(ij][ij]  =  f;  c[ij][ij]  =  f;	  	non-compiled	[CE]  ')'  expected	12	None	add
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][j]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ij]    =    sqrt;    b[ii][j]  =  sqrt;	  	compilable	  [FE]  AssertionError  	47	3	add
184	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][j]  =  sqrt;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][j]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][j]  =  sqrt;	  	compilable	  [FE]  AssertionError  	47	3	add
185	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij],  sqrt;  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij],  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][ij],  sqrt;	  	non-compiled	[CE]  not  a  statement	47	None	add
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][j]  =  f  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][j]  =  f  +  1;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
187	[BUG]  [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][j]  =  f  +  1;  c[ii][ij]  =  f  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][j]  =  f  +  1;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][j]  =  f  +  1;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
188	[BUG]  [BUGGY]  c[ij][ij]  =  e;  c[ij][ij].  =  e;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  e;  c[ij][ij].  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    e;    c[ij][ij].  =  e;	  	non-compiled	[CE]  <identifier>  expected	41	None	add
189	[BUG]  [BUGGY]  if(f!=  e)  {  for(int  ij  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  [CE]  ';'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  for(int  ij  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  for(int  ij  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  c[ii][ij];  b[i][ii]  -=  e  *  b[j]	          if(f!=    small)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    c[ii][ij];    b[i][ii]    -=    e    *    b[j]    	non-compiled	[CE]  ';'  expected	69	None	replace
190	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ij][ij]  =  f;  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    c[ij][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
191	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  c[ij][ij]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ij][ij]  =  f;  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ij][ij]  =  f;  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    c[ij][ij]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	13	3	replace
192	[BUG]  [BUGGY]  b[ii][ij].  =  f;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij].  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij].  =  f;	          b[ii][ij]    =    f;    b[ii][ij].    =    f;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
193	[BUG]  [BUGGY]  c[ij][ij]  =  value;  [CE]  cannot  find  symbol  value  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  value;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]  =  value;	  c[ij][ij]    =    f;    c[ij][ij]    =    tmp;    	non-compiled	[CE]  cannot  find  symbol  value	14	None	replace
194	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij],  inverse;  c[ii][j]  =  inverse;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij],  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][ij],  inverse;  c[ii][j]  =  inverse;	  	non-compiled	[CE]  not  a  statement	27	None	add
195	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  if[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [CE]  '('  expected  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  if[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  f;  if[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	non-compiled	[CE]  '('  expected	40	None	replace
196	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  if[ij][ij]  =  f;  }  [CE]  '('  expected  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  if[ij][ij]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  f;  if[ij][ij]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	non-compiled	[CE]  '('  expected	40	None	replace
197	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]  =  f  +  2;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]  =  f  +  2;	  c[ii][ij]    =    f    +    1;    c[ii][ij]    =    f    +    1;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	30	3	replace
198	[BUG]  [BUGGY]  c[ii][ij]  =  f  +  2;  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]  =  f  +  2;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]  =  f  +  2;	  c[ii][ij]    =    f    +    1;    c[ii][ij]    =    f    +    1;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	30	3	replace
199	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [CE]  '('  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }	  c[ii][ij]    =    e;    if[ii][ij]    =    e;    	non-compiled	[CE]  '('  expected	21	None	replace
200	[BUG]  [BUGGY]  if(ii  <  0)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [CE]  '('  expected  [FE]              NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ii  <  0)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ii  <  0)  {  c[ii][ij]  =  e;  if[ii][ij]  =  f;  }	  c[ii][ij]    =    e;    if[ii][ij]    =    e;    	non-compiled	[CE]  '('  expected	21	None	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  f  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  f  *  f;	  	compilable	  [FE]  AssertionError  	34	2	add
202	[BUG]  [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  f  *  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii]  -=  f  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    e    *    f;    c[ij][ii]  -=  f  *  f;	  	compilable	  [FE]  AssertionError  	34	2	add
203	[BUG]  [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii],  -=  e  *  f;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  e  *  f;  c[ij][ii],  -=  e  *  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    e    *    f;    c[ij][ii],  -=  e  *  f;	  	non-compiled	[CE]  not  a  statement	34	None	add
204	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  if(ii][ij]  =  e;  c[ii][ij]  =  f;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  if(ii][ij]  =  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    f;    if(ii][ij]  =  e;  c[ii][ij]  =  f;	  	non-compiled	[CE]  ')'  expected	19	None	add
205	[BUG]  [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  b[ii][ij]  -  e  *  c[j][r];	  final    double    f    =    c[ii][ij]    -    f    *    b[j][r];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	45	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ij]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ii]    =    sqrt;    b[ii][ij]  =  sqrt;	  	compilable	  [FE]  AssertionError  	22	3	add
207	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ij]  =  sqrt;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ij]  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ij]  =  sqrt;	  	compilable	  [FE]  AssertionError  	22	3	add
208	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii],  =  sqrt;  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii],  =  sqrt;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ii],  =  sqrt;	  	non-compiled	[CE]  not  a  statement	22	None	add
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  r;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  f  *  r;	  	compilable	  [FE]  AssertionError  	36	2	add
210	[BUG]  [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  r;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ij][ii]  -=  f  *  f;  c[ij][ii]  -=  f  *  r;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ij][ii]    -=    f    *    f;    c[ij][ii]  -=  f  *  r;	  	compilable	  [FE]  AssertionError  	36	2	add
211	[BUG]  [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j]  [CE]  ';'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j]  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  for(int  j  =  ij  +  1;  j  <  i;  ++j)  {  final  double  e  =  inverse  *  b[i][ij];  b[i][ii]  -=  e  *  b[j]	  if(f!=    small)    {    for(int    ij    =    ij    +    1;    j    <    i;    ++j)    {    final    double    e    =    inverse    *    b[i][ij];    b[i][ii]    -=    e    *    b[j][    	non-compiled	[CE]  ';'  expected	67	None	replace
212	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[j][i];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[j][i];	          final    double    f    =    c[ii][ij]    -    e    *    b[j][r];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	33	None	replace
213	[BUG]  [BUGGY]  c[ij][ii]  =  f;  c[ij][ii],  =  f;  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii],  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]    =    f;    c[ij][ii],  =  f;	  	non-compiled	[CE]  not  a  statement	49	None	add
214	[BUG]  [BUGGY]  c[ij][ii]  =  f;  c[ij][ii].  =  f;  [CE]  <identifier>  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii].  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]    =    f;    c[ij][ii].  =  f;	  	non-compiled	[CE]  <identifier>  expected	49	None	add
215	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	39	3	replace
216	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij  <  0)  {  c[ii][ij]  =  f;  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	39	3	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]  =  f;  c[ii][ij]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  AssertionError  	39	2	replace
218	[BUG]  [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]  =  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]  =  f;  c[ii][ij]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  AssertionError  	39	2	replace
219	[BUG]  [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij],  f;  c[ii][ij]  =  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    c[ii][ij]  =  f;  b[ii][ij],  f;  c[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        c[ii][ij]    =    f;    b[ii][ij],  f;  c[ii][ij]  =  f;	  	non-compiled	[CE]  not  a  statement	64	None	add
220	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij],  =  inverse;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij],  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    inverse;    c[ij][ij],  =  inverse;	  	non-compiled	[CE]  not  a  statement	56	None	add
221	[BUG]  [BUGGY]  b[ii][ii],  f;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii],  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii],  f;	          b[ii][ii]    =    f;    b[ii][ii],    f;    	non-compiled	[CE]  not  a  statement	72	None	replace
222	[BUG]  [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii],  =  f;  b[ii][ii]  =  f;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ii]    =    f;    b[ii][ii]  =  f;  b[ii][ii],  =  f;  b[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ii]        =        f;        b[ii][ii]    =    f;    b[ii][ii],  =  f;  b[ii][ii]  =  f;	  	non-compiled	[CE]  not  a  statement	1	None	add
223	[BUG]  [BUGGY]  b[ii][ij],  =  c;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij],  =  c;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij],  =  c;	          b[ii][ij]    =    f;    b[ii][ij],    =    f;    	non-compiled	[CE]  not  a  statement	53	None	replace
224	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij],  e;  c[ii][ij]  =  e;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  c[ii][ij],  e;  c[ii][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    e;    c[ii][ij],  e;  c[ii][ij]  =  e;	  	non-compiled	[CE]  not  a  statement	17	None	add
225	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  if(ii][ij]  <  e;  c[ii][ij]  =  e;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  e;  if(ii][ij]  <  e;  c[ii][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    e;    if(ii][ij]  <  e;  c[ii][ij]  =  e;	  	non-compiled	[CE]  ')'  expected	17	None	add
226	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  if(ii][ij]  ==  inverse;  c[ii][j]  =  inverse;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  if(ii][ij]  ==  inverse;  c[ii][j]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    if(ii][ij]  ==  inverse;  c[ii][j]  =  inverse;	  	non-compiled	[CE]  ')'  expected	27	None	add
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ij]    =    sqrt;    b[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	47	3	add
228	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  f;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][ij]  =  f;	  	compilable	  [FE]  AssertionError  	47	3	add
229	[BUG]  [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  scaled;  [CE]  cannot  find  symbol  scaled  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ij]  =  sqrt;  b[ii][ij]  =  scaled;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ij]    =    sqrt;    b[ii][ij]  =  scaled;	  	non-compiled	[CE]  cannot  find  symbol  scaled	47	None	add
230	[BUG]  [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij].  =  e;  c[ii][ij]  =  f;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    e;    c[ii][ij]  =  f;  c[ii][ij].  =  e;  c[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        e;        c[ii][ij]    =    f;    c[ii][ij].  =  e;  c[ii][ij]  =  f;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
231	[BUG]  [BUGGY]  if[ii][ij]  =  f;  [CE]  '('  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if[ii][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if[ii][ij]  =  f;	  c[ii][ij]    =    f    +    1;    if[ii][ij]    =    f    +    1;    	non-compiled	[CE]  '('  expected	31	None	replace
232	[BUG]  [BUGGY]  final  double  f  =  b[ii][ij]  -  f  *  c[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  final  double  f  =  b[ii][ij]  -  f  *  c[j][r];  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	final  double  f  =  b[ii][ij]  -  f  *  c[j][r];	  final    double    f    =    c[ii][ij]    -    f    *    b[j][r];    	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	45	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  c[ij][ij]  =  f;  c[ij][ij]  =  e;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(f!=  e)  {  c[ij][ij]  =  f;  c[ij][ij]  =  e;  }	  c[ij][ij]    =    f;    c[ij][ij]    =    e;    	compilable	  [FE]  AssertionError  	16	3	replace
234	[BUG]  [BUGGY]  if(f!=  e)  {  c[ij][ij]  =  f;  c[ij][ij]  =  e;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f!=  e)  {  c[ij][ij]  =  f;  c[ij][ij]  =  e;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f!=  e)  {  c[ij][ij]  =  f;  c[ij][ij]  =  e;  }	  c[ij][ij]    =    f;    c[ij][ij]    =    e;    	compilable	  [FE]  AssertionError  	16	3	replace
235	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(c[ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(c[ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    if(ij][ij]    <    f)    {    c[ij][ij]    =    f;    }    else    {    c[ij][ij]    =    f;    }    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	59	3	replace
236	[BUG]  [BUGGY]  if(c[ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(c[ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(c[ij][ij]  <  f)  {  c[ij][ij]  =  f;  }  else  {  c[ij][ij]  =  f;  }	  c[ij][ij]    =    f;    if(ij][ij]    <    f)    {    c[ij][ij]    =    f;    }    else    {    c[ij][ij]    =    f;    }    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	59	3	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  2;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  2;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
238	[BUG]  [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  2;  c[ii][ij]  =  f  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  1;  c[ii][ij]  =  f  +  2;  c[ii][ij]  =  f  +  1;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij]        =        f        +        1;        c[ii][ij]    =    f    +    1;    c[ii][ij]  =  f  +  2;  c[ii][ij]  =  f  +  1;	  	compilable	  [FE]  AssertionError  	29	2	add
239	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij].    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	68	3	replace
240	[BUG]  [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]        AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij].    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	68	3	replace
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[0][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[0][ij]  =  f;	  c[ij][ij]    =    f;    c[ij][ij]    =    f;    	compilable	  [FE]  AssertionError  	13	2	replace
242	[BUG]  [BUGGY]  c[0][ij]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[0][ij]  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[0][ij]  =  f;	  c[ij][ij]    =    f;    c[ij][ij]    =    f;    	compilable	  [FE]  AssertionError  	13	2	replace
243	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij].  =  inverse;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  c[ij][ij].  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    inverse;    c[ij][ij].  =  inverse;	  	non-compiled	[CE]  <identifier>  expected	56	None	add
244	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  c[0][ij]  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ij][ij]    =    inverse;    c[0][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	56	3	add
245	[BUG]  [BUGGY]  c[ij][ij]  =  inverse;  c[0][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]  =  inverse;  c[0][ij]  =  inverse;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]    =    inverse;    c[0][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	56	3	add
246	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  if(ii][ij]  ==  inverse;  c[ii][ij]  =  inverse;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  if(ii][ij]  ==  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    if(ii][ij]  ==  inverse;  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  ')'  expected	24	None	add
247	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
248	[BUG]  [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(inverse!=  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	28	3	replace
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	b[ii][ii]    =    sqrt;    b[ii][ii]  =  f;	  	compilable	  [FE]  AssertionError  	22	3	add
250	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  f;  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ii]  =  f;	  	compilable	  [FE]  AssertionError  	22	3	add
251	[BUG]  [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  scaled;  [CE]  cannot  find  symbol  scaled  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  b[ii][ii]  =  sqrt;  b[ii][ii]  =  scaled;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	b[ii][ii]    =    sqrt;    b[ii][ii]  =  scaled;	  	non-compiled	[CE]  cannot  find  symbol  scaled	22	None	add
252	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  if(ij  <  0)  {  c[ii][ij]  [ii]  =  f;  c[ij][ii]  =  f;  }  [CE]  array  required,  but  double  found  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  if(ij  <  0)  {  c[ii][ij]  [ii]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ij    <    0)    {    c[ii][ij]    =    f;    c[ij][ii]    =    f;    }    if(ij  <  0)  {  c[ii][ij]  [ii]  =  f;  c[ij][ii]  =  f;  }	  	non-compiled	[CE]  array  required,  but  double  found	51	None	add
253	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f  >  e)  {  c[ii][ij]  =  e;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(f  >  e)  {  c[ii][ij]  =  e;  }	  c[ii][ij]    =    e;    if[ii][ij]    =    e;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	21	3	replace
254	[BUG]  [BUGGY]  if(f  >  e)  {  c[ii][ij]  =  e;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(f  >  e)  {  c[ii][ij]  =  e;  }  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(f  >  e)  {  c[ii][ij]  =  e;  }	  c[ii][ij]    =    e;    if[ii][ij]    =    e;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	21	3	replace
255	[BUG]  [BUGGY]  c[ii][ij],  =  f;  [CE]  not  a  statement  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ij],  =  f;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ij],  =  f;	  c[ii][ij]    =    f    +    1;    c[ii][ij],    =    f    +    1;    	non-compiled	[CE]  not  a  statement	43	None	replace
256	[BUG]  [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij],  f;  c[ij][ij]  =  e;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ij]    =    f;    c[ij][ij]  =  e;  c[ij][ij],  f;  c[ij][ij]  =  e;  [BUGGY]      c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ij]        =        f;        c[ij][ij]    =    e;    c[ij][ij],  f;  c[ij][ij]  =  e;	  	non-compiled	[CE]  not  a  statement	15	None	add
257	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(c[ii][ij]!=  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(c[ii][ij]!=  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  AssertionError  	40	2	replace
258	[BUG]  [BUGGY]  if(c[ii][ij]!=  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(c[ii][ij]!=  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(c[ii][ij]!=  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  AssertionError  	40	2	replace
259	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(c[ii][ij]  ==  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(c[ii][ij]  ==  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	40	3	replace
260	[BUG]  [BUGGY]  if(c[ii][ij]  ==  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(c[ii][ij]  ==  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(c[ii][ij]  ==  f)  {  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    if[ii][ij]    =    f;    c[ij][ii]    =    f;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	40	3	replace
261	[BUG]  [BUGGY]  c[ij][ii]  =  f;  c[ij][ii],  f;  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ij][ii]  =  f;  c[ij][ii],  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ij][ii]    =    f;    c[ij][ii],  f;	  	non-compiled	[CE]  not  a  statement	49	None	add
262	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(inverse!=  0)  {  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
263	[BUG]  [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]          AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(inverse!=  0)  {  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(inverse!=  0)  {  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
264	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ii  <  inverse)  {  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	if(ii  <  inverse)  {  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
265	[BUG]  [BUGGY]  if(ii  <  inverse)  {  c[ii][ij]  =  inverse;  }  [FE]  NonPositiveDefiniteMatrixException  [FE]            AssertionError      [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  if(ii  <  inverse)  {  c[ii][ij]  =  inverse;  }  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	if(ii  <  inverse)  {  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    if[ii][ij]    =    inverse;    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	26	3	replace
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	add	c[ii][ii]  =  e;  c[ij][ii]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    e;    c[ij][ii]    =    f;    	compilable	  [FE]  AssertionError  	63	3	replace
267	[BUG]  [BUGGY]  c[ii][ii]  =  e;  c[ij][ii]  =  f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]  c[ii][ii]  =  e;  c[ij][ii]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	c[ii][ii]  =  e;  c[ij][ii]  =  f;	          c[ii][ij]    =    f;    c[ij][ii]    =    f;    c[ii][ij]    =    e;    c[ij][ii]    =    f;    	compilable	  [FE]  AssertionError  	63	3	replace
268	[BUG]  [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij].  =  f;  b[ii][ij]  =  f;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];      [BUGGY]          b[ii][ij]    =    f;    b[ii][ij]  =  f;  b[ii][ij].  =  f;  b[ii][ij]  =  f;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	132	132	2	replace	                b[ii][ij]        =        f;        b[ii][ij]    =    f;    b[ii][ij].  =  f;  b[ii][ij]  =  f;	  	non-compiled	[CE]  <identifier>  expected	8	None	add
