bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	add
2	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  final  double  f  =  c[ii][j]  -=  e  *  c[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  final  double  f  =  c[ii][j]  -=  e  *  c[j][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    final  double  f  =  c[ii][j]  -=  e  *  c[j][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	add
3	[BUG]  [BUGGY]  final  double  c[ii][ij]  =  inverse;  [CE]  ']'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  c[ii][ij]  =  inverse;	          c[ii][ij]    =    inverse;    final    double    c[ii][ij]    =    inverse;    	non-compiled	[CE]  ']'  expected	36	None	replace
4	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  sqrt;  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  sqrt;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  sqrt;	  final    double    e    =    c[ii][ij]    -    e    *    b[i][r];    c[ii][ij]    -=    e    *    e;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	49	None	replace
5	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  c[i][i];	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	replace
6	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[i][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  c[i][i];	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	3	replace
7	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij].;  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij].;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  b[i][ij].;	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij].;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
8	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][ij].;  [CE]  <identifier>  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][ij].;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -(e  *  b[i][ij].;	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij].;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
9	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[i][i];    final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	39	None	add
10	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][ij];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
11	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][ij];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][ij];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
12	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	20	3	add
13	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	20	3	add
14	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  final  double[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  final  double[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    final  double[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	non-compiled	[CE]  ']'  expected	20	None	add
15	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	20	3	add
16	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][j]  =  inverse;  c[ii][j]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	20	3	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  b[ii][ij]  -  e  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    	compilable	  [FE]  AssertionError  	23	3	replace
18	[BUG]  [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[i][ij];  [FE]  AssertionError  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  b[ii][ij]  -  e  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  b[ii][ij]  -  e  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    	compilable	  [FE]  AssertionError  	23	3	replace
19	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	42	None	add
20	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  Final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  Final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    Final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];	  	non-compiled	[CE]  not  a  statement	42	None	add
21	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][ij]  -  c[i][ir];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  inverse  *  c[ii][ij]  -  c[i][ir];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  inverse  *  c[ii][ij]  -  c[i][ir];	  final    double    e    =    c[ii][ij]    -    inverse    *    b[i][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	30	None	replace
22	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  inverse  *  b[i][r];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  c[ii][ij]  -  inverse  *  b[i][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  inverse  *  b[i][r];	  final    double    e    =    c[ii][ij]    -    inverse    *    b[i][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	30	None	replace
23	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][i];    final  double  f  =  c[ii][ij]  -  e  *  c[i][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	44	None	add
24	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  Final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  Final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][i];    Final  double  f  =  c[ii][ij]  -  e  *  c[i][i];	  	non-compiled	[CE]  not  a  statement	44	None	add
25	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	                c[ii][ij]        -=        e        *        b[j][r];        c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	add
26	[BUG]  [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        -=        e        *        b[j][r];        c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	add
27	[BUG]  [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r]  [CE]  ';'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r]  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        -=        e        *        b[j][r];        c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r]	  	non-compiled	[CE]  ';'  expected	2	None	add
28	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [CE]  cannot  find  symbol  f  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][ij]    =    inverse;    	non-compiled	[CE]  cannot  find  symbol  f	18	None	replace
29	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][l];  [CE]  cannot  find  symbol  l  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][l];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  c[i][l];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final    double    f    =    c[ii][ij]    -    e    *    c[i][l];    	non-compiled	[CE]  cannot  find  symbol  l	10	None	replace
30	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij],  -=  e  *  b[j][r];  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij],  -=  e  *  b[j][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij],  -=  e  *  b[j][r];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    final    double    f    =    c[ii][ij],    -=    e    *    b[j][r];    	non-compiled	[CE]  <identifier>  expected	51	None	replace
31	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij],  -1  -=  e  *  b[j][r];  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij],  -1  -=  e  *  b[j][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij],  -1  -=  e  *  b[j][r];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    final    double    f    =    c[ii][ij],    -=    e    *    b[j][r];    	non-compiled	[CE]  <identifier>  expected	51	None	replace
32	[BUG]  [BUGGY]  final  double  e[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e[ii][ij]  -=  e  *  b[j][r];	          c[ii][ij]    -=    e    *    b[j][r];    final    double    e[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  ']'  expected	50	None	replace
33	[BUG]  [BUGGY]  c[ii][j]  =  inverse;  [CE]  cannot  find  symbol  f  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	c[ii][j]  =  inverse;	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	non-compiled	[CE]  cannot  find  symbol  f	21	None	replace
34	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [CE]  cannot  find  symbol  f  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  }	          c[ii][ij]    =    inverse;    c[ii][j]    =    inverse;    	non-compiled	[CE]  cannot  find  symbol  f	21	None	replace
35	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  inverse  -  c[ii][ij]  *  b[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  inverse  -  c[ii][ij]  *  b[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
36	[BUG]  [BUGGY]  final  double  f  =  inverse  -  c[ii][ij]  *  b[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  inverse  -  c[ii][ij]  *  b[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  inverse  -  c[ii][ij]  *  b[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][r]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -(e  *  b[i][r]);	  final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    	compilable	  [FE]  AssertionError  	15	3	replace
38	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][r]);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][r]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -(e  *  b[i][r]);	  final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    	compilable	  [FE]  AssertionError  	15	3	replace
39	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	17	3	add
40	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	17	3	add
41	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    final  double[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  ']'  expected	17	None	add
42	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	17	3	add
43	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	17	3	add
44	[BUG]  [BUGGY]  final  double[ii][ij]  =  inverse;  [CE]  ']'  expected  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double[ii][ij]  =  inverse;	          c[ii][ij]    =    inverse;    final    double[ii][ij]    =    inverse;    	non-compiled	[CE]  ']'  expected	19	None	replace
45	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  }  [CE]  ']'  expected  [FE]            NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    final    double[ii][ij]    =    inverse;    	non-compiled	[CE]  ']'  expected	19	None	replace
46	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  sqrt  *  b[j][r];  c[ii][ij]  -=  e  *  sqrt;  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  sqrt  *  b[j][r];  c[ii][ij]  -=  e  *  sqrt;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  sqrt  *  b[j][r];  c[ii][ij]  -=  e  *  sqrt;	  final    double    e    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    -=    e    *    sqrt;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
47	[BUG]  [BUGGY]  final  double  c[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  c[ii][ij]  -=  e  *  b[j][r];	          c[ii][ij]    -=    e    *    b[j][r];    final    double    c[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  ']'  expected	34	None	replace
48	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	add
49	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  Final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  Final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    Final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];	  	non-compiled	[CE]  not  a  statement	11	None	add
50	[BUG]  [BUGGY]  int[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  int[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	int[ii][ij]  -=  e  *  b[j][r];	          c[ii][ij]    -=    e    *    b[j][r];    int[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  ']'  expected	5	None	replace
51	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][sqrt];  [CE]  possible  loss  of  precision  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][sqrt];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][sqrt];	  final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
52	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r]  +  1;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  c[j][r]  +  1;	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
53	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r]  +  1;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r]  +  1;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  c[j][r]  +  1;	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
54	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	add
55	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  final  double  f  =  c[ii][j]  -  inverse  *  b[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  final  double  f  =  c[ii][j]  -  inverse  *  b[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    final  double  f  =  c[ii][j]  -  inverse  *  b[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	add
56	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][ij];    final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	add
57	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  Final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  Final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][ij];    Final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];	  	non-compiled	[CE]  not  a  statement	13	None	add
58	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][i];    final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	37	None	add
59	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  final  double  f  =  c[ii][j]  -=  e  *  b[j][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  final  double  f  =  c[ii][j]  -=  e  *  b[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][i];    final  double  f  =  c[ii][j]  -=  e  *  b[j][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	37	None	add
60	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][i];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	45	3	replace
61	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][i];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	45	3	replace
62	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	47	None	add
63	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  final  double  f  =  c[ii][j]  -=  e  *  c[j][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  final  double  f  =  c[ii][j]  -=  e  *  c[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    final  double  f  =  c[ii][j]  -=  e  *  c[j][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	47	None	add
64	[BUG]  [BUGGY]  final  double[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double[ii][ij]  -=  e  *  b[j][r];	          c[ii][ij]    -=    e    *    b[j][r];    final    double[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  ']'  expected	4	None	replace
65	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  }  [CE]  cannot  find  symbol  f  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  }	          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  cannot  find  symbol  f	3	None	replace
66	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  c[i][r];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	9	None	replace
67	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  Final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  Final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    Final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];	  	non-compiled	[CE]  not  a  statement	47	None	add
68	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  inverse  *  c[i][r];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  c[ii][ij]  -  inverse  *  c[i][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  inverse  *  c[i][r];	  final    double    e    =    c[ii][ij]    -    e    *    c[j][r];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	27	None	replace
69	[BUG]  [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][l];  c[ii][ij]  -=  e  *  b[j][r];  [CE]  cannot  find  symbol  l  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][l];  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        -=        e        *        b[j][r];        c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][l];  c[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  cannot  find  symbol  l	2	None	add
70	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [CE]  ']'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    final  double  c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  ']'  expected	17	None	add
71	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][ij]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -(e  *  b[i][ij]);	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	23	3	replace
72	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][ij]);  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  b[i][ij]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -(e  *  b[i][ij]);	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	23	3	replace
73	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  Final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  Final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    Final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];	  	non-compiled	[CE]  not  a  statement	28	None	add
74	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][l];  [CE]  cannot  find  symbol  l  [FE]        AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][l];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  b[j][l];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  cannot  find  symbol  l	25	None	replace
75	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  inverse  *  c[ii][ij]  -  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  inverse  *  c[ii][ij]  -  c[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
76	[BUG]  [BUGGY]  final  double  f  =  inverse  *  c[ii][ij]  -  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  inverse  *  c[ii][ij]  -  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  inverse  *  c[ii][ij]  -  c[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
77	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
78	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][ij];  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][ij];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
79	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][i];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	45	3	replace
80	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][i];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	45	3	replace
81	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  inverse  *  c[i][ij]  -  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  inverse  *  c[i][ij]  -  c[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	43	3	replace
82	[BUG]  [BUGGY]  final  double  f  =  inverse  *  c[i][ij]  -  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  inverse  *  c[i][ij]  -  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  inverse  *  c[i][ij]  -  c[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	43	3	replace
83	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][ij]  -  c[ii][ir];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  inverse  *  c[ii][ij]  -  c[ii][ir];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  inverse  *  c[ii][ij]  -  c[ii][ir];	  final    double    e    =    c[ii][ij]    -    inverse    *    b[i][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	30	None	replace
84	[BUG]  [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  }  [CE]  ']'  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  }	          c[ii][ij]    =    inverse;    final    double    c[ii][ij]    =    inverse;    	non-compiled	[CE]  ']'  expected	36	None	replace
85	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  final  double  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [CE]  ']'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  final  double  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    final  double  c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;	  	non-compiled	[CE]  ']'  expected	20	None	add
86	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  Final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  Final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[i][i];    Final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];	  	non-compiled	[CE]  not  a  statement	39	None	add
87	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  c[i][r]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -(e  *  c[i][r]);	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	9	2	replace
88	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  c[i][r]);  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  c[i][r]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -(e  *  c[i][r]);	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	9	2	replace
89	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  Final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  Final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    Final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];	  	non-compiled	[CE]  not  a  statement	7	None	add
90	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  Final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  Final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][i];    Final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];	  	non-compiled	[CE]  not  a  statement	37	None	add
91	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  sqrt  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  inverse  *  sqrt  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	12	3	replace
92	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  sqrt  *  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  sqrt  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  sqrt  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	12	3	replace
93	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij]  /  sqrt  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  e  *  c[i][ij]  /  sqrt  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	12	3	replace
94	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij]  /  sqrt  *  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij]  /  sqrt  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  c[i][ij]  /  sqrt  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	12	3	replace
95	[BUG]  [BUGGY]  c[ii][ij]  =  sqrt  +  inverse;  [CE]  cannot  find  symbol  f  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  c[ii][ij]  =  sqrt  +  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	c[ii][ij]  =  sqrt  +  inverse;	  c[ii][ij]    =    sqrt;    	non-compiled	[CE]  cannot  find  symbol  f	22	None	replace
96	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][ij].;  [CE]  <identifier>  expected  [FE]        NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][ij].;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  b[i][ij].;	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final    double    f    =    c[ii][ij]    -    e    *    b[i][ij].;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
97	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij],  inverse;  c[ii][j]  =  inverse;  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;  c[ii][ij],  inverse;  c[ii][j]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][j]    =    inverse;    c[ii][ij],  inverse;  c[ii][j]  =  inverse;	  	non-compiled	[CE]  not  a  statement	20	None	add
98	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij].;  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij].;  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][ij];    final  double  f  =  c[ii][ij]  -  e  *  c[i][ij].;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
99	[BUG]  [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij],  inverse;  c[ii][ij]  =  inverse;  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]          c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;  c[ii][ij],  inverse;  c[ii][ij]  =  inverse;  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	                c[ii][ij]        =        inverse;        c[ii][ij]    =    inverse;    c[ii][ij],  inverse;  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  not  a  statement	17	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  /  inverse  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  /  inverse  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    	compilable	  [FE]  AssertionError  	43	3	replace
101	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  /  inverse  *  c[i][r];  [FE]  AssertionError  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  /  inverse  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  /  inverse  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    	compilable	  [FE]  AssertionError  	43	3	replace
102	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  final  double  f  =  c[ii][iJ]  -=  e  *  b[i][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  final  double  f  =  c[ii][iJ]  -=  e  *  b[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[i][i];    final  double  f  =  c[ii][iJ]  -=  e  *  b[i][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	39	None	add
103	[BUG]  [BUGGY]  if(ij  <  0)  {  final  double  e  =  c[ii][ij]  -  e  *  b[j][ir];  c[ii][ij]  -=  e  *  e;  }  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  final  double  e  =  c[ii][ij]  -  e  *  b[j][ir];  c[ii][ij]  -=  e  *  e;  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  final  double  e  =  c[ii][ij]  -  e  *  b[j][ir];  c[ii][ij]  -=  e  *  e;  }	  final    double    e    =    c[ii][ij]    -    e    *    b[j][ir];    c[ii][ij]    -=    e    *    e;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	32	None	replace
104	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  c[i][l]);  [CE]  cannot  find  symbol  l  [FE]          NonPositiveDefiniteMatrixException      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -(e  *  c[i][l]);  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -(e  *  c[i][l]);	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final    double    f    =    c[ii][ij]    -    e    *    c[i][l];    	non-compiled	[CE]  cannot  find  symbol  l	10	None	replace
105	[BUG]  [BUGGY]  if(ij  <  0)  {  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  e;  }  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  if(ij  <  0)  {  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  e;  }  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	if(ij  <  0)  {  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  e;  }	  final    double    e    =    c[ii][ij]    -    e    *    b[i][r];    c[ii][ij]    -=    e    *    e;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	49	None	replace
106	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][l];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][l];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    sqrt    *    c[i][r];    final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][l];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	11	None	add
107	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  final  double  f  =  c[ii][iJ]  -=  e  *  b[j][i];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  final  double  f  =  c[ii][iJ]  -=  e  *  b[j][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][i];    final  double  f  =  c[ii][iJ]  -=  e  *  b[j][i];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	37	None	add
108	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[0][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  c[0][i];	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	2	replace
109	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[0][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[0][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  c[0][i];	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][i];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	48	2	replace
110	[BUG]  [BUGGY]  final  double  e  =  inverse  *  c[ii][ij]  -  e  *  b[i][ir];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  e  =  inverse  *  c[ii][ij]  -  e  *  b[i][ir];  [BUGGY]      final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  inverse  *  c[ii][ij]  -  e  *  b[i][ir];	  final    double    e    =    c[ii][ij]    -    inverse    *    b[i][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	30	None	replace
111	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  inverse  *  b[i][i];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
112	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][i];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  b[i][i];	  final    double    f    =    c[ii][ij]    -    inverse    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	29	3	replace
113	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  final  double  f  =  c[ii][j]  -  inverse  *  c[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  final  double  f  =  c[ii][j]  -  inverse  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    inverse    *    c[i][r];    final  double  f  =  c[ii][j]  -  inverse  *  c[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	42	None	add
114	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  c[i][r];	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	2	replace
115	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];      [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[i][r];  [BUGGY]      c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  c[i][r];	  final    double    f    =    c[ii][ij]    -=    e    *    c[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	2	replace
