bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  -=  e  *  sqrt;  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  -=  e  *  sqrt;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  -=  e  *  sqrt;	      final    double    e    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    -=    e    *    e;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
2	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	        c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	add
3	[BUG]  [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    -=    e    *    b[j][r];    c[ii][ij]  -=  e  *  b[j][r];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	2	3	add
4	[BUG]  [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  final  double[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  final  double[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    -=    e    *    b[j][r];    final  double[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  ']'  expected	2	None	add
5	[BUG]  [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  int[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  int[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    -=    e    *    b[j][r];    int[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  ']'  expected	2	None	add
6	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  b[i][r];	      final    double    e    =    c[ii][ij]    -    e    *    b[i][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
7	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	2	replace
8	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  c[j][r];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	2	replace
9	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final  double  f  =  c[ii][ij]  -  e  *  c[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	add
10	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  c[i][l];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  final  double  f  =  c[ii][ij]  -  e  *  c[i][l];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    final  double  f  =  c[ii][ij]  -  e  *  c[i][l];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	add
11	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
12	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  sqrt  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
13	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	10	3	replace
14	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  c[i][ij];	  final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	10	3	replace
15	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    final  double  f  =  c[ii][ij]  -  e  *  b[i][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	add
16	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  Final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  Final  double  f  =  c[ii][ij]  -  e  *  b[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    Final  double  f  =  c[ii][ij]  -  e  *  b[i][r];	  	non-compiled	[CE]  not  a  statement	7	None	add
17	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	        c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	16	3	add
18	[BUG]  [BUGGY]      c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  =  inverse;  c[ii][ij]  =  inverse;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    =    inverse;    c[ii][ij]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	16	3	add
19	[BUG]  [BUGGY]      c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  =  inverse;  final  double[ii][ij]  =  inverse;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    =    inverse;    final  double[ii][ij]  =  inverse;	  	non-compiled	[CE]  ']'  expected	16	None	add
20	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	        c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	16	3	add
21	[BUG]  [BUGGY]      c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [FE]  NonPositiveDefiniteMatrixException  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  =  inverse;  c[ii][j]  =  inverse;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    =    inverse;    c[ii][j]  =  inverse;	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	16	3	add
22	[BUG]  [BUGGY]  c[ii][ij]  =  sqrt;  [CE]  cannot  find  symbol  f  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  c[ii][ij]  =  sqrt;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	c[ii][ij]  =  sqrt;	      c[ii][ij]    =    inverse;    	non-compiled	[CE]  cannot  find  symbol  f	17	None	replace
23	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	9	None	add
24	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  Final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  [CE]  not  a  statement  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  Final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    Final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];	  	non-compiled	[CE]  not  a  statement	9	None	add
25	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  [CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  variable  f  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	add
26	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  Final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  Final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    Final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  not  a  statement	13	None	add
27	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  c[j][r];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  c[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  c[j][r];	      final    double    e    =    c[ii][ij]    -    e    *    b[j][r];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	4	None	replace
28	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
29	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  b[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    b[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	8	3	replace
30	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  inverse  *  b[i][ir];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  inverse  *  b[i][ir];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  inverse  *  b[i][ir];	      final    double    e    =    c[ii][ij]    -    e    *    b[i][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
31	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  Final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  Final  double  f  =  c[ii][ij]  -  e  *  c[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    Final  double  f  =  c[ii][ij]  -  e  *  c[i][r];	  	non-compiled	[CE]  not  a  statement	5	None	add
32	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[j][ir];  c[ii][ij]  -=  e  *  e;  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[j][ir];  c[ii][ij]  -=  e  *  e;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  b[j][ir];  c[ii][ij]  -=  e  *  e;	      final    double    e    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    -=    e    *    e;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
33	[BUG]  [BUGGY]  final  double  e  =  inverse  *  b[ii][ir];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  inverse  *  b[ii][ir];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  inverse  *  b[ii][ir];	      final    double    e    =    inverse    *    c[ii][ir];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	18	None	replace
34	[BUG]  [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  final  double  c[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  final  double  c[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    -=    e    *    b[j][r];    final  double  c[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  ']'  expected	2	None	add
35	[BUG]  [BUGGY]  c[ii][ij]  -=  e  *  b[j][l];  [CE]  cannot  find  symbol  l  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  c[ii][ij]  -=  e  *  b[j][l];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	c[ii][ij]  -=  e  *  b[j][l];	      c[ii][ij]    -=    e    *    b[j][r];    	non-compiled	[CE]  cannot  find  symbol  l	3	None	replace
36	[BUG]  [BUGGY]      c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  [CE]  ']'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  =  inverse;  final  double  c[ii][ij]  =  inverse;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    =    inverse;    final  double  c[ii][ij]  =  inverse;	  	non-compiled	[CE]  ']'  expected	16	None	add
37	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
38	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  b[j][i];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
39	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
40	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]      AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  b[i][i];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
41	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[j][i];  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[j][i];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  b[j][i];	      final    double    e    =    c[ii][ij]    -    e    *    b[j][r];    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	4	None	replace
42	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
43	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  inverse  *  c[i][r];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
44	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -  e  *  c[i][i];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
45	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  c[i][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -  e  *  c[i][i];	  final    double    f    =    c[ii][ij]    -    e    *    c[i][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	replace
46	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij].;  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij];  final  double  f  =  c[ii][ij]  -  e  *  b[i][ij].;  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -    e    *    b[i][ij];    final  double  f  =  c[ii][ij]  -  e  *  b[i][ij].;	  	non-compiled	[CE]  <identifier>  expected	9	None	add
47	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	add	final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
48	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  f  =  c[ii][ij]  -=  e  *  c[j][i];	  final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	14	3	replace
49	[BUG]  [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  e;  [CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  e;  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final  double  e  =  c[ii][ij]  -  e  *  b[i][r];  c[ii][ij]  -=  e  *  e;	      final    double    e    =    c[ii][ij]    -    e    *    b[j][r];    c[ii][ij]    -=    e    *    e;    	non-compiled	[CE]  variable  e  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
50	[BUG]  [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  final  double  e[ii][ij]  -=  e  *  b[j][r];  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]      c[ii][ij]  -=  e  *  b[j][r];  final  double  e[ii][ij]  -=  e  *  b[j][r];  [BUGGY]    final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	        c[ii][ij]    -=    e    *    b[j][r];    final  double  e[ii][ij]  -=  e  *  b[j][r];	  	non-compiled	[CE]  ']'  expected	2	None	add
51	[BUG]  [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  final  double  f  =  c[ii][ij],  -=  e  *  b[j][r];  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;  final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];    [BUGGY]  final  double  f  =  c[ii][ij]  -=  e  *  b[j][r];  final  double  f  =  c[ii][ij],  -=  e  *  b[j][r];  [BUGGY]    c[ii][ij]  =  f;  c[ij][ii]  =  f;  }  }  loop  =  ++r  <  order;  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	131	131	2	replace	final    double    f    =    c[ii][ij]    -=    e    *    b[j][r];    final  double  f  =  c[ii][ij],  -=  e  *  b[j][r];	  	non-compiled	[CE]  <identifier>  expected	13	None	add
