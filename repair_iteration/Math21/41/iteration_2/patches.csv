bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  isi);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  isi);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i],  isi);	  b[i][j]    =    matrix.getEntry(index[i],    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
2	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  ir);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  ir);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i],  ir);	  b[i][j]    =    matrix.getEntry(index[i],    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
3	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index,  i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index,  i  +  1);	  b[i][j]    =    matrix.getEntry(index,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
4	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  isi);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  isi);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(i,  isi);	  b[i][j]    =    matrix.getMatrix(i,    ii);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
5	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  ir);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  ir);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(i,  ir);	  b[i][j]    =    matrix.getMatrix(i,    ii);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
6	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  r);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  r);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(i,  r);	  b[i][j]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
7	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  b.length;  ++j)  {  [CE]  '.class'  expected  [FE]            OutOfRangeException      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  For(int  j  =  0;  j  <  b.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	For(int  j  =  0;  j  <  b.length;  ++j)  {	  for(int    j    =    0;    j    <    b.length;    ++j)    {    For(int    j    =    0;    j    <    b.length;    ++j)    {    	non-compiled	[CE]  '.class'  expected	17	None	replace
8	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  ij);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  ij);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  ij);	  int    index[][]    b    =    matrix.getMatrix(i,    ii);    	non-compiled	[CE]  ';'  expected	29	None	replace
9	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  ir);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  ir);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  ir);	  int    index[][]    b    =    matrix.getMatrix(i,    ii);    	non-compiled	[CE]  ';'  expected	29	None	replace
10	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(loop,  i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(loop,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(loop,  i  +  1);	  b[i][i]    =    matrix.getMatrix(loop,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
11	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(r,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(r,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(r,  i);	  b[i][i]    =    matrix.getMatrix(loop,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
12	[BUG]  [BUGGY]  int  j  =  0;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  0;  j  <  i;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  j  =  0;  j  <  i;  ++j)  {	  for(int    j    =    0;    j    <    i;    ++j)    {    int    j    =    0;    j    <    i;    ++j)    {    	non-compiled	[CE]  >  expected	24	None	replace
13	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ii;  ++j)  {  int  j  =  0;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  ii;  ++j)  {  int  j  =  0;  j  <  i;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  ii;  ++j)  {  int  j  =  0;  j  <  i;  ++j)  {	  for(int    j    =    0;    j    <    i;    ++j)    {    int    j    =    0;    j    <    i;    ++j)    {    	non-compiled	[CE]  >  expected	24	None	replace
14	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  isi);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  isi);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  isi);	  b[i][i]    =    matrix.getMatrix(i,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
15	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  i  +  1);	  b[i][i]    =    matrix.getMatrix(i,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
16	[BUG]  [BUGGY]  int  j  =  0;  j  <  b.length;  ++j)  {  [CE]  >  expected  [FE]        OutOfRangeException      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  0;  j  <  b.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  j  =  0;  j  <  b.length;  ++j)  {	  for(int    j    =    0;    j    <    b.length;    ++j)    {    int    j    =    0;    j    <    b.length;    ++j)    {    	non-compiled	[CE]  >  expected	30	None	replace
17	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b[i][j]);  ++j)  {  [CE]  ';'  expected  [FE]          OutOfRangeException      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b[i][j]);  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  b[i][j]);  ++j)  {	  for(int    j    =    0;    j    <    b.length;    ++j)    {    for(int    j    =    0;    j    <    b[i][j]);    ++j)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b[i][j].length;  ++j)  {  [CE]  double  cannot  be  dereferenced  [FE]            OutOfRangeException      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b[i][j].length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  b[i][j].length;  ++j)  {	  for(int    j    =    0;    j    <    b.length;    ++j)    {    for(int    j    =    0;    j    <    b[i][j]);    ++j)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
19	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ir);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ir);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  ir);	  b[i][i]    =    matrix.getMatrix(i,    ij);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
20	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  size  -  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  size  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  size  -  1);	  int    index[][]    b    =    matrix.getMatrix(i,    size);    	non-compiled	[CE]  ';'  expected	2	None	replace
21	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  size  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  size  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  size  +  1);	  int    index[][]    b    =    matrix.getMatrix(i,    size);    	non-compiled	[CE]  ';'  expected	2	None	replace
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    OutOfRangeException    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++i)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	add	for(int  j  =  0;  j  <  index.length;  ++i)  {	  for(int    j    =    0;    j    <    index.length;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	3	replace
23	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++i)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    OutOfRangeException    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++i)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  index.length;  ++i)  {	  for(int    j    =    0;    j    <    index.length;    ++j)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	3	replace
24	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrix(i,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  matrix.getMatrix(i,  size);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int[][]  b  =  matrix.getMatrix(i,  size);	  int[][]    b    =    matrix.getMatrix(i,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
25	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrix(loop,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  matrix.getMatrix(loop,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int[][]  b  =  matrix.getMatrix(loop,  i);	  int[][]    b    =    matrix.getMatrix(i,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
26	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i]  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i]  -  1);	  b[i][j]    =    matrix.getEntry(index[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
27	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i]  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i]  +  1);	  b[i][j]    =    matrix.getEntry(index[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
28	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrix(i,  index);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  matrix.getMatrix(i,  index);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int[][]  b  =  matrix.getMatrix(i,  index);	  int[][]    b    =    matrix.getMatrix(i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
29	[BUG]  [BUGGY]  int  r[][]  b  =  matrix.getMatrix(i,  i);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  r[][]  b  =  matrix.getMatrix(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  r[][]  b  =  matrix.getMatrix(i,  i);	  int    r[][]    b    =    matrix.getMatrix(i,    r);    	non-compiled	[CE]  ';'  expected	27	None	replace
30	[BUG]  [BUGGY]  double  r[][]  b  =  matrix.getMatrix(i,  r);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  double  r[][]  b  =  matrix.getMatrix(i,  r);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	double  r[][]  b  =  matrix.getMatrix(i,  r);	  int    r[][]    b    =    matrix.getMatrix(i,    r);    	non-compiled	[CE]  ';'  expected	27	None	replace
31	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(index,  i  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(index,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(index,  i  +  1);	  int    index[][]    b    =    matrix.getMatrix(index,    i);    	non-compiled	[CE]  ';'  expected	28	None	replace
32	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  index);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(i,  index);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(i,  index);	  int    index[][]    b    =    matrix.getMatrix(index,    i);    	non-compiled	[CE]  ';'  expected	28	None	replace
33	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    b.length    -    1;    ++j)    {    for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
34	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  for(int  j  =  0;  j  <  b[i][j]);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  for(int  j  =  0;  j  <  b[i][j]);  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    b.length    -    1;    ++j)    {    for(int  j  =  0;  j  <  b[i][j]);	  	non-compiled	[CE]  ';'  expected	5	None	add
35	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  int  j  =  0;  j  <  b.length  -  1;  ++j)  {  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  int  j  =  0;  j  <  b.length  -  1;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    b.length    -    1;    ++j)    {    int  j  =  0;  j  <  b.length  -  1;  ++j)  {	  	non-compiled	[CE]  >  expected	5	None	add
36	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(i,  ir);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(i,  ir);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(i,  ir);	  b[i][j]    =    matrix.getEntry(i,    isi);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
37	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(i,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(i,  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(i,  ii);	  b[i][j]    =    matrix.getEntry(i,    isi);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
38	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  b.length;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {	  for(int    j    =    0;    j    <    rank;    ++j)    {    int    j    =    0;    j    <    rank;    ++j)    {    	non-compiled	[CE]  >  expected	21	None	replace
39	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ii;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  ii;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  ii;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {	  for(int    j    =    0;    j    <    rank;    ++j)    {    int    j    =    0;    j    <    rank;    ++j)    {    	non-compiled	[CE]  >  expected	21	None	replace
40	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ij,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ij,  rank);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  ij,  rank);	  b[i][i]    =    matrix.getMatrix(i,    r,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
41	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  isi,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  isi,  rank);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  isi,  rank);	  b[i][i]    =    matrix.getMatrix(i,    r,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
42	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  size);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  size);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  size);	  b[i][i]    =    matrix.getMatrix(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
43	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(i  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(i  +  2);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(i  +  2);	  b[i][j]    =    matrix.getEntry(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
44	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(loop);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(loop);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(loop);	  b[i][j]    =    matrix.getMatrix(short);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
45	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  i  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(root,  i  +  1);	  int    index[][]    b    =    matrix.getMatrix(root,    i);    	non-compiled	[CE]  ';'  expected	38	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length  -  2;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	add	for(int  j  =  0;  j  <  b.length  -  2;  ++j)  {	  for(int    j    =    0;    j    <    b.length    -    1;    ++j)    {    	compilable	  [FE]  AssertionError  	6	3	replace
47	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length  -  2;  ++j)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length  -  2;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  b.length  -  2;  ++j)  {	  for(int    j    =    0;    j    <    b.length    -    1;    ++j)    {    	compilable	  [FE]  AssertionError  	6	3	replace
48	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  for(int  j  =  0;  j  <  index.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]    OutOfRangeException    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  for(int  j  =  0;  j  <  index.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    index.length;    ++j)    {    for(int  j  =  0;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  For(int  j  =  0;  j  <  index.length;  ++j)  {  [CE]  '.class'  expected  [FE]      OutOfRangeException    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  For(int  j  =  0;  j  <  index.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    index.length;    ++j)    {    For(int  j  =  0;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	3	None	add
50	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  int  j  =  0;  j  <  index.length;  ++j)  {  [CE]  >  expected  [FE]        OutOfRangeException    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  int  j  =  0;  j  <  index.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    index.length;    ++j)    {    int  j  =  0;  j  <  index.length;  ++j)  {	  	non-compiled	[CE]  >  expected	3	None	add
51	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  scale,  sqrt);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  scale,  sqrt);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  scale,  sqrt);	  b[i][i]    =    matrix.getMatrix(i,    scale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
52	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  i.length;  ++j)  {  [CE]  int  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  i.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  i.length;  ++j)  {	  for(int    j    =    0;    j    <    i;    ++j)    {    For(int    j    =    0;    j    <    i;    ++j)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	23	None	replace
53	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ii,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ii,  rank);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  ii,  rank);	  b[i][i]    =    matrix.getMatrix(i,    r,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
54	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrix(i,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  matrix.getMatrix(i,  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int[][]  b  =  matrix.getMatrix(i,  ii);	  int[][]    b    =    matrix.getMatrix(i,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
55	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  i;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  i;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  i;  ++j)  {  int  j  =  0;  j  <  rank;  ++j)  {	  for(int    j    =    0;    j    <    rank;    ++j)    {    int    j    =    0;    j    <    rank;    ++j)    {    	non-compiled	[CE]  >  expected	21	None	replace
56	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  i);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(i,  i);	  b[i][j]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
57	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  i;  ++j)  {  [CE]  '.class'  expected  [FE]          AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  For(int  j  =  0;  j  <  i;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	For(int  j  =  0;  j  <  i;  ++j)  {	  for(int    j    =    0;    j    <    i;    ++j)    {    For(int    j    =    0;    j    <    i;    ++j)    {    	non-compiled	[CE]  '.class'  expected	23	None	replace
58	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  index);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  index);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  index);	  b[i][i]    =    matrix.getMatrix(i,    scale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
59	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(i,  i  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(i,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(i,  i  +  1);	  b[i][j]    =    matrix.getEntry(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
60	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  For(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  [CE]  '.class'  expected  [FE]    AssertionError    [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  For(int  j  =  0;  j  <  b.length  -  1;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int    j    =    0;    j    <    b.length    -    1;    ++j)    {    For(int  j  =  0;  j  <  b.length  -  1;  ++j)  {	  	non-compiled	[CE]  '.class'  expected	5	None	add
61	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(root,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(root,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(root,  i);	  b[i][i]    =    matrix.getMatrix(loop,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
62	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  int  j  =  0;  j  <  b.length;  ++j)  {  [CE]  >  expected  [FE]        OutOfRangeException      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index.length;  ++j)  {  int  j  =  0;  j  <  b.length;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  index.length;  ++j)  {  int  j  =  0;  j  <  b.length;  ++j)  {	  for(int    j    =    0;    j    <    b.length;    ++j)    {    int    j    =    0;    j    <    b.length;    ++j)    {    	non-compiled	[CE]  >  expected	30	None	replace
63	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  index;  ++j)  {  int  j  =  0;  j  <  i;  ++j)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  for(int  j  =  0;  j  <  index;  ++j)  {  int  j  =  0;  j  <  i;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  index;  ++j)  {  int  j  =  0;  j  <  i;  ++j)  {	  for(int    j    =    0;    j    <    i;    ++j)    {    int    j    =    0;    j    <    i;    ++j)    {    	non-compiled	[CE]  >  expected	24	None	replace
64	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(ii,  ir);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(ii,  ir);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(ii,  ir);	  b[i][i]    =    matrix.getMatrix(i,    ij);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
65	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(ij);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(ij);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(ij);	  int    index[][]    b    =    matrix.getMatrix(ii);    	non-compiled	[CE]  ';'  expected	39	None	replace
66	[BUG]  [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  ii);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  index[][]  b  =  matrix.getMatrix(root,  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  index[][]  b  =  matrix.getMatrix(root,  ii);	  int    index[][]    b    =    matrix.getMatrix(i,    ii);    	non-compiled	[CE]  ';'  expected	29	None	replace
67	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(i,  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(i,  ii);	  b[i][i]    =    matrix.getMatrix(i,    scale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
68	[BUG]  [BUGGY]  int  j  =  0;  j  <  rank;  ++j)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int  j  =  0;  j  <  rank;  ++j)  {  [BUGGY]      root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int  j  =  0;  j  <  rank;  ++j)  {	  for(int    j    =    0;    j    <    rank;    ++j)    {    int    j    =    0;    j    <    rank;    ++j)    {    	non-compiled	[CE]  >  expected	21	None	replace
69	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrix(short);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  int[][]  b  =  matrix.getMatrix(short);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	int[][]  b  =  matrix.getMatrix(short);	  int[][]    b    =    matrix.getMatrix(i);    	non-compiled	[CE]  '.class'  expected	8	None	replace
70	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(c,  i);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(c,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(c,  i);	  b[i][j]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
71	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(small,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(small,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(small,  i);	  b[i][i]    =    matrix.getMatrix(loop,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
72	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(str,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(str,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(str,  i);	  b[i][i]    =    matrix.getMatrix(loop,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
73	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(ii  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(ii  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(ii  +  1);	  b[i][j]    =    matrix.getEntry(i    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
74	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(loop,  r,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(loop,  r,  rank);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(loop,  r,  rank);	  b[i][i]    =    matrix.getMatrix(i,    r,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
75	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(r,  ii,  rank);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(r,  ii,  rank);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(r,  ii,  rank);	  b[i][i]    =    matrix.getMatrix(i,    r,    rank);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
76	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i],  ii);	  b[i][j]    =    matrix.getEntry(index[i],    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
77	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(c,  small);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(c,  small);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(c,  small);	  b[i][i]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
78	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(c,  i);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(c,  i);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(c,  i);	  b[i][i]    =    matrix.getMatrix(i,    c);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
79	[BUG]  [BUGGY]  b[i][j]  =  matrix.getMatrix(ir,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getMatrix(ir,  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getMatrix(ir,  ii);	  b[i][j]    =    matrix.getMatrix(i,    ii);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
80	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index,  ii);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index,  ii);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index,  ii);	  b[i][j]    =    matrix.getEntry(index,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
81	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(small);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(small);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(small);	  b[i][i]    =    matrix.getMatrix(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
82	[BUG]  [BUGGY]  b[i][i]  =  matrix.getMatrix(str);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][i]  =  matrix.getMatrix(str);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][i]  =  matrix.getMatrix(str);	  b[i][i]    =    matrix.getMatrix(loop);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
83	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  c);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i],  c);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i],  c);	  b[i][j]    =    matrix.getEntry(index[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
84	[BUG]  [BUGGY]  b[i][j]  =  matrix.getEntry(index[i]],  c);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]        loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {      [BUGGY]  b[i][j]  =  matrix.getEntry(index[i]],  c);  [BUGGY]      for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	b[i][j]  =  matrix.getEntry(index[i]],  c);	  b[i][j]    =    matrix.getEntry(index[i]);    	non-compiled	[CE]  ')'  expected	26	None	replace
