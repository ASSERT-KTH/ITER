bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    b[i][j]  =  matrix.getEntry(i);  [CE]  cannot  find  symbol  j  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    b[i][j]  =  matrix.getEntry(i);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    b[i][j]  =  matrix.getEntry(i);		non-compiled	[CE]  cannot  find  symbol  j	82	None	add
2	[BUG]  [BUGGY]    b[i][j]  =  matrix.getMatrix(i);  [CE]  cannot  find  symbol  j  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    b[i][j]  =  matrix.getMatrix(i);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    b[i][j]  =  matrix.getMatrix(i);		non-compiled	[CE]  cannot  find  symbol  j	82	None	add
3	[BUG]  [BUGGY]    b[i][j]  =  matrix.getEntry(i,  i);  [CE]  cannot  find  symbol  j  [FE]        AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    b[i][j]  =  matrix.getEntry(i,  i);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    b[i][j]  =  matrix.getEntry(i,  i);		non-compiled	[CE]  cannot  find  symbol  j	82	None	add
4	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  b.length;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	add	for(int  j  =  0;  j  <  b.length;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	compilable	  [FE]  OutOfRangeException  	81	2	replace
5	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length;  ++j)  {  [FE]  OutOfRangeException  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  b.length;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  b.length;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	compilable	  [FE]  OutOfRangeException  	81	2	replace
6	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size;  ++j)  {  [CE]  cannot  find  symbol  size  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  size;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  size;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	non-compiled	[CE]  cannot  find  symbol  size	81	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  i;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	add	for(int  j  =  0;  j  <  i;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	compilable	  [FE]  AssertionError  	81	3	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  i;  ++j)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  i;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  i;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	compilable	  [FE]  AssertionError  	81	3	replace
9	[BUG]  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i);  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    int  index[][]  b  =  matrix.getMatrix(i);		non-compiled	[CE]  ';'  expected	82	None	add
10	[BUG]  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i,  i);  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i,  i);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    int  index[][]  b  =  matrix.getMatrix(i,  i);		non-compiled	[CE]  ';'  expected	82	None	add
11	[BUG]  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i,  r);  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    int  index[][]  b  =  matrix.getMatrix(i,  r);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    int  index[][]  b  =  matrix.getMatrix(i,  r);		non-compiled	[CE]  ';'  expected	82	None	add
12	[BUG]  [BUGGY]    b[i][i]  =  matrix.getMatrix(i);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    b[i][i]  =  matrix.getMatrix(i);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    b[i][i]  =  matrix.getMatrix(i);		non-compiled	[CE]  cannot  find  symbol	82	None	add
13	[BUG]  [BUGGY]    b[i][i]  =  matrix.getMatrix(i,  r);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    b[i][i]  =  matrix.getMatrix(i,  r);  [BUGGY]  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	    b[i][i]  =  matrix.getMatrix(i,  r);		non-compiled	[CE]  cannot  find  symbol	82	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  rank;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	add	for(int  j  =  0;  j  <  rank;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	compilable	  [FE]  AssertionError  	81	2	replace
15	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  rank;  ++j)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    loop  =  ++r  <  order;  }  }  rank  =  r;  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]  for(int  j  =  0;  j  <  rank;  ++j)  {  [BUGGY]  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	146	146	2	replace	for(int  j  =  0;  j  <  rank;  ++j)  {	for  (int  j  =  0;  j  <  r;  ++j)  {  	compilable	  [FE]  AssertionError  	81	2	replace
