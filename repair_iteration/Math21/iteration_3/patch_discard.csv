increase failing tests,72,replace, [FE] NonPositiveDefiniteMatrixException testMath789, b[i]  =  matrix.getEntry(exp,  i,  index);  ,System.arraycopy(c, 0, b, 0, i);
increase failing tests,72,replace, [FE] NonPositiveDefiniteMatrixException testMath789, b[i]  =  matrix.getEntry(exp,  i,  index);  ,System.arraycopy(c, 0, b, 0, c.length);
increase failing tests,69,replace, [FE] ArrayIndexOutOfBoundsException testMath789, if(c  =  matrix.getSize())  {  c  =  matrix.getSize();  if(c  >=  b[order]  =  c;  b[order]  =  b;  }  ,final int[] swap = new int[1];
increase failing tests,69,replace, [FE] ArrayIndexOutOfBoundsException testMath789, if(c  =  matrix.getSize())  {  c  =  matrix.getSize();  if(c  >=  b[order]  =  c;  b[order]  =  b;  }  ,final int[] swap = new int[2];
increase failing tests,72,replace, [FE] NonPositiveDefiniteMatrixException testMath789, b[i]  =  d[i];  c[i]  =  c[i];  ,b[i] = c[i]; c[i] = c[i];
increase failing tests,72,replace, [FE] NonPositiveDefiniteMatrixException testMath789, c[i]  =  b[i];  index[i]  =  c[i];  ,c[i] = b[i]; index[i] = swap[i];
increase failing tests,66,replace, [FE] NonPositiveDefiniteMatrixException testMath789, final  double[][]  c  =  small,  matrix.getComponentType();  ,final double[][] c = new double[order][order];
increase failing tests,72,replace, [FE] ArrayIndexOutOfBoundsException testMath789, b[i]  =  matrix.getEntry(small,  index[i],  i);  ,index[order] = matrix.getRowDimension();
increase failing tests,76,replace, [FE] NotStrictlyPositiveException testMath789, this(Math.abs(swap)||  Math.abs(inverseAccuracy  *  size));  ,for(boolean loop = true; r!= 0;) {
increase failing tests,65,replace, [FE] MatrixDimensionMismatchException testMath789, int  rank  =  matrix.getRowDimension()  -  1;  ,int order = matrix.getRowDimension() - 1;
increase failing tests,70,replace, [FE] ArrayIndexOutOfBoundsException testMath789, int[]  index  =  new  int[order  /  1];  final  int[]  index  =  new  int[order  /  2];  ,final int[] index = new int[order / 2];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  double[][]  b  =  new  double[128][order  +  1];  ,final double[][] b = new double[2][order + 1];
increase failing tests,65,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  rating  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() + 1; final int rating = matrix.getRowDimension();
increase failing tests,65,replace, [FE] MatrixDimensionMismatchException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  rating  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() - 1; final int rating = matrix.getRowDimension();
increase failing tests,65,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  ordered  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() + 1; final int ordered = matrix.getRowDimension();
increase failing tests,65,replace, [FE] MatrixDimensionMismatchException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  ordered  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() - 1; final int ordered = matrix.getRowDimension();
increase failing tests,72,replace, [FE] ArrayIndexOutOfBoundsException testMath789, index[i]  =  matrix.toString();  ,index[i] = matrix.getRowDimension();
increase failing tests,76,replace, [FE] NotStrictlyPositiveException testMath789, for(boolean  loop  =  false;  loop  <  0;)  {  ,for(boolean loop = false; r!= 0;) {
increase failing tests,65,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  row  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() + 1; final int row = matrix.getRowDimension();
increase failing tests,65,replace, [FE] MatrixDimensionMismatchException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  row  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() - 1; final int row = matrix.getRowDimension();
increase failing tests,76,replace, [FE] NotStrictlyPositiveException testMath789, for(boolean  loop  =  false;  loop  <  0;)  {  ,for(boolean loop = false; r < 0;) {
increase failing tests,72,replace, [FE] AssertionError testMath789, super(Math.abs(small)+  Math.abs(size  *  size));  ,if(matrix == null) { throw new IllegalStateException(""); }
increase failing tests,76,replace, [FE] NotStrictlyPositiveException testMath789, for(boolean  r  =  true;  loop  >  0;)  {  ,for(boolean loop = true; r > 0;) {
increase failing tests,76,replace, [FE] ArrayIndexOutOfBoundsException testMath789, for(boolean  loop  =  false;  it!=  null;)  {  ,for(boolean loop = false; matrix!= null;) {
increase failing tests,71,replace, [FE] NonPositiveDefiniteMatrixException testMath789, for(int  i  =  0;  i  <  b.length;  ++i)  {  ,for(int i = 0; i < b.length - 1; ++i) {
increase failing tests,76,replace, [FE] AssertionError testMath789, this(Math.abs(swap)||  Math.abs(inverseAccuracy  *  size));  ,for(boolean loop = true; r == 0;) {
increase failing tests,65,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  R  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() + 1; final int R = matrix.getRowDimension();
increase failing tests,65,replace, [FE] MatrixDimensionMismatchException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  R  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() - 1; final int R = matrix.getRowDimension();
increase failing tests,65,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  ranking  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() + 1; final int ranking = matrix.getRowDimension();
increase failing tests,65,replace, [FE] MatrixDimensionMismatchException testMath789, final  int  order  =  matrix.getColumnDimension();  final  int  ranking  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() - 1; final int ranking = matrix.getRowDimension();
increase failing tests,65,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  int  order  =  matrix.getColumnDimension()  +  1;  final  int  r  =  matrix.getRowDimension();  ,final int order = matrix.getColumnDimension() + 1; final int count = matrix.getRowDimension();
increase failing tests,72,replace, [FE] NonPositiveDefiniteMatrixException testMath789, c[i]  =  b[i];  index[i]  =  c[i];  ,c[i] = b[i]; c[i] = c[i];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  double[][]  b  =  new  double[278][order];  ,final double[][] b = new double[278][0];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  double[][]  b  =  new  double[256][i];  ,final double[][] b = new double[256][2];
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  double[][]  b  =  new  double[256][count  +  1];  ,final double[][] b = new double[256][0 + 1];
increase failing tests,76,replace, [FE] ArrayIndexOutOfBoundsException testMath789, for(boolean  loop  =  false;  it!=  null;)  {  ,for(boolean loop = false; swap!= null;) {
increase failing tests,67,replace, [FE] ArrayIndexOutOfBoundsException testMath789, final  double[][]  b  =  new  double[228][order];  ,final double[][] b = new double[228][0];
increase failing tests,67,replace, [FE] AssertionError testMath789, final  double[][]  b  =  matrix.getSize();  ,final double[][] b = matrix.getData();
