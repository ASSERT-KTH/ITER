bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  isi  =  index[swap[i]  -  1];  int  isi  =  index[swap[i]  -  1];  [CE]  variable  isi  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]  -  1];  int  isi  =  index[swap[i]  -  1];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int    isi    =    index[swap[i]    -    1];    int  isi  =  index[swap[i]  -  1];	  	non-compiled	[CE]  variable  isi  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	9	None	add
2	[BUG]  [BUGGY]  int  isi  =  index[swap[i]  -  1];  Int  isi  =  index[swap[i]  -  1];  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]  -  1];  Int  isi  =  index[swap[i]  -  1];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int    isi    =    index[swap[i]    -    1];    Int  isi  =  index[swap[i]  -  1];	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[swap[i]]  &  0xff;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	add	int  isi  =  swap[swap[i]]  &  0xff;	  int    isi    =    index[swap[i]]    &    0xff;    	compilable	  [FE]  AssertionError  	3	1	replace
4	[BUG]  [BUGGY]  int  isi  =  swap[swap[i]]  &  0xff;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[swap[i]]  &  0xff;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  swap[swap[i]]  &  0xff;	  int    isi    =    index[swap[i]]    &    0xff;    	compilable	  [FE]  AssertionError  	3	1	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[swap[i]  -  1];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	add	int  isi  =  swap[swap[i]  -  1];	  int    isi    =    index[swap[i]    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	3	replace
6	[BUG]  [BUGGY]  int  isi  =  swap[swap[i]  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[swap[i]  -  1];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  swap[swap[i]  -  1];	  int    isi    =    index[swap[i]    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	3	replace
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]  -  1]  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	add	int  isi  =  index[swap[i]  -  1]  +  1;	  int    isi    =    index[swap[i]    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	3	replace
8	[BUG]  [BUGGY]  int  isi  =  index[swap[i]  -  1]  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]  -  1]  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  index[swap[i]  -  1]  +  1;	  int    isi    =    index[swap[i]    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	3	replace
9	[BUG]  [BUGGY]  int  isi  =  c[swap[i]]  &  0xff;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  c[swap[i]]  &  0xff;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  c[swap[i]]  &  0xff;	  int    isi    =    c[swap[i]];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	1	None	replace
10	[BUG]  [BUGGY]  int  isi  =  swap[c[i]];  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[c[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  swap[c[i]];	  int    isi    =    c[swap[i]];    	non-compiled	[CE]  incompatible  types	1	None	replace
11	[BUG]  [BUGGY]  c[ii][ii]  =  root[swap[i]];  [CE]  array  required,  but  RealMatrix  found  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[ii][ii]  =  root[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[ii][ii]  =  root[swap[i]];	      c[ii][ii]    =    matrix[swap[i]];    	non-compiled	[CE]  array  required,  but  RealMatrix  found	11	None	replace
12	[BUG]  [BUGGY]  int  isi  =  index[swap[i]]  &  0xff;  int  isi  =  index[swap[i]]  &  0xff;  [CE]  variable  isi  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]]  &  0xff;  int  isi  =  index[swap[i]]  &  0xff;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int    isi    =    index[swap[i]]    &    0xff;    int  isi  =  index[swap[i]]  &  0xff;	  	non-compiled	[CE]  variable  isi  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	add
13	[BUG]  [BUGGY]  int  isi  =  index[swap[i]]  &  0xff;  Int  isi  =  index[swap[i]]  &  0xff;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]]  &  0xff;  Int  isi  =  index[swap[i]]  &  0xff;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int    isi    =    index[swap[i]]    &    0xff;    Int  isi  =  index[swap[i]]  &  0xff;	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
14	[BUG]  [BUGGY]  int  c  =  index[swap[i]];  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  c  =  index[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  c  =  index[swap[i]];	      int    c    =    matrix[swap[i]];    	non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
15	[BUG]  [BUGGY]  int  c[i]  =  index[swap[i]]  +  1;  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  c[i]  =  index[swap[i]]  +  1;  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  c[i]  =  index[swap[i]]  +  1;	      int    c[i]    =    index[swap[i]];    	non-compiled	[CE]  ']'  expected	5	None	replace
16	[BUG]  [BUGGY]  c[ii][ii]  =  index[swap[i]]  +  1;  [CE]  cannot  find  symbol  isi  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[ii][ii]  =  index[swap[i]]  +  1;  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[ii][ii]  =  index[swap[i]]  +  1;	      c[ii][ii]    =    index[swap[i]];    	non-compiled	[CE]  cannot  find  symbol  isi	7	None	replace
17	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	add	        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	add
18	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [FE]  NonPositiveDefiniteMatrixException  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]];	  	compilable	  [FE]  NonPositiveDefiniteMatrixException  	6	3	add
19	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  int  c[ii][ii]  =  index[swap[i]];  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  int  c[ii][ii]  =  index[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	        c[ii][ii]    =    index[swap[i]];    int  c[ii][ii]  =  index[swap[i]];	  	non-compiled	[CE]  ']'  expected	6	None	add
20	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  [CE]  '('  expected  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  if[ii][ii]  =  index[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	        c[ii][ii]    =    index[swap[i]];    if[ii][ii]  =  index[swap[i]];	  	non-compiled	[CE]  '('  expected	6	None	add
21	[BUG]  [BUGGY]  double  c  =  matrix[swap[i]].doubleValue();  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  double  c  =  matrix[swap[i]].doubleValue();  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	double  c  =  matrix[swap[i]].doubleValue();	      int    c    =    matrix[swap[i]].doubleValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	replace
22	[BUG]  [BUGGY]  int  c[i][i]  =  index[swap[i]];  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  c[i][i]  =  index[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  c[i][i]  =  index[swap[i]];	      	non-compiled	[CE]  ']'  expected	4	None	replace
23	[BUG]  [BUGGY]  c[ii][i]  =  matrix[swap[i]];  [CE]  array  required,  but  RealMatrix  found  [FE]              AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[ii][i]  =  matrix[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[ii][i]  =  matrix[swap[i]];	      	non-compiled	[CE]  array  required,  but  RealMatrix  found	4	None	replace
24	[BUG]  [BUGGY]  c[i][ii]  >  c[i][i])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[i][ii]  >  c[i][i])  {  swap[r]  =  i;  }  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[i][ii]  >  c[i][i])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[i][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
25	[BUG]  [BUGGY]  c[i][i]  >  c[i][i])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[i][i]  >  c[i][i])  {  swap[r]  =  i;  }  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[i][i]  >  c[i][i])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[i][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]]  &  0xff  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	add	int  isi  =  index[swap[i]]  &  0xff  +  1;	  int    isi    =    index[swap[i]]    &    0xff;    	compilable	  [FE]  AssertionError  	3	2	replace
27	[BUG]  [BUGGY]  int  isi  =  index[swap[i]]  &  0xff  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  index[swap[i]]  &  0xff  +  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  index[swap[i]]  &  0xff  +  1;	  int    isi    =    index[swap[i]]    &    0xff;    	compilable	  [FE]  AssertionError  	3	2	replace
28	[BUG]  [BUGGY]  c[ii][ii]  =  matrix[sqrt[ii]];  [CE]  cannot  find  symbol  sqrt  [FE]            AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[ii][ii]  =  matrix[sqrt[ii]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[ii][ii]  =  matrix[sqrt[ii]];	      	non-compiled	[CE]  cannot  find  symbol  sqrt	4	None	replace
29	[BUG]  [BUGGY]  c[i][ii]  >  swap[i][i])  {  swap[r]  =  i;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[i][ii]  >  swap[i][i])  {  swap[r]  =  i;  }  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[i][ii]  >  swap[i][i])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[i][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	add	int  isi  =  swap[swap[i]];	  int    isi    =    c[swap[i]];    	compilable	  [FE]  AssertionError  	1	1	replace
31	[BUG]  [BUGGY]  int  isi  =  swap[swap[i]];  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[swap[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  swap[swap[i]];	  int    isi    =    c[swap[i]];    	compilable	  [FE]  AssertionError  	1	1	replace
32	[BUG]  [BUGGY]  int  isi  =  c[swap[i]]  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  c[swap[i]]  -  1;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  c[swap[i]]  -  1;	  int    isi    =    c[swap[i]];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	1	None	replace
33	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  [CE]  not  a  statement  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii],  index[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	        c[ii][ii]    =    index[swap[i]];    c[ii][ii],  index[swap[i]];	  	non-compiled	[CE]  not  a  statement	6	None	add
34	[BUG]  [BUGGY]  int  isi  =  swap[i]  -  1];  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  swap[i]  -  1];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  swap[i]  -  1];	  int    isi    =    index[swap[i]    -    1];    	non-compiled	[CE]  ';'  expected	10	None	replace
35	[BUG]  [BUGGY]  int  isi  =  c[swap[i]  -  1];  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  c[swap[i]  -  1];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  c[swap[i]  -  1];	  int    isi    =    index[swap[i]    -    1];    	non-compiled	[CE]  incompatible  types	10	None	replace
36	[BUG]  [BUGGY]  int  c[i]  =  root[swap[i]];  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  c[i]  =  root[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  c[i]  =  root[swap[i]];	      int    c[i]    =    matrix[swap[i]];    	non-compiled	[CE]  ']'  expected	14	None	replace
37	[BUG]  [BUGGY]  int  c  =  root[swap[i]];  [CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  c  =  root[swap[i]];  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  c  =  root[swap[i]];	      int    c    =    matrix[swap[i]];    	non-compiled	[CE]  variable  c  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	12	None	replace
38	[BUG]  [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]].;  [CE]  <identifier>  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]      c[ii][ii]  =  index[swap[i]];  c[ii][ii]  =  index[swap[i]].;  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	        c[ii][ii]    =    index[swap[i]];    c[ii][ii]  =  index[swap[i]].;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
39	[BUG]  [BUGGY]  c[ii][i]  =  matrix[sqrt[i]];  [CE]  cannot  find  symbol  sqrt  [FE]            AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[ii][i]  =  matrix[sqrt[i]];  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[ii][i]  =  matrix[sqrt[i]];	      	non-compiled	[CE]  cannot  find  symbol  sqrt	4	None	replace
40	[BUG]  [BUGGY]  if(c[ii][ii]  ==  c[i][i])  {  swap[r]  =  i;  }  [CE]  cannot  find  symbol  isi  [FE]            AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  if(c[ii][ii]  ==  c[i][i])  {  swap[r]  =  i;  }  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	if(c[ii][ii]  ==  c[i][i])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[i][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  cannot  find  symbol  isi	8	None	replace
41	[BUG]  [BUGGY]  c[ii][ii]  =  c[i][i])  {  swap[r]  =  i;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  c[ii][ii]  =  c[i][i])  {  swap[r]  =  i;  }  [BUGGY]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	c[ii][ii]  =  c[i][i])  {  swap[r]  =  i;  }	      c[ii][ii]    >    c[i][i])    {    swap[r]    =    i;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
42	[BUG]  [BUGGY]  int  isi  =  c[swap[i]]  &  ii;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]        AssertionError    [CONTEXT]    index[i]  =  i;  }  int  r  =  0;  for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];    [BUGGY]  int  isi  =  c[swap[i]]  &  ii;  [BUGGY]    if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	82	82	2	replace	int  isi  =  c[swap[i]]  &  ii;	  int    isi    =    c[swap[i]];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	1	None	replace
