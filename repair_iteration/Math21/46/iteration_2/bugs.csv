bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	add	if  (c[index[i]][index[i]]  ==  0)  {	  if    (c[index[i]][index[i]]    <    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	2	replace
2	[BUG]  [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if  (c[index[i]][index[i]]  ==  0)  {	  if    (c[index[i]][index[i]]    <    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	2	replace
3	[BUG]  [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  }  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  }	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
4	[BUG]  [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  }  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  }	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
5	[BUG]  [BUGGY]  if  (c[index[i]][index[i]]  <  0)  {  if  (c[index[i]][index[i]]  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  if  (c[index[i]][index[i]]  <  0)  {  if  (c[index[i]][index[i]]  <  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if    (c[index[i]][index[i]]    <    0)    {    if  (c[index[i]][index[i]]  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
6	[BUG]  [BUGGY]  if  (c[index[i]][index[i]]  <  0)  {  if  (c[i]][index[i]]  <  0)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  if  (c[index[i]][index[i]]  <  0)  {  if  (c[i]][index[i]]  <  0)  {  [BUGGY]      throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if    (c[index[i]][index[i]]    <    0)    {    if  (c[i]][index[i]]  <  0)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
7	[BUG]  [BUGGY]  double  r  =  matrix[i][i].doubleValue();  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  double  r  =  matrix[i][i].doubleValue();  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][i].doubleValue();	      int    r    =    matrix[i][i].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
8	[BUG]  [BUGGY]  double  r  =  matrix[i][index[i]].doubleValue();  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  double  r  =  matrix[i][index[i]].doubleValue();  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][index[i]].doubleValue();	      int    r    =    matrix[i][index[i]].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
9	[BUG]  [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  i,  small);  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  i,  small);  }  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  i,  small);  }	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i]][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  i,  small);  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  i,  small);  }  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  i,  small);  }	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i]][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	8	None	replace
12	[BUG]  [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	8	None	replace
13	[BUG]  [BUGGY]  int  r  =  index[i][index[i]];  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  int  r  =  index[i][index[i]];  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  index[i][index[i]];	      int    r    =    matrix[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
14	[BUG]  [BUGGY]  int  r  =  index[i]  -  1;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  int  r  =  index[i]  -  1;  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  index[i]  -  1;	      int    r    =    index[i];    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
15	[BUG]  [BUGGY]  int  r  =  matrix[i];  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  int  r  =  matrix[i];  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  matrix[i];	      int    r    =    index[i];    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
16	[BUG]  [BUGGY]  int  r  =  matrix[i][index[i]]  -  small;  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  int  r  =  matrix[i][index[i]]  -  small;  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  matrix[i][index[i]]  -  small;	      int    r    =    matrix[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
17	[BUG]  [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small);	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	8	None	replace
18	[BUG]  [BUGGY]  c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i]][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
19	[BUG]  [BUGGY]  c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
20	[BUG]  [BUGGY]  c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	8	None	replace
21	[BUG]  [BUGGY]  c[i][index[i]]  <  -1])  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  c[i][index[i]]  <  -1])  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -1])  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);	      c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	8	None	replace
22	[BUG]  [BUGGY]  double  r  =  matrix[i][index[i]];  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {    [BUGGY]  double  r  =  matrix[i][index[i]];  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][index[i]];	      int    r    =    matrix[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
