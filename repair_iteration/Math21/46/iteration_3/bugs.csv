bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    ir,    small);    	non-compiled	[CE]  not  a  statement	20	None	replace
2	[BUG]  [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    ir,    small);    	non-compiled	[CE]  not  a  statement	20	None	replace
3	[BUG]  [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    ir,    small);    }    	non-compiled	[CE]  not  a  statement	19	None	replace
4	[BUG]  [BUGGY]  c[i][index[i]]  <  -r)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -r)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -r)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    ir,    small);    }    	non-compiled	[CE]  not  a  statement	19	None	replace
5	[BUG]  [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i]][index[i]],    ir,    small);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
6	[BUG]  [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i]][index[i]],  ir,  small);  }	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i]][index[i]],    ir,    small);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
7	[BUG]  [BUGGY]  double  r  =  matrix[i][index[i]].doubleValue()  +  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  double  r  =  matrix[i][index[i]].doubleValue()  +  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][index[i]].doubleValue()  +  1;	  double    r    =    matrix[i][index[i]].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
8	[BUG]  [BUGGY]  int  r  =  matrix[i][index[i]]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  matrix[i][index[i]]  -  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  matrix[i][index[i]]  -  1;	  int    r    =    matrix[i][index[i]]    -    small;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
9	[BUG]  [BUGGY]  int  r  =  matrix[i][index[i]]  -  ij;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  matrix[i][index[i]]  -  ij;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  matrix[i][index[i]]  -  ij;	  int    r    =    matrix[i][index[i]]    -    small;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
10	[BUG]  [BUGGY]  int  r  =  matrix[i]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  matrix[i]  -  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  matrix[i]  -  1;	  int    r    =    matrix[i];    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
11	[BUG]  [BUGGY]  int  r  =  c[i][index[i]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  c[i][index[i]];  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  c[i][index[i]];	  int    r    =    index[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
12	[BUG]  [BUGGY]  int  r  =  index[i][index[i]]  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  index[i][index[i]]  -  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  index[i][index[i]]  -  1;	  int    r    =    index[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
13	[BUG]  [BUGGY]  int  r  =  index[i]  -  2;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  index[i]  -  2;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  index[i]  -  2;	  int    r    =    index[i]    -    1;    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
14	[BUG]  [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  if  (c[index[i]][index[i]]  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  if  (c[index[i]][index[i]]  ==  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if    (c[index[i]][index[i]]    ==    0)    {    if  (c[index[i]][index[i]]  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
15	[BUG]  [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  if  (c[i]][index[i]]  ==  0)  {  [CE]  ')'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  if  (c[i]][index[i]]  ==  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if    (c[index[i]][index[i]]    ==    0)    {    if  (c[i]][index[i]]  ==  0)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
16	[BUG]  [BUGGY]  if(c[i]][index[i]]  <  0)  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if(c[i]][index[i]]  <  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if(c[i]][index[i]]  <  0)  {	  if    (c[index[i]][index[i]]    <    0)    {    if    (c[index[i]][index[i]]    <    0)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
17	[BUG]  [BUGGY]  if(index[i]][index[i]]  <  0)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if(index[i]][index[i]]  <  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if(index[i]][index[i]]  <  0)  {	  if    (c[index[i]][index[i]]    <    0)    {    if    (c[index[i]][index[i]]    <    0)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
18	[BUG]  [BUGGY]  if(c[i]][index[i]]  ==  0)  {  [CE]  ')'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if(c[i]][index[i]]  ==  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if(c[i]][index[i]]  ==  0)  {	  if    (c[index[i]][index[i]]    ==    0)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
19	[BUG]  [BUGGY]  double  r  =  matrix[i][index[i]]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  double  r  =  matrix[i][index[i]]  -  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][index[i]]  -  1;	  double    r    =    matrix[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
20	[BUG]  [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small,  r);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small,  r);  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -l)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  i,  small,  r);	  c[i][index[i]]    <    -l)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	12	None	replace
21	[BUG]  [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);	  c[i][index[i]]    <    -loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    	non-compiled	[CE]  not  a  statement	17	None	replace
22	[BUG]  [BUGGY]  double  r  =  matrix[i][i].doubleValue()  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  double  r  =  matrix[i][i].doubleValue()  +  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][i].doubleValue()  +  1;	  double    r    =    matrix[i][i].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
23	[BUG]  [BUGGY]  if(c[i]][index[i]]!=  0)  {  [CE]  ')'  expected  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if(c[i]][index[i]]!=  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if(c[i]][index[i]]!=  0)  {	  if    (c[index[i]][index[i]]    ==    0)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
24	[BUG]  [BUGGY]  c[i][index[i]]  <  -1])  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -1])  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -1])  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }	  c[i][index[i]]    <    -small)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    ir,    small);    }    	non-compiled	[CE]  not  a  statement	19	None	replace
25	[BUG]  [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  if  (c[index[i]][index[i]]  <  0)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  if  (c[index[i]][index[i]]  ==  0)  {  if  (c[index[i]][index[i]]  <  0)  {  [BUGGY]        throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	if    (c[index[i]][index[i]]    ==    0)    {    if  (c[index[i]][index[i]]  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
26	[BUG]  [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	c[i][index[i]]  <  -loop)  {  throw  new  NonPositiveDefiniteMatrixException(c[i][index[i]],  ir,  small);  }	  c[i][index[i]]    <    -loop)    {    throw    new    NonPositiveDefiniteMatrixException(c[i][index[i]],    i,    small);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
27	[BUG]  [BUGGY]  int  r  =  c[i];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  int  r  =  c[i];  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	int  r  =  c[i];	  int    r    =    matrix[i];    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
28	[BUG]  [BUGGY]  double  r  =  c[i][index[i]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  double  r  =  c[i][index[i]];  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  c[i][index[i]];	  double    r    =    matrix[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
29	[BUG]  [BUGGY]  double  r  =  matrix[i][index[i]]  -  small;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  for  (int  i  =  r;  i  <  order;  ++i)  {      [BUGGY]  double  r  =  matrix[i][index[i]]  -  small;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  loop  =  false;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	106	106	2	replace	double  r  =  matrix[i][index[i]]  -  small;	  double    r    =    matrix[i][index[i]];    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
