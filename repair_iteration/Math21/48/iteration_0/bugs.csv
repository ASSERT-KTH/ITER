bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
96	[BUG] [BUGGY] loop = false; [FE] AssertionError [CONTEXT] if (c[index[i]][index[i]] < -small) {   throw new NonPositiveDefiniteMatrixException(c[index[i]][index[i]], i, small); } }   ++r; [BUGGY] loop = false; [BUGGY]  } else {  final double sqrt = FastMath.sqrt(c[ir][ir]); b[r][r] = sqrt; final double inverse= 1 / sqrt; for (int i = r + 1; i < order; ++i) { final int ii = index[i]; final double e = inverse * c[ii][ir]; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	116	116	2	replace	
97	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (c[index[i]][index[i]] < -small) {   throw new NonPositiveDefiniteMatrixException(c[index[i]][index[i]], i, small); } }   ++r; [BUGGY] [BUGGY] loop = false; } else {  final double sqrt = FastMath.sqrt(c[ir][ir]); b[r][r] = sqrt; final double inverse= 1 / sqrt; for (int i = r + 1; i < order; ++i) { final int ii = index[i]; final double e = inverse * c[ii][ir]; [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	116	116	2	add	
