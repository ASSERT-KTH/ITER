bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(loop)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  ij  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  int[][]  b  =  matrix.getMatrixes();  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  int[][]  b  =  matrix.getMatrixes();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	int[][]  b  =  matrix.getMatrixes();	      	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	replace
3	[BUG]  [BUGGY]  int[][]  b  =  matrix.getEntrys();  [CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  int[][]  b  =  matrix.getEntrys();  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	int[][]  b  =  matrix.getEntrys();	      	non-compiled	[CE]  variable  b  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	replace
4	[BUG]  [BUGGY]  root  =  MatrixUtils.createRealMatrix(loop,  matrix,  r);  [CE]  cannot  find  symbol  loop  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  root  =  MatrixUtils.createRealMatrix(loop,  matrix,  r);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	root  =  MatrixUtils.createRealMatrix(loop,  matrix,  r);	  root    =    MatrixUtils.createRealMatrix(matrix,    r);    	non-compiled	[CE]  cannot  find  symbol  loop	2	None	replace
5	[BUG]  [BUGGY]  root  =  MatrixUtils.createRealMatrix(matrix,  rank,  r);  [CE]  no  suitable  method  found  for  createRealMatrix(RealMatrix,int,int)  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  root  =  MatrixUtils.createRealMatrix(matrix,  rank,  r);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	root  =  MatrixUtils.createRealMatrix(matrix,  rank,  r);	  root    =    MatrixUtils.createRealMatrix(matrix,    r);    	non-compiled	[CE]  no  suitable  method  found  for  createRealMatrix(RealMatrix,int,int)	2	None	replace
6	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    ii,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  root  =  MatrixUtils.createRealMatrix(small,  r);  [CE]  no  suitable  method  found  for  createRealMatrix(double,int)  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  root  =  MatrixUtils.createRealMatrix(small,  r);  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	root  =  MatrixUtils.createRealMatrix(small,  r);	  root    =    MatrixUtils.createRealMatrix(loop,    r);    	non-compiled	[CE]  no  suitable  method  found  for  createRealMatrix(double,int)	1	None	replace
11	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  size;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  ir;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  ir;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  ir;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  if(loop)  {  System.arraycopy(b,  0,  b,  0,  b.length);  System.arraycopy(symbol,  0,  b.length);  }  else  {  System.arraycopy(symbol,  0,  b.length);  }  [CE]  cannot  find  symbol  loop  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  System.arraycopy(b,  0,  b,  0,  b.length);  System.arraycopy(symbol,  0,  b.length);  }  else  {  System.arraycopy(symbol,  0,  b.length);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  System.arraycopy(b,  0,  b,  0,  b.length);  System.arraycopy(symbol,  0,  b.length);  }  else  {  System.arraycopy(symbol,  0,  b.length);  }	      	non-compiled	[CE]  cannot  find  symbol  loop	3	None	replace
15	[BUG]  [BUGGY]  if(loop)  {  System.arraycopy(b,  0,  b,  0,  b.length);  System.arraycopy(symbol,  0,  b.length);  }  [CE]  cannot  find  symbol  loop  [FE]              AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  System.arraycopy(b,  0,  b,  0,  b.length);  System.arraycopy(symbol,  0,  b.length);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  System.arraycopy(b,  0,  b,  0,  b.length);  System.arraycopy(symbol,  0,  b.length);  }	      	non-compiled	[CE]  cannot  find  symbol  loop	3	None	replace
16	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  rank;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    ii,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(!loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    ij;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(!loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    ii;    ++i)    {    root.setEntry(index[i],    i,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(!loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    r;    ++i)    {    root.setEntry(b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(matrix[i],  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop  >  0)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(matrix[i],  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop  >  0)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(matrix[i],  b[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(loop  >  0)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(loop  >  0)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }  [BUGGY]    for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(loop  >  0)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  }  loop  =  ++r  <  order;  }  }  rank  =  r;    [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [BUGGY]    root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }	      if(loop)    {    for(int    i    =    0;    i    <    order;    ++i)    {    root.setEntry(index[i],    ii,    b[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
