bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  root  =  MatrixUtils.createRealMatrix(loop,  r);  [CE]  cannot  find  symbol  loop  [FE]    AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]  root  =  MatrixUtils.createRealMatrix(loop,  r);  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	root  =  MatrixUtils.createRealMatrix(loop,  r);	root  =  MatrixUtils.createRealMatrix(order,  r);  	non-compiled	[CE]  cannot  find  symbol  loop	77	None	replace
2	[BUG]  [BUGGY]  root  =  MatrixUtils.createRealMatrix(matrix,  r);  [CE]  no  suitable  method  found  for  createRealMatrix(RealMatrix,int)  [FE]      AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]  root  =  MatrixUtils.createRealMatrix(matrix,  r);  [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	root  =  MatrixUtils.createRealMatrix(matrix,  r);	root  =  MatrixUtils.createRealMatrix(order,  r);  	non-compiled	[CE]  no  suitable  method  found  for  createRealMatrix(RealMatrix,int)	77	None	replace
3	[BUG]  [BUGGY]    [CE]  variable  root  might  not  have  been  initialized  [FE]        AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    [BUGGY]  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	  	root  =  MatrixUtils.createRealMatrix(order,  r);  	non-compiled	[CE]  variable  root  might  not  have  been  initialized	77	None	replace
4	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
5	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
6	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  ij;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
7	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  ii,  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
8	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  i,  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
9	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  ii;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
10	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  r;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
11	[BUG]  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  }  loop  =  ++r  <  order;  }  }  rank  =  r;  [BUGGY]    if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }  [BUGGY]  root  =  MatrixUtils.createRealMatrix(order,  r);  for  (int  i  =  0;  i  <  order;  ++i)  {  for  (int  j  =  0;  j  <  r;  ++j)  {  root.setEntry(index[i],  j,  b[i][j]);  }  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	144	144	2	replace	    if(loop)  {  for(int  i  =  0;  i  <  order;  ++i)  {  root.setEntry(index[i],  b[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	78	None	add
