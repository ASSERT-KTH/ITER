bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  b[r][r]  =  scale;  [CE]  cannot  find  symbol  scale  [FE]              AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[r][r]  =  scale;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[r][r]  =  scale;	  final    double    order    =    FastMath.sqrt(c[ii][ir]);    b[r][r]    =    scale;    	non-compiled	[CE]  cannot  find  symbol  scale	22	None	replace
2	[BUG]  [BUGGY]  b[i][r]  =  chain;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[i][r]  =  chain;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[i][r]  =  chain;	  final    double    order    =    FastMath.sqrt(c[ir][ir]);    b[i][r]    =    chain;    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
3	[BUG]  [BUGGY]  final  double  inverse=2;  final  double  inverse=2;  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=2;  final  double  inverse=2;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final    double    inverse=2;    final  double  inverse=2;	  	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	16	None	add
4	[BUG]  [BUGGY]  final  double  inverse=2;  Final  double  inverse=2;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=2;  Final  double  inverse=2;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final    double    inverse=2;    Final  double  inverse=2;	  	non-compiled	[CE]  not  a  statement	16	None	add
5	[BUG]  [BUGGY]  final  double  inverse=0;  final  double  inverse=0;  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=0;  final  double  inverse=0;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final    double    inverse=0;    final  double  inverse=0;	  	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	14	None	add
6	[BUG]  [BUGGY]  final  double  inverse=0;  Final  double  inverse=0;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=0;  Final  double  inverse=0;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final    double    inverse=0;    Final  double  inverse=0;	  	non-compiled	[CE]  not  a  statement	14	None	add
7	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ii][ir]  -  1);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ii][ir]  -  1);  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  order  =  FastMath.sqrt(c[ii][ir]  -  1);	  final    double    order    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	replace
8	[BUG]  [BUGGY]  b[i][r]  =  scale;  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[i][r]  =  scale;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[i][r]  =  scale;	  b[i][r]    =    size;    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
9	[BUG]  [BUGGY]  final  double  inverse=  1  <  <  order  +  1;  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=  1  <  <  order  +  1;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  inverse=  1  <  <  order  +  1;	  final    double    inverse=    1    <    <    order;    	non-compiled	[CE]  >  expected	4	None	replace
10	[BUG]  [BUGGY]  double  order  =  Math.sqrt(c[ii][ir]  /  sqrt);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  Math.sqrt(c[ii][ir]  /  sqrt);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  Math.sqrt(c[ii][ir]  /  sqrt);	  double    order    =    Math.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=1  *  sqrt  +  2;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	add	final  double  inverse=1  *  sqrt  +  2;	  final    double    inverse=1    *    sqrt    +    1;    	compilable	  [FE]  AssertionError  	32	3	replace
12	[BUG]  [BUGGY]  final  double  inverse=1  *  sqrt  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=1  *  sqrt  +  2;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  inverse=1  *  sqrt  +  2;	  final    double    inverse=1    *    sqrt    +    1;    	compilable	  [FE]  AssertionError  	32	3	replace
13	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir]  /  1);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir]  /  1);  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  order  =  FastMath.sqrt(c[ir][ir]  /  1);	  final    double    order    =    FastMath.sqrt(c[ir][ir]    -    1);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
14	[BUG]  [BUGGY]  double  order  =  FastMath.sqrt(c,  sqrt);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  FastMath.sqrt(c,  sqrt);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  FastMath.sqrt(c,  sqrt);	  double    order    =    FastMath.sqrt(sqrt);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None	replace
15	[BUG]  [BUGGY]  double  order  =  FastMath.sqrt(small);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  FastMath.sqrt(small);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  FastMath.sqrt(small);	  double    order    =    FastMath.sqrt(sqrt);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None	replace
16	[BUG]  [BUGGY]  b[r][r]  =  sqrt  +  1;  [CE]  cannot  find  symbol  inverse  [FE]              AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[r][r]  =  sqrt  +  1;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[r][r]  =  sqrt  +  1;	  b[r][r]    =    sqrt;    	non-compiled	[CE]  cannot  find  symbol  inverse	13	None	replace
17	[BUG]  [BUGGY]  final  double  inverse=1  *  sqrt  +  1;  final  double  inverse=1  *  sqrt  +  1;  [CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=1  *  sqrt  +  1;  final  double  inverse=1  *  sqrt  +  1;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final    double    inverse=1    *    sqrt    +    1;    final  double  inverse=1  *  sqrt  +  1;	  	non-compiled	[CE]  variable  inverse  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	31	None	add
18	[BUG]  [BUGGY]  final  double  inverse=1  *  sqrt  +  1;  Final  double  inverse=1  *  sqrt  +  1;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  inverse=1  *  sqrt  +  1;  Final  double  inverse=1  *  sqrt  +  1;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final    double    inverse=1    *    sqrt    +    1;    Final  double  inverse=1  *  sqrt  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
19	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir]);  b[i][r]  =  size;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ir][ir]);  b[i][r]  =  size;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  order  =  FastMath.sqrt(c[ir][ir]);  b[i][r]  =  size;	  final    double    order    =    FastMath.sqrt(c[ir][ir]);    b[i][r]    =    scale;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	replace
20	[BUG]  [BUGGY]  double  order  =  Math.sqrt(sample);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  Math.sqrt(sample);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  Math.sqrt(sample);	  double    order    =    Math.sqrt(sqrt);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	27	None	replace
21	[BUG]  [BUGGY]  double  order  =  Math.sqrt(small);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  Math.sqrt(small);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  Math.sqrt(small);	  double    order    =    Math.sqrt(sqrt);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	27	None	replace
22	[BUG]  [BUGGY]  r  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  size;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  r  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  size;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	r  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  size;	  double    order    =    FastMath.sqrt(c[ir][ir]);    b[r][r]    =    size;    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
23	[BUG]  [BUGGY]  b[i][r]  =  c[ir][r];  [CE]  cannot  find  symbol  i  [FE]              AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[i][r]  =  c[ir][r];  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[i][r]  =  c[ir][r];	  b[i][r]    =    c[ir][ir];    	non-compiled	[CE]  cannot  find  symbol  i	29	None	replace
24	[BUG]  [BUGGY]  b[i][r]  =  c[ir][sqrt];  [CE]  cannot  find  symbol  i  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[i][r]  =  c[ir][sqrt];  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[i][r]  =  c[ir][sqrt];	  b[i][r]    =    c[ir][ir];    	non-compiled	[CE]  cannot  find  symbol  i	29	None	replace
25	[BUG]  [BUGGY]  double  order  =  FastMath.sqrt(c[ir][ir]  -  1);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  FastMath.sqrt(c[ir][ir]  -  1);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  FastMath.sqrt(c[ir][ir]  -  1);	  double    order    =    FastMath.sqrt(c[ir][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	replace
26	[BUG]  [BUGGY]  double  order  =  FastMath.sqrt(c[ir][ir],  inverse);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  FastMath.sqrt(c[ir][ir],  inverse);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  FastMath.sqrt(c[ir][ir],  inverse);	  double    order    =    FastMath.sqrt(c[ir][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	replace
27	[BUG]  [BUGGY]  double  order  =  Math.sqrt(c[ii][ij]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  Math.sqrt(c[ii][ij]);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  Math.sqrt(c[ii][ij]);	  double    order    =    Math.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	replace
28	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ii][ij]);  b[r][r]  =  scale;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ii][ij]);  b[r][r]  =  scale;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  order  =  FastMath.sqrt(c[ii][ij]);  b[r][r]  =  scale;	  final    double    order    =    FastMath.sqrt(c[ii][ir]);    b[r][r]    =    scale;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None	replace
29	[BUG]  [BUGGY]  b[i][r]  =  sqrt  +  1;  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[i][r]  =  sqrt  +  1;  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[i][r]  =  sqrt  +  1;	  b[i][r]    =    sqrt;    	non-compiled	[CE]  cannot  find  symbol  i	18	None	replace
30	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(c[ii][ij]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  order  =  FastMath.sqrt(c[ii][ij]);  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  order  =  FastMath.sqrt(c[ii][ij]);	  final    double    order    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	replace
31	[BUG]  [BUGGY]  double  order  =  FastMath.sqrt(symbol);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  FastMath.sqrt(symbol);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  FastMath.sqrt(symbol);	  double    order    =    FastMath.sqrt(sqrt);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None	replace
32	[BUG]  [BUGGY]  b[r][r]  =  sqrt  *  FastMath.sqrt(c[ir][ir]);  [CE]  cannot  find  symbol  inverse  [FE]              AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[r][r]  =  sqrt  *  FastMath.sqrt(c[ir][ir]);  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[r][r]  =  sqrt  *  FastMath.sqrt(c[ir][ir]);	  b[r][r]    =    sqrt;    	non-compiled	[CE]  cannot  find  symbol  inverse	13	None	replace
33	[BUG]  [BUGGY]  double  order  =  Math.sqrt(c[ii][ir],  c[ii][ij]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  Math.sqrt(c[ii][ir],  c[ii][ij]);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  Math.sqrt(c[ii][ir],  c[ii][ij]);	  double    order    =    Math.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	replace
34	[BUG]  [BUGGY]  boolean  order  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  scale;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  boolean  order  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  scale;  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	boolean  order  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  scale;	  double    order    =    FastMath.sqrt(c[ir][ir]);    b[r][r]    =    size;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	8	None	replace
35	[BUG]  [BUGGY]  b[i][r]  =  sqrt.doubleValue();  [CE]  cannot  find  symbol  i  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  b[i][r]  =  sqrt.doubleValue();  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	b[i][r]  =  sqrt.doubleValue();	  b[i][r]    =    sqrt;    	non-compiled	[CE]  cannot  find  symbol  i	18	None	replace
36	[BUG]  [BUGGY]  double  order  =  FastMath.sqrt(c[ii][ir]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  double  order  =  FastMath.sqrt(c[ii][ir]);  [BUGGY]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	double  order  =  FastMath.sqrt(c[ii][ir]);	  double    order    =    FastMath.sqrt(c[ir][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	7	None	replace
37	[BUG]  [BUGGY]  final  double  order  =  FastMath.sqrt(b[ii][ir]);  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]        ++r;  loop  =  false;  }  else  {  final  double  sqrt  =  FastMath.sqrt(c[ir][ir]);  b[r][r]  =  sqrt;      [BUGGY]  final  double  order  =  FastMath.sqrt(b[ii][ir]);  [BUGGY]      final  double  inverse=  1  /  sqrt;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  final  int  ii  =  index[i];  final  double  e  =  inverse  *  c[ii][ir];  b[i][r]  =  e;  c[ii][ii]  -=  e  *  e;  for  (int  j  =  r  +  1;  j  <  i;  ++j)  {  final  int  ij  =  index[j];  final  double  f  =  c[ii][ij]  -  e  *  b[j][r];  c[ii][ij]  =  f;  c[ij][ii]  =  f;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	123	123	2	replace	final  double  order  =  FastMath.sqrt(b[ii][ir]);	  final    double    order    =    FastMath.sqrt(c[ii][ir]);    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	24	None	replace
