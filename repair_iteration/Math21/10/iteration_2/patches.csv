bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getMatrix(r);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getMatrix(r);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getMatrix(r);	  RealMatrix    root    =    matrix.getMatrix(small);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getMatrix(swap);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getMatrix(swap);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getMatrix(swap);	  RealMatrix    root    =    matrix.getMatrix(small);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  int  r  =  matrix.getColumnCount()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  int  r  =  matrix.getColumnCount()  +  1;  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  matrix.getColumnCount()  +  1;	  int    r    =    matrix.getColumnCount();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  for(boolean  loop;)  {  [CE]  illegal  start  of  expression  [FE]          NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(boolean  loop;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop;)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  for(boolean  r  =  false;  r!=  null;)  {  for(boolean  r;)  {  [CE]  illegal  start  of  expression  [FE]            NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(boolean  r  =  false;  r!=  null;)  {  for(boolean  r;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  r  =  false;  r!=  null;)  {  for(boolean  r;)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  swap.length  +  1;  ++i)  {  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  i  =  0;  i  <  swap.length  +  1;  ++i)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  swap.length  +  1;  ++i)  {	  for(int    i    =    0;    i    <    swap.length;    ++i)    {    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  swap.length  -  1;  ++i)  {  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  i  =  0;  i  <  swap.length  -  1;  ++i)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  swap.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    swap.length;    ++i)    {    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	5	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {	  for(int    i    =    0;    i    <    index;    ++i)    {    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	19	None	replace
9	[BUG]  [BUGGY]  for(int  loop  =  0;  loop!=  0;  loop++)  {  for(boolean  loop  =  false;  loop  ==  0;)  {  [CE]  illegal  start  of  expression  [FE]        NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  loop  =  0;  loop!=  0;  loop++)  {  for(boolean  loop  =  false;  loop  ==  0;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  loop  =  0;  loop!=  0;  loop++)  {  for(boolean  loop  =  false;  loop  ==  0;)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {	  if(swap!=    null)    {    for(int    i    =    0;    i    <    swap.length;    ++i)    {    int    r    =    0;    for(int    i    =    0;    i    <    swap.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  int  r  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                  AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  int  r  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {	  if(swap!=    null)    {    for(int    i    =    0;    i    <    swap.length;    ++i)    {    int    r    =    0;    for(int    i    =    0;    i    <    swap.length;    ++i)    {    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	17	None	replace
12	[BUG]  [BUGGY]  For  (boolean  loop  =  true;  loop;)  {  [CE]  '.class'  expected  [FE]        NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  For  (boolean  loop  =  true;  loop;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	For  (boolean  loop  =  true;  loop;)  {	  for    (boolean    loop    =    false;    loop;)    {    For    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  for(boolean  loop  =  false;  loop;)  {  [CE]  illegal  start  of  expression  [FE]          NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  for(boolean  loop  =  false;  loop;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  for(boolean  loop  =  false;  loop;)  {	  for    (boolean    loop    =    false;    loop;)    {    For    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getData(),  c);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getData(),  c);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getData(),  c);	  RealMatrix    root    =    matrix.getData(),    r);    	non-compiled	[CE]  ';'  expected	15	None	replace
15	[BUG]  [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  index[swap[i]];  if(c[i][i]  >  c[  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  index[swap[i]];  if(c[i][i]  >  c[  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  index[swap[i]];  if(c[i][i]  >  c[	  if(swap!=    null)    {    for(int    i    =    0;    i    <    swap.length;    ++i)    {    int    r    =    index[swap[i]];    if(c[i][i]    >    c[i][    	non-compiled	[CE]  ']'  expected	18	None	replace
16	[BUG]  [BUGGY]  RealMatrix  r  =  matrix.getMatrix(swap);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  r  =  matrix.getMatrix(swap);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  r  =  matrix.getMatrix(swap);	  RealMatrix    r    =    matrix.getMatrix();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
17	[BUG]  [BUGGY]  int  r  =  swap[swap[i]].doubleValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  int  r  =  swap[swap[i]].doubleValue();  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  swap[swap[i]].doubleValue();	  int    r    =    index[swap[i]].doubleValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  int  r  =  index[swap[i]].doubleValue()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  int  r  =  index[swap[i]].doubleValue()  +  1;  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  index[swap[i]].doubleValue()  +  1;	  int    r    =    index[swap[i]].doubleValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  double[][]  c  =  matrix.getDecomposition();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  double[][]  c  =  matrix.getDecomposition();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double[][]  c  =  matrix.getDecomposition();	  double[][]    c    =    matrix.getCholeskyDecomposition();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRootMatrix(swap);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getRootMatrix(swap);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRootMatrix(swap);	  RealMatrix    root    =    matrix.getRootMatrix();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  Double[][]  c  =  matrix.getData();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  Double[][]  c  =  matrix.getData();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	Double[][]  c  =  matrix.getData();	  double[][]    c    =    root.getData();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
22	[BUG]  [BUGGY]  int  r  =  swap[swap[i]];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  int  r  =  swap[swap[i]];  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  swap[swap[i]];	  int    r    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  int  r  =  index[swap[i]]  +  1;  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  index[swap[i]]  +  1;	  int    r    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRoot(r);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getRoot(r);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRoot(r);	  RealMatrix    root    =    matrix.getRoot(small);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
25	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRoot(b);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getRoot(b);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRoot(b);	  RealMatrix    root    =    matrix.getRoot(small);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
26	[BUG]  [BUGGY]  For  (boolean  loop  =  false;  loop!=  false)  {  [CE]  '.class'  expected  [FE]        NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  For  (boolean  loop  =  false;  loop!=  false)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	For  (boolean  loop  =  false;  loop!=  false)  {	  for    (boolean    loop    =    false;    loop;)    {    For    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
27	[BUG]  [BUGGY]  for(int  r  =  0;  r  <  size;  ++i)  {  for(boolean  loop  =  false;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [FE]        NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  r  =  0;  r  <  size;  ++i)  {  for(boolean  loop  =  false;  loop!=  0;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  r  =  0;  r  <  size;  ++i)  {  for(boolean  loop  =  false;  loop!=  0;)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRoot(index);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getRoot(index);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRoot(index);	  RealMatrix    root    =    matrix.getRoot(small);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
29	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRoot(swap);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getRoot(swap);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRoot(swap);	  RealMatrix    root    =    matrix.getRoot(small);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
30	[BUG]  [BUGGY]  RealMatrix  matrix  =  root.getMatrix(swap);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  matrix  =  root.getMatrix(swap);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  matrix  =  root.getMatrix(swap);	  RealMatrix    matrix    =    root.getMatrix();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  }  [CE]  cannot  find  symbol  loop  [FE]                AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  }  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  }	  if(swap!=    null)    {    for(int    i    =    0;    i    <    swap.length;    ++i)    {    int    r    =    0;    for(int    i    =    0;    i    <    swap.length;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  loop	17	None	replace
32	[BUG]  [BUGGY]  RealMatrix  r  =  matrix.getData();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  r  =  matrix.getData();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  r  =  matrix.getData();	  RealMatrix    r    =    matrix.getMatrix();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
33	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getMatrix(b);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getMatrix(b);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getMatrix(b);	  RealMatrix    root    =    matrix.getMatrix(small);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getData(),  b,  r);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getData(),  b,  r);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getData(),  b,  r);	  RealMatrix    root    =    matrix.getData(),    b);    	non-compiled	[CE]  ';'  expected	22	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  For  (boolean  loop  =  false;  loop;)  {  [CE]  '.class'  expected  [FE]        NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  For  (boolean  loop  =  false;  loop;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  For  (boolean  loop  =  false;  loop;)  {	  for    (boolean    loop    =    false;    loop;)    {    For    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  '.class'  expected	16	None	replace
36	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop!=  null;)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	12	None	replace
37	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRootMatrix(small);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  RealMatrix  root  =  matrix.getRootMatrix(small);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRootMatrix(small);	  RealMatrix    root    =    matrix.getRootMatrix();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  for(int  i  =  0;  i  <  order;  ++i)  {  [CE]  illegal  start  of  expression  [FE]          NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  for(int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop!=  null;)  {  for(int  i  =  0;  i  <  order;  ++i)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  for(boolean  loop;)  {  [CE]  illegal  start  of  expression  [FE]            NotStrictlyPositiveException      [CONTEXT]      final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;      [BUGGY]  for(boolean  loop  =  false;  loop!=  null;)  {  for(boolean  loop;)  {  [BUGGY]        swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(boolean  loop  =  false;  loop!=  null;)  {  for(boolean  loop;)  {	  for    (boolean    loop    =    false;    loop;)    {    for    (boolean    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
