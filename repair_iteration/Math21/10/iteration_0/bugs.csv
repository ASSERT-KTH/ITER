bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
19	[BUG] [BUGGY] for (boolean loop = true; loop;) { [FE] AssertionError [CONTEXT] final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; [BUGGY] for (boolean loop = true; loop;) { [BUGGY]   swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; if (c[ii][ii] > c[isi][isi]) { swap[r] = i; } } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[][] c = matrix.getData(); final double[][] b = new double[order][order]; int[] swap= new int[order]; int[] index = new int[order]; for (int i = 0; i < order; ++i) { index[i] = i; } int r = 0; [BUGGY] [BUGGY] for (boolean loop = true; loop;) {  swap[r] = r; for (int i = r + 1; i < order; ++i) { int ii= index[i]; int isi = index[swap[i]]; if (c[ii][ii] > c[isi][isi]) { swap[r] = i; } } [CLASS] RectangularCholeskyDecomposition [METHOD] <init> [RETURN_TYPE] RealMatrix,double)  RealMatrix matrix double small [VARIABLES] double[][] b c int[] index swap boolean loop RealMatrix matrix root int i ii ij ir isi j order r rank tmp double e f inverse small sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	add	
