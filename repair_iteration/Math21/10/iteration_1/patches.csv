bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  index[swap[i]];  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  index[swap[i]];	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  int  r  =  index[swap[i]].doubleValue();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  index[swap[i]].doubleValue();  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  index[swap[i]].doubleValue();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getMatrix(small);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  root  =  matrix.getMatrix(small);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getMatrix(small);	      RealMatrix    root    =    matrix.getMatrix();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [CE]  cannot  find  symbol  size  [FE]        AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  size	1	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  swap.length;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  variable  i  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
6	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRootMatrix();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  root  =  matrix.getRootMatrix();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRootMatrix();	      RealMatrix    root    =    matrix.getData();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  int  r  =  matrix.getColumnCount();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  matrix.getColumnCount();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  matrix.getColumnCount();	      int    r    =    matrix.getRowCount();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  int  r  =  matrix.getRowCount()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  int  r  =  matrix.getRowCount()  +  1;  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	int  r  =  matrix.getRowCount()  +  1;	      int    r    =    matrix.getRowCount();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  RealMatrix  matrix  =  root.getMatrix();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  matrix  =  root.getMatrix();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  matrix  =  root.getMatrix();	      RealMatrix    matrix    =    matrix.getMatrix();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  RealMatrix  matrix  =  c.getMatrix();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  matrix  =  c.getMatrix();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  matrix  =  c.getMatrix();	      RealMatrix    matrix    =    matrix.getMatrix();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  RealMatrix  root  =  b.getRoot();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  root  =  b.getRoot();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  b.getRoot();	      RealMatrix    root    =    matrix.getRoot();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  for  (boolean  loop  =  false;  loop;)  {  for  (boolean  loop  =  false;  loop;)  {  [CE]  illegal  start  of  expression  [FE]    NotStrictlyPositiveException    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for  (boolean  loop  =  false;  loop;)  {  for  (boolean  loop  =  false;  loop;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for    (boolean    loop    =    false;    loop;)    {    for  (boolean  loop  =  false;  loop;)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
13	[BUG]  [BUGGY]  for  (boolean  loop  =  false;  loop;)  {  for  (boolean  loop;)  {  [CE]  illegal  start  of  expression  [FE]      NotStrictlyPositiveException    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for  (boolean  loop  =  false;  loop;)  {  for  (boolean  loop;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for    (boolean    loop    =    false;    loop;)    {    for  (boolean  loop;)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
14	[BUG]  [BUGGY]  double[][]  c  =  matrix.getCholeskyDecomposition();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double[][]  c  =  matrix.getCholeskyDecomposition();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double[][]  c  =  matrix.getCholeskyDecomposition();	      double[][]    c    =    matrix.getData();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getData(),  r);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  root  =  matrix.getData(),  r);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getData(),  r);	      RealMatrix    root    =    matrix.getData();    	non-compiled	[CE]  ';'  expected	9	None	replace
16	[BUG]  [BUGGY]  for  (boolean  loop  =  false;  loop;)  {  For  (boolean  loop  =  false;  loop;)  {  [CE]  '.class'  expected  [FE]    NotStrictlyPositiveException    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for  (boolean  loop  =  false;  loop;)  {  For  (boolean  loop  =  false;  loop;)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for    (boolean    loop    =    false;    loop;)    {    For  (boolean  loop  =  false;  loop;)  {	  	non-compiled	[CE]  '.class'  expected	2	None	add
17	[BUG]  [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  0;  for(int  i  =  0;  i  <  swap.length;  ++i)  {	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  index[swap[i]];  if(c[i][i]  >  c[i][  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  index[swap[i]];  if(c[i][i]  >  c[i][  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	if(swap!=  null)  {  for(int  i  =  0;  i  <  swap.length;  ++i)  {  int  r  =  index[swap[i]];  if(c[i][i]  >  c[i][	      	non-compiled	[CE]  ']'  expected	4	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [BUGGY]      swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	1	None	replace
20	[BUG]  [BUGGY]  RealMatrix  r  =  matrix.getMatrix();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  r  =  matrix.getMatrix();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  r  =  matrix.getMatrix();	      RealMatrix    matrix    =    matrix.getMatrix();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  double[][]  c  =  root.getData();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  double[][]  c  =  root.getData();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	double[][]  c  =  root.getData();	      double[][]    c    =    matrix.getData();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getData(),  b);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  root  =  matrix.getData(),  b);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getData(),  b);	      RealMatrix    root    =    matrix.getData();    	non-compiled	[CE]  ';'  expected	9	None	replace
23	[BUG]  [BUGGY]  RealMatrix  root  =  matrix.getRoot(small);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[][]  c  =  matrix.getData();  final  double[][]  b  =  new  double[order][order];  int[]  swap=  new  int[order];  int[]  index  =  new  int[order];  for  (int  i  =  0;  i  <  order;  ++i)  {  index[i]  =  i;  }  int  r  =  0;    [BUGGY]  RealMatrix  root  =  matrix.getRoot(small);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  swap[r]  =  r;  for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	76	76	2	replace	RealMatrix  root  =  matrix.getRoot(small);	      RealMatrix    root    =    matrix.getRoot();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
