bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  r;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  r;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  index[swap[r]]  =  r;	  int    r    =    index[swap[i]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	29	None	replace
2	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  b;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  b;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  index[swap[r]]  =  b;	  int    r    =    index[swap[i]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	29	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	32	3	add
4	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	32	3	add
5	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
6	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[sw  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[sw  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[sw	  	non-compiled	[CE]  ']'  expected	32	None	add
7	[BUG]  [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	40	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(tmp  <  0)  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	compilable	  [FE]  AssertionError  	40	3	replace
9	[BUG]  [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  0)  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	compilable	  [FE]  AssertionError  	40	3	replace
10	[BUG]  [BUGGY]  r]  =  tmp;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  r]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	r]  =  tmp;	  index[r]    =    tmp;    r]    =    tmp;    	non-compiled	[CE]  not  a  statement	8	None	replace
11	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  index[swap[r]]    =    tmp;    if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	39	None	replace
12	[BUG]  [BUGGY]  float  r  =  index[swap[r]];  index[swap[r]]  =  i;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  float  r  =  index[swap[r]];  index[swap[r]]  =  i;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	float  r  =  index[swap[r]];  index[swap[r]]  =  i;	  int    r    =    index[swap[r]];    index[swap[r]]    =    i;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	20	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  index[r]  =  tmp;  index[r]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        index[r]    =    tmp;    index[r]  =  tmp;  index[r]  =  tmp;	  	compilable	  [FE]  AssertionError  	4	2	add
14	[BUG]  [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  index[r]  =  tmp;  index[r]  =  tmp;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  index[r]  =  tmp;  index[r]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        index[r]    =    tmp;    index[r]  =  tmp;  index[r]  =  tmp;	  	compilable	  [FE]  AssertionError  	4	2	add
15	[BUG]  [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  r]  =  tmp;  index[r]  =  tmp;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  r]  =  tmp;  index[r]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        index[r]    =    tmp;    r]  =  tmp;  index[r]  =  tmp;	  	non-compiled	[CE]  not  a  statement	4	None	add
16	[BUG]  [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  int  r]  =  tmp;  index[r]  =  tmp;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  int  r]  =  tmp;  index[r]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        index[r]    =    tmp;    int  r]  =  tmp;  index[r]  =  tmp;	  	non-compiled	[CE]  ';'  expected	4	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	15	3	add
18	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	15	3	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	15	3	add
20	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	15	3	add
21	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  int  swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  int  swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    int  swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  ']'  expected	15	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(tmp!=  0)  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp!=    0)    {    index[r]    =    tmp;    }    	compilable	  [FE]  AssertionError  	7	3	replace
23	[BUG]  [BUGGY]  if(tmp!=  0)  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp!=  0)  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp!=    0)    {    index[r]    =    tmp;    }    	compilable	  [FE]  AssertionError  	7	3	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]  =  0;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]  =  0;	  index[swap[r]]    =    tmp;    index[swap[r]]    =    tmp;    	compilable	  [FE]  AssertionError  	12	3	replace
25	[BUG]  [BUGGY]  index[swap[r]]  =  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]  =  0;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]  =  0;	  index[swap[r]]    =    tmp;    index[swap[r]]    =    tmp;    	compilable	  [FE]  AssertionError  	12	3	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    	compilable	  [FE]  AssertionError  	33	3	replace
27	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    	compilable	  [FE]  AssertionError  	33	3	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	13	3	add
29	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	13	3	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	13	3	add
31	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	13	3	add
32	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  int  swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  int  swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    int  swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  ']'  expected	13	None	add
33	[BUG]  [BUGGY]  int  swap[r]]  =  c;  [CE]  ']'  expected  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  swap[r]]  =  c;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  swap[r]]  =  c;	  index[swap[r]]    =    c;    	non-compiled	[CE]  ']'  expected	22	None	replace
34	[BUG]  [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }  [CE]  cannot  find  symbol  ir  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(c[ir][ir],    small);    }    	non-compiled	[CE]  cannot  find  symbol  ir	41	None	replace
35	[BUG]  [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  smaller);  }  [CE]  cannot  find  symbol  ir  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  smaller);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  smaller);  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(c[ir][ir],    small);    }    	non-compiled	[CE]  cannot  find  symbol  ir	41	None	replace
36	[BUG]  [BUGGY]  int  swap[r]  =  index[swap[r]]  &  0xff;  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  swap[r]  =  index[swap[r]]  &  0xff;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  swap[r]  =  index[swap[r]]  &  0xff;	  int    swap[r]    =    index[swap[r]];    	non-compiled	[CE]  ']'  expected	1	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
38	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
39	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  int  r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  int  r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    int  r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	non-compiled	[CE]  ';'  expected	35	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
41	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
42	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  /  1;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[r]]  /  1;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]]  /  1;	  int    r    =    index[swap[r]]    -    1;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None	replace
43	[BUG]  [BUGGY]  rackMatrix(tmp);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  rackMatrix(tmp);  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	rackMatrix(tmp);	  if(tmp!=    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
44	[BUG]  [BUGGY]  int  r  =  index[swap[r]];  if(r  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[r]];  if(r  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]];  if(r  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  int    r    =    index[swap[r]];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	replace
45	[BUG]  [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]        <        tmp)        {        index[r]        =        index[swap[r]];        }        if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[	  	non-compiled	[CE]  ']'  expected	25	None	add
46	[BUG]  [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]        <        tmp)        {        index[r]        =        index[swap[r]];        }        if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <	  	non-compiled	[CE]  ')'  expected	25	None	add
47	[BUG]  [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]        <        tmp)        {        index[r]        =        index[swap[r]];        }        if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;	  	compilable	  [FE]  AssertionError  	11	3	add
49	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;	  	compilable	  [FE]  AssertionError  	11	3	add
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
51	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
52	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  int  swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  int  swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    int  swap[r]]  =  tmp;  index[swap[r]]  =  tmp;	  	non-compiled	[CE]  ']'  expected	11	None	add
53	[BUG]  [BUGGY]  int  r  =  index[swap[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  int    r    =    index[r];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
54	[BUG]  [BUGGY]  if(swap[r]!=  b)  {  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]!=  b)  {  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]!=  b)  {  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
55	[BUG]  [BUGGY]  if(swap[r]!=  t)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [CE]  cannot  find  symbol  t  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]!=  t)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]!=  t)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    	non-compiled	[CE]  cannot  find  symbol  t	36	None	replace
56	[BUG]  [BUGGY]  safeTree(swap,  tmp);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  safeTree(swap,  tmp);  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	safeTree(swap,  tmp);	  safeTree(tmp);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
57	[BUG]  [BUGGY]  safeTree(swap);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  safeTree(swap);  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	safeTree(swap);	  safeTree(tmp);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
58	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  1;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]]  -  1;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]]  -  1;	  int    r    =    index[swap[i]];    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	34	None	replace
59	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]].;  }  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]].;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]].;  }	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]].;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
60	[BUG]  [BUGGY]  index[r]]  =  index[swap[r]].;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]]  =  index[swap[r]].;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]]  =  index[swap[r]].;	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]].;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	30	2	add
62	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	30	2	add
63	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  If(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  If(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    If(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	6	2	add
65	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	6	2	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    if(tmp!=  0)  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	6	2	add
67	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    if(tmp!=  0)  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	6	2	add
68	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  int  r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  int  r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    int  r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
69	[BUG]  [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(sw  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(sw  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]        <        tmp)        {        index[r]        =        index[swap[r]];        }        if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(sw	  	non-compiled	[CE]  ')'  expected	25	None	add
70	[BUG]  [BUGGY]  index[r]  =  i;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]  =  i;  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]  =  i;	  index[r]    =    tmp;    index[r]    =    tmp;    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[swap[r]]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    if(tmp!=  0)  {  index[swap[r]]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
72	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[swap[r]]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(tmp!=  0)  {  index[swap[r]]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    if(tmp!=  0)  {  index[swap[r]]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(swap[r]  >=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    if(swap[r]  >=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
74	[BUG]  [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(swap[r]  >=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  if(swap[r]  >=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    if(swap[r]  >=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	35	2	add
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    index[swap[r]]    =    tmp;    	compilable	  [FE]  AssertionError  	12	3	replace
76	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    index[swap[r]]    =    tmp;    	compilable	  [FE]  AssertionError  	12	3	replace
77	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  i;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  i;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  index[swap[r]]  =  i;	  int    r    =    index[swap[r]];    index[swap[r]]    =    i;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	20	None	replace
78	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
79	[BUG]  [BUGGY]  MutableMatrix.throwException( " ");  [CE]  cannot  find  symbol  MutableMatrix  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  MutableMatrix.throwException( " ");  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	MutableMatrix.throwException( " ");	  aughtException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableMatrix	17	None	replace
80	[BUG]  [BUGGY]  MutableMatrix.exception( " ");  [CE]  cannot  find  symbol  MutableMatrix  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  MutableMatrix.exception( " ");  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	MutableMatrix.exception( " ");	  aughtException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableMatrix	17	None	replace
81	[BUG]  [BUGGY]  int  r  =  index[swap];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  int    r    =    index[r];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
82	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
83	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[	  	non-compiled	[CE]  ']'  expected	32	None	add
84	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[	  	non-compiled	[CE]  ']'  expected	32	None	add
85	[BUG]  [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ".);  }  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ".);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ".);  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
86	[BUG]  [BUGGY]  safeMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  safeMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	safeMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  rackMatrix(tmp)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ".getMessage());    }    	non-compiled	[CE]  	10	None	replace
87	[BUG]  [BUGGY]  RackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  RackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	RackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  rackMatrix(tmp)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  	9	None	replace
88	[BUG]  [BUGGY]  float  r  =  index[swap[i]];  index[swap[r]]  =  tmp;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  float  r  =  index[swap[i]];  index[swap[r]]  =  tmp;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	float  r  =  index[swap[i]];  index[swap[r]]  =  tmp;	  int    r    =    index[swap[i]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	29	None	replace
89	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  c;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  c;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  index[swap[r]]  =  c;	  int    r    =    index[swap[i]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	29	None	replace
90	[BUG]  [BUGGY]  if(tmp  <  swap[r])  {  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  swap[r])  {  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    If(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
91	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  index[swap[i]]  =  b;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]];  index[swap[i]]  =  b;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  index[swap[i]]  =  b;	  int    r    =    index[swap[r]];    index[swap[r]]    =    b;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	19	None	replace
92	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]                AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[i]];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  int    r    =    index[swap[r]];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	28	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  if(swap[r]  <  tmp)  {  index[r]  =  tmp;  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]        =        tmp;        index[r]    =    tmp;    if(swap[r]  <  tmp)  {  index[r]  =  tmp;  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	4	2	add
94	[BUG]  [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  if(swap[r]  <  tmp)  {  index[r]  =  tmp;  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[r]    =    tmp;    index[r]  =  tmp;  if(swap[r]  <  tmp)  {  index[r]  =  tmp;  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]        =        tmp;        index[r]    =    tmp;    if(swap[r]  <  tmp)  {  index[r]  =  tmp;  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	4	2	add
95	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  -  2;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  int  r  =  index[swap[r]]  -  2;  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]]  -  2;	  int    r    =    index[swap[r]]    -    1;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	23	None	replace
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    	compilable	  [FE]  AssertionError  	36	3	replace
97	[BUG]  [BUGGY]  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  index[r]    =    tmp;    if(tmp!=    0)    {    index[r]    =    tmp;    }    else    {    index[r]    =    tmp;    }    	compilable	  [FE]  AssertionError  	36	3	replace
98	[BUG]  [BUGGY]  if(tmp  <  0)  {  index[r]  =  i;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }  [CE]  cannot  find  symbol  i  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  0)  {  index[r]  =  i;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  0)  {  index[r]  =  i;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }	  index[r]    =    tmp;    if(tmp    <    0)    {    index[r]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(c[ir][ir],    small);    }    	non-compiled	[CE]  cannot  find  symbol  i	41	None	replace
99	[BUG]  [BUGGY]  if(swap[i]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[i]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[i]  <  tmp)  {  index[r]  =  index[swap[r]];  }	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
100	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(swap[r]  <  tmp)  {  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]  <  tmp)  {  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  if(swap[r]!=    tmp)    {    int    r    =    index[r];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    	compilable	  [FE]  AssertionError  	33	3	replace
102	[BUG]  [BUGGY]  if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    	compilable	  [FE]  AssertionError  	33	3	replace
103	[BUG]  [BUGGY]  MutableMatrix.error( " ");  [CE]  cannot  find  symbol  MutableMatrix  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  MutableMatrix.error( " ");  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	MutableMatrix.error( " ");	  aughtException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableMatrix	17	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	32	3	add
105	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	32	3	add
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	32	3	add
107	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    index[swap[r]]    =    tmp;    }    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	32	3	add
108	[BUG]  [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " "  +  c.getMessage());  }  [CE]  [FE]              AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " "  +  c.getMessage());  }  [BUGGY]      index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " "  +  c.getMessage());  }	  rackMatrix(tmp)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ".getMessage());    }    	non-compiled	[CE]  	10	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
110	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
111	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  int  r  =  index[swap[r]];  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  int  r  =  index[swap[r]];  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    int  r  =  index[swap[r]];  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	13	None	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]];  }	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    If(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    	compilable	  [FE]  AssertionError  	27	2	replace
113	[BUG]  [BUGGY]  if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]];  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]];  }	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    If(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    	compilable	  [FE]  AssertionError  	27	2	replace
114	[BUG]  [BUGGY]  if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  swap[r])  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  index[swap[r]]    =    tmp;    if(swap[r]    <    tmp)    {    index[swap[r]]    =    tmp;    }    else    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	39	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	15	3	add
116	[BUG]  [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]        =        tmp;        if(swap[r]    >    tmp)    {    index[swap[r]]    =    tmp;    }    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	15	3	add
117	[BUG]  [BUGGY]  if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]].;  }  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];      [BUGGY]  if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]].;  }  [BUGGY]      index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp  <  swap[r])  {  index[r]  =  index[swap[r]].;  }	  if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]].;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
