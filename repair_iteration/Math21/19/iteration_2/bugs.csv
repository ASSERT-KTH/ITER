bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  swap[r]  =  index[swap[r]];  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  swap[r]  =  index[swap[r]];  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  swap[r]  =  index[swap[r]];	      int    swap[r]    =    c[swap[r]];    	non-compiled	[CE]  ']'  expected	13	None	replace
2	[BUG]  [BUGGY]  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	      if(swap[r]    >    tmp)    {    int    r    =    index[r];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	replace
3	[BUG]  [BUGGY]  if(swap[r]!=  tmp)  {  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]!=  tmp)  {  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]!=  tmp)  {  int  r  =  index[r];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	      if(swap[r]    >    tmp)    {    int    r    =    index[r];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  index[r]  =  tmp;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]    =    tmp;    index[r]  =  tmp;	  	compilable	  [FE]  AssertionError  	4	2	add
5	[BUG]  [BUGGY]  index[r]  =  tmp;  index[r]  =  tmp;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  index[r]  =  tmp;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]    =    tmp;    index[r]  =  tmp;	  	compilable	  [FE]  AssertionError  	4	2	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	4	2	add
7	[BUG]  [BUGGY]  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	4	2	add
8	[BUG]  [BUGGY]  index[r]  =  tmp;  r]  =  tmp;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  r]  =  tmp;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]    =    tmp;    r]  =  tmp;	  	non-compiled	[CE]  not  a  statement	4	None	add
9	[BUG]  [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	      if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  	8	None	replace
10	[BUG]  [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ".getMessage());  }  [CE]  [FE]          AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ".getMessage());  }  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	rackMatrix(tmp)  {  throw  new  NonPositiveDefiniteMatrixException( " ".getMessage());  }	      if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  	8	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;	  	compilable	  [FE]  AssertionError  	11	3	add
12	[BUG]  [BUGGY]  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  index[swap[r]]  =  tmp;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]    =    tmp;    index[swap[r]]  =  tmp;	  	compilable	  [FE]  AssertionError  	11	3	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
14	[BUG]  [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
16	[BUG]  [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]    =    tmp;    if(swap[r]  >  tmp)  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
17	[BUG]  [BUGGY]  aughtException( " ");  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  aughtException( " ");  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	aughtException( " ");	      if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
18	[BUG]  [BUGGY]  safeTree(tmp);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  safeTree(tmp);  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	safeTree(tmp);	      if(tmp    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
19	[BUG]  [BUGGY]  int  r  =  index[swap[r]];  index[swap[r]]  =  b;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[swap[r]];  index[swap[r]]  =  b;  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]];  index[swap[r]]  =  b;	      int    r    =    index[swap[r]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
20	[BUG]  [BUGGY]  int  r  =  index[swap[r]];  index[swap[r]]  =  i;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[swap[r]];  index[swap[r]]  =  i;  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]];  index[swap[r]]  =  i;	      int    r    =    index[swap[r]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
21	[BUG]  [BUGGY]  index[swap[r]]  =  i;  [CE]  cannot  find  symbol  i  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  i;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]  =  i;	  index[swap[r]]    =    tmp;    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
22	[BUG]  [BUGGY]  index[swap[r]]  =  c;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  c;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]  =  c;	  index[swap[r]]    =    tmp;    	non-compiled	[CE]  incompatible  types	12	None	replace
23	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  -  1;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[swap[r]]  -  1;  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]]  -  1;	      int    r    =    index[swap[r]];    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
24	[BUG]  [BUGGY]  index[r]]  =  i;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]]  =  i;  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]]  =  i;	  index[r]    =    tmp;    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	6	2	add
26	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }	  	compilable	  [FE]  AssertionError  	6	2	add
27	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  If(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  If(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    If(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }	  	non-compiled	[CE]  ';'  expected	6	None	add
28	[BUG]  [BUGGY]  int  r  =  index[swap[r]];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]            AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[swap[r]];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[r]];  if(r  <  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	      if(swap[r]    >    tmp)    {    int    r    =    index[r];    if(r    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	3	None	replace
29	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  tmp;  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]          AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[swap[i]];  index[swap[r]]  =  tmp;  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];  index[swap[r]]  =  tmp;	      int    r    =    index[swap[r]];    index[swap[r]]    =    tmp;    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	2	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    	compilable	  [FE]  AssertionError  	12	3	replace
31	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }	  index[swap[r]]    =    tmp;    	compilable	  [FE]  AssertionError  	12	3	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
33	[BUG]  [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  index[swap[r]]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	11	3	add
34	[BUG]  [BUGGY]  int  r  =  index[swap[i]];  [CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  int  r  =  index[swap[i]];  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	int  r  =  index[swap[i]];	      int    r    =    index[swap[r]];    	non-compiled	[CE]  variable  r  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	1	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	add	index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	4	2	add
36	[BUG]  [BUGGY]  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]    =    tmp;    if(tmp!=  0)  {  index[r]  =  tmp;  }  else  {  index[r]  =  tmp;  }	  	compilable	  [FE]  AssertionError  	4	2	add
37	[BUG]  [BUGGY]  if(tmp!=  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(tmp!=  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(tmp!=  0)  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	      if(tmp    ==    0)    {    throw    new    NonPositiveDefiniteMatrixException(   "   ");    }    	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	8	None	replace
38	[BUG]  [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]].;  }  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]];  }  if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]].;  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	if(swap[r]    <    tmp)    {    index[r]    =    index[swap[r]];    }    if(swap[r]  <  tmp)  {  index[r]  =  index[swap[r]].;  }	  	non-compiled	[CE]  <identifier>  expected	6	None	add
39	[BUG]  [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[swap[r]]  =  tmp;  if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[swap[r]]    =    tmp;    if(swap[r]  <  tmp)  {  index[swap[r]]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	11	None	add
40	[BUG]  [BUGGY]  index[r]  =  tmp;  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]    =    tmp;    if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException( " ");  }	  	non-compiled	[CE]  constructor  NonPositiveDefiniteMatrixException  in  class  NonPositiveDefiniteMatrixException  cannot  be  applied  to  given  types;	4	None	add
41	[BUG]  [BUGGY]  index[r]  =  tmp;  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }  [CE]  cannot  find  symbol  ir  [FE]      AssertionError    [CONTEXT]    int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];    [BUGGY]  index[r]  =  tmp;  if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }  [BUGGY]    index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	92	92	2	replace	index[r]    =    tmp;    if(tmp  <  0)  {  index[r]  =  tmp;  }  else  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  small);  }	  	non-compiled	[CE]  cannot  find  symbol  ir	4	None	add
