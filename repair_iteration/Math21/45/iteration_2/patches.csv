bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  order  =  r.length  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  r.length  -  1;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  r.length  -  1;	  int    order    =    r.length;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    for(int  i  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  index.length;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    int  i  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  >  expected	4	None	add
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  r  =  0;  i  <  index.length;  ++i)  {  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  r  =  0;  i  <  index.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    int  r  =  0;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  >  expected	4	None	add
5	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  for(int  i  =  1;  i  <  index.length;  ++i)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  for(int  i  =  1;  i  <  index.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    index.length;    ++i)    {    for(int  i  =  1;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
6	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  i  =  1;  i  <  index.length;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  i  =  1;  i  <  index.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    index.length;    ++i)    {    int  i  =  1;  i  <  index.length;  ++i)  {	  	non-compiled	[CE]  >  expected	1	None	add
7	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  for(int  i  =  1;  i  <  index.length);  ++i)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  for(int  i  =  1;  i  <  index.length);  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    index.length;    ++i)    {    for(int  i  =  1;  i  <  index.length);  ++i)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ordered.length;  ++i)  {  [CE]  cannot  find  symbol  ordered  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ordered.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  ordered.length;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    for(int    i    =    0;    i    <    ordered;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  ordered	11	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	22	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  [CE]  cannot  find  symbol  size  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  size;  ++i)  {  int  order;	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    	non-compiled	[CE]  cannot  find  symbol  size	22	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	add	for(int  i  =  0;  i  <  c.length;  ++i)  {	  for(int    i    =    0;    i    <    ir;    ++i)    {    	compilable	  [FE]  AssertionError  	24	2	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {	  for(int    i    =    0;    i    <    ir;    ++i)    {    	compilable	  [FE]  AssertionError  	24	2	replace
13	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i);  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i);	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    ++i);    	non-compiled	[CE]  ';'  expected	26	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i);  }	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    ++i);    	non-compiled	[CE]  ';'  expected	26	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	27	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	27	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  size;  ++i)  {  int  order;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    ++i)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  ++i)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    ++i)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ordered;  ++i)  {  [CE]  cannot  find  symbol  ordered  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ordered;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  ordered;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    for(int    i    =    1;    i    <    ordered;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  ordered	15	None	replace
20	[BUG]  [BUGGY]  int  order  =  c[index[i]][index[i]]  -  r;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  c[index[i]][index[i]]  -  r;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]][index[i]]  -  r;	  int    order    =    c[index[i]][index[i]]    -    small;    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
21	[BUG]  [BUGGY]  int  order  =  c[index[i]][index[i]]  -  2;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  c[index[i]][index[i]]  -  2;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]][index[i]]  -  2;	  int    order    =    c[index[i]][index[i]]    -    1;    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
22	[BUG]  [BUGGY]  double  order  =  b[index[i]];  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  double  order  =  b[index[i]];  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	double  order  =  b[index[i]];	  double    order    =    c[index[i]];    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
23	[BUG]  [BUGGY]  double  order  =  c[index[i]][index[i]].doubleValue()  +  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  double  order  =  c[index[i]][index[i]].doubleValue()  +  1;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	double  order  =  c[index[i]][index[i]].doubleValue()  +  1;	  double    order    =    c[index[i]][index[i]].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order;	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	20	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  order;  [CE]  cannot  find  symbol  size  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  order;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {  int  order;	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order;    	non-compiled	[CE]  cannot  find  symbol  size	20	None	replace
26	[BUG]  [BUGGY]  int  i  =  1;  i  <  0;  ++i)  {  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  i  =  1;  i  <  0;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  i  =  1;  i  <  0;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    int    i    =    1;    i    <    order;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  int  order  =  c[index[i]]  -  2;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  c[index[i]]  -  2;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]]  -  2;	  int    order    =    c[index[i]]    -    1;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  for(int  i  =  0;  i  <  ir;  ++i)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  for(int  i  =  0;  i  <  ir;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    ir;    ++i)    {    for(int  i  =  0;  i  <  ir;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	23	None	add
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    ir;    ++i)    {    if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }	  	non-compiled	[CE]  'else'  without  'if'	23	None	add
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    ir;    ++i)    {    if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	10	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	10	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order;  ++i)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  int  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order;    ++i)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  order;  ++i)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  int  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {  int  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order;    ++i)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
35	[BUG]  [BUGGY]  int  order  =  index.length  -  1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  index.length  -  1;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  index.length  -  1;	  int    order    =    index.length;    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
36	[BUG]  [BUGGY]  int  order  =  c.length  -  2;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  c.length  -  2;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c.length  -  2;	  int    order    =    c.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    int    i    =    1;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	14	None	replace
38	[BUG]  [BUGGY]  int  order  =  matrix.length  -  2;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  matrix.length  -  2;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  matrix.length  -  2;	  int    order    =    matrix.length    -    1;    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  int  order;  [CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  int  order;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  ir;  ++i)  {  int  order;	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order;    	non-compiled	[CE]  variable  order  is  already  defined  in  constructor  RectangularCholeskyDecomposition(RealMatrix,double)	20	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	add	for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    index.length;    ++i)    {    	compilable	  [FE]  AssertionError  	5	2	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    index.length;    ++i)    {    	compilable	  [FE]  AssertionError  	5	2	replace
42	[BUG]  [BUGGY]  double  order  =  c[index[i]]  -  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  double  order  =  c[index[i]]  -  1;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	double  order  =  c[index[i]]  -  1;	  double    order    =    c[index[i]];    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	10	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  i  =  1;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  i  =  1;  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    index.length;    ++i)    {    int  i  =  1;	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  index.length;  ++i);  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  int  i  =  0;  i  <  index.length;  ++i);  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    int  i  =  0;  i  <  index.length;  ++i);	  	non-compiled	[CE]  >  expected	4	None	add
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  int  i  =  0;  i  <  ir;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    ir;    ++i)    {    int  i  =  0;  i  <  ir;  ++i)  {	  	non-compiled	[CE]  >  expected	23	None	add
47	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  ++i);  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  ++i);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  index.length;  ++i)  {  int  order;  ++i);  }	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    ++i);    	non-compiled	[CE]  ';'  expected	26	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  ++i);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  ++i);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  ++i);  }	  for(int    i    =    1;    i    <    order;    ++i)    {    int    order;    ++i);    	non-compiled	[CE]  ';'  expected	26	None	replace
49	[BUG]  [BUGGY]  int  order  =  c[index[i]]  -  small;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  c[index[i]]  -  small;  [BUGGY]      for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]]  -  small;	  int    order    =    c[index[i]]    -    1;    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
50	[BUG]  [BUGGY]  int  i  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  i  =  0;  i  <  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	10	None	replace
51	[BUG]  [BUGGY]  int  i  =  1;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  i  =  1;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  i  =  1;  i  <  order;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    int    i    =    1;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	14	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	add	for(int  i  =  1;  i  <  index.length  -  1;  ++i)  {	  for(int    i    =    1;    i    <    index.length;    ++i)    {    	compilable	  [FE]  AssertionError  	2	2	replace
53	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length  -  1;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length  -  1;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  index.length  -  1;  ++i)  {	  for(int    i    =    1;    i    <    index.length;    ++i)    {    	compilable	  [FE]  AssertionError  	2	2	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    for(int    i    =    0;    i    <    ordered;    ++i)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  i  =  1;  ++i)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  int  i  =  1;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    index.length;    ++i)    {    int  i  =  1;  ++i)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
56	[BUG]  [BUGGY]  int  order  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]        AssertionError      [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  int  order  =  0;  i  <  order;  ++i)  {  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  0;  i  <  order;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    int    order    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  >  expected	27	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(index[i]][index[i]]  <  -small)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(index[i]][index[i]]  <  -small)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    ir;    ++i)    {    if(index[i]][index[i]]  <  -small)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],	  	non-compiled	[CE]  ')'  expected	23	None	add
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(index[i]][index[i]]  <  -small)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  if(index[i]][index[i]]  <  -small)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    ir;    ++i)    {    if(index[i]][index[i]]  <  -small)  {  if(c[index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i	  	non-compiled	[CE]  ')'  expected	23	None	add
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]        int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }        [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  if(index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  [BUGGY]      if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    index.length;    ++i)    {    if(index[i]][index[i]]  <  -small)  {  throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }	  	non-compiled	[CE]  ')'  expected	4	None	add
