bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	add	for(int  i  =  1;  i  <  index.length;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    	compilable	  [FE]  AssertionError  	9	2	replace
2	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  index.length;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  1;  i  <  index.length;  ++i)  {	  for(int    i    =    1;    i    <    order;    ++i)    {    	compilable	  [FE]  AssertionError  	9	2	replace
3	[BUG]  [BUGGY]  int  order  =  c[index[i]][index[i]]  -  1;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  c[index[i]][index[i]]  -  1;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]][index[i]]  -  1;	      int    order    =    c[index[i]][index[i]];    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	add	for(int  i  =  0;  i  <  index.length;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	compilable	  [FE]  AssertionError  	5	2	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  index.length;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  index.length;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	compilable	  [FE]  AssertionError  	5	2	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [CE]  cannot  find  symbol  size  [FE]      AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  size;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  size;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	non-compiled	[CE]  cannot  find  symbol  size	5	None	replace
7	[BUG]  [BUGGY]  int  order  =  matrix.length  -  1;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  matrix.length  -  1;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  matrix.length  -  1;	      int    order    =    matrix.length;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
8	[BUG]  [BUGGY]  int  order  =  r.length;  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  r.length;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  r.length;	      int    order    =    matrix.length;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  for(int  i  =  0;  i  <  order;  ++i)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  for(int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    order;    ++i)    {    for(int  i  =  0;  i  <  order;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  i  =  0;  i  <  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    order;    ++i)    {    int  i  =  0;  i  <  order;  ++i)  {	  	non-compiled	[CE]  >  expected	4	None	add
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  for(int  i  =  0;  i  <  ordered;  ++i)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  for(int  i  =  0;  i  <  ordered;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    order;    ++i)    {    for(int  i  =  0;  i  <  ordered;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
12	[BUG]  [BUGGY]  double  order  =  c[index[i]][index[i]].doubleValue();  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  double  order  =  c[index[i]][index[i]].doubleValue();  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	double  order  =  c[index[i]][index[i]].doubleValue();	      int    order    =    c[index[i]][index[i]].doubleValue();    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  for(int  i  =  1;  i  <  order;  ++i)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  for(int  i  =  1;  i  <  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    order;    ++i)    {    for(int  i  =  1;  i  <  order;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
14	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  i  =  1;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  i  =  1;  i  <  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    order;    ++i)    {    int  i  =  1;  i  <  order;  ++i)  {	  	non-compiled	[CE]  >  expected	8	None	add
15	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  for(int  i  =  1;  i  <  ordered;  ++i)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  for(int  i  =  1;  i  <  ordered;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    order;    ++i)    {    for(int  i  =  1;  i  <  ordered;  ++i)  {	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
16	[BUG]  [BUGGY]  int  order  =  c[index[i]]  -  1;  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  c[index[i]]  -  1;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]]  -  1;	      int    order    =    c[index[i]];    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
17	[BUG]  [BUGGY]  int  order  =  c.length  -  1;  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  c.length  -  1;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c.length  -  1;	      int    order    =    c.length;    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
18	[BUG]  [BUGGY]  int  order  =  c[index[i]][index[i]]  -  small;  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  c[index[i]][index[i]]  -  small;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  c[index[i]][index[i]]  -  small;	      int    order    =    c[index[i]][index[i]];    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
19	[BUG]  [BUGGY]  int  order  =  index.length;  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  int  order  =  index.length;  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	int  order  =  index.length;	      int    order    =    c.length;    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    order;    ++i)    {    int  order;	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  ++i)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    order;    ++i)    {    int  order;  ++i)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
22	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  order;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  order;  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    order;    ++i)    {    int  order;	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	add	for(int  i  =  0;  i  <  ir;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	compilable	  [FE]  AssertionError  	5	2	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  ir;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int  i  =  0;  i  <  ir;  ++i)  {	  for(int    i    =    0;    i    <    order;    ++i)    {    	compilable	  [FE]  AssertionError  	5	2	replace
25	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  order;  ++i)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    order;    ++i)    {    int  order;  ++i)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
26	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  order;  ++i);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  1;  i  <  order;  ++i)  {  int  order;  ++i);  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    1;    i    <    order;    ++i)    {    int  order;  ++i);	  	non-compiled	[CE]  ';'  expected	8	None	add
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  for(int  i  =  0;  i  <  order;  ++i)  {  int  order  =  0;  i  <  order;  ++i)  {  [BUGGY]    if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	for(int    i    =    0;    i    <    order;    ++i)    {    int  order  =  0;  i  <  order;  ++i)  {	  	non-compiled	[CE]  >  expected	4	None	add
28	[BUG]  [BUGGY]  double  order  =  c[index[i]];  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  throw  new  NonPositiveDefiniteMatrixException(c[ir][ir],  ir,  small);  }      [BUGGY]  double  order  =  c[index[i]];  [BUGGY]    for  (int  i  =  r;  i  <  order;  ++i)  {  if  (c[index[i]][index[i]]  <  -small)  {    throw  new  NonPositiveDefiniteMatrixException(c[index[i]][index[i]],  i,  small);  }  }    ++r;  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.7071067811865475	105	105	2	replace	double  order  =  c[index[i]];	      int    order    =    c[index[i]];    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
