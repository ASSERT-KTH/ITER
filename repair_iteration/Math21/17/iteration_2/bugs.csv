bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[r]]  +  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[r]]  +  1;	      int    r    =    index[swap[r]];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  if  (swap[r]!=  0)  {  if  (swap[r]!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]!=  0)  {  if  (swap[r]!=  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]!=    0)    {    if  (swap[r]!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
3	[BUG]  [BUGGY]  if  (swap[r]!=  0)  {  if  (swap[r]  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]!=  0)  {  if  (swap[r]  >=  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]!=    0)    {    if  (swap[r]  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
4	[BUG]  [BUGGY]  if  (swap[r]!=  0)  {  if  (swap[r]  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]!=  0)  {  if  (swap[r]  ==  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]!=    0)    {    if  (swap[r]  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  int  r  =  index[swap[0]]  -  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[0]]  -  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[0]]  -  1;	      int    r    =    index[swap[0]];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
6	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  <  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	add	if  (swap[r]  <  0)  {	  if    (swap[r]    >    r)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	replace
7	[BUG]  [BUGGY]  if  (swap[r]  <  0)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  <  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if  (swap[r]  <  0)  {	  if    (swap[r]    >    r)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	5	3	replace
8	[BUG]  [BUGGY]  if  (swap[r]  >=  0)  {  if  (swap[r]  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  >=  0)  {  if  (swap[r]  >=  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    >=    0)    {    if  (swap[r]  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
9	[BUG]  [BUGGY]  if  (swap[r]  >=  0)  {  if  (swap[r]!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  >=  0)  {  if  (swap[r]!=  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    >=    0)    {    if  (swap[r]!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
10	[BUG]  [BUGGY]  if  (swap[r]  >=  0)  {  if  (swap[r]  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  >=  0)  {  if  (swap[r]  >>  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    >=    0)    {    if  (swap[r]  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
11	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]]  -  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  1;	      int    r    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  if  (swap[r]  >  r)  {  if  (swap[r]  >  r)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  >  r)  {  if  (swap[r]  >  r)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    >    r)    {    if  (swap[r]  >  r)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
13	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  b[i]];  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]]  +  b[i]];  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  b[i]];	      int    r    =    index[swap[i]]    +    c[i]];    	non-compiled	[CE]  ';'  expected	3	None	replace
14	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  c[i];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]]  +  c[i];  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  c[i];	      int    r    =    index[swap[i]]    +    c[i]];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  int  r  =  index[i][ij];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[i][ij];  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ij];	      int    r    =    index[i][ii];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  int  r  =  index[i][ii]  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[i][ii]  +  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ii]  +  1;	      int    r    =    index[i][ii];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  int  r  =  index[swap[i]].doubleValue()  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]].doubleValue()  +  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]].doubleValue()  +  1;	      int    r    =    index[swap[i]].doubleValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]]  +  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  1;	      int    r    =    index[swap[i]];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  swap[i]];  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]]  +  swap[i]];  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  swap[i]];	      int    r    =    index[swap[i]]    +    c[i]];    	non-compiled	[CE]  ';'  expected	3	None	replace
20	[BUG]  [BUGGY]  if  (swap[r]  >  b)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if  (swap[r]  >  b)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if  (swap[r]  >  b)  {	  if    (swap[r]    >    r)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	5	None	replace
21	[BUG]  [BUGGY]  int  r  =  index[swap[0]]  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[0]]  +  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[0]]  +  1;	      int    r    =    index[swap[0]];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if(swap[r]  >  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	add	if(swap[r]  >  0)  {	  if    (swap[r]    >=    0)    {    	compilable	  [FE]  AssertionError  	11	2	replace
23	[BUG]  [BUGGY]  if(swap[r]  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if(swap[r]  >  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]  >  0)  {	  if    (swap[r]    >=    0)    {    	compilable	  [FE]  AssertionError  	11	2	replace
24	[BUG]  [BUGGY]  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if(swap[r]  ==  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	add	if(swap[r]  ==  0)  {	  if    (swap[r]!=    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	7	3	replace
25	[BUG]  [BUGGY]  if(swap[r]  ==  0)  {  [FE]  NonPositiveDefiniteMatrixException  [FE]    AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  if(swap[r]  ==  0)  {  [BUGGY]    int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]  ==  0)  {	  if    (swap[r]!=    0)    {    	compilable	  [FE]  NonPositiveDefiniteMatrixException  	7	3	replace
26	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  c[i]];  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[i]]  -  c[i]];  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  c[i]];	      int    r    =    index[swap[i]]    +    c[i]];    	non-compiled	[CE]  ';'  expected	3	None	replace
27	[BUG]  [BUGGY]  int  r  =  matrix[swap[i]].doubleValue();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  matrix[swap[i]].doubleValue();  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  matrix[swap[i]].doubleValue();	      int    r    =    index[swap[i]].doubleValue();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  -  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[swap[r]]  -  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[r]]  -  1;	      int    r    =    index[swap[r]];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  int  r  =  c[i][ii];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  c[i][ii];  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  c[i][ii];	      int    r    =    index[i][ii];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  int  r  =  index[i][ii]  -  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }      [BUGGY]  int  r  =  index[i][ii]  -  1;  [BUGGY]    if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ii]  -  1;	      int    r    =    index[i][ii];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
