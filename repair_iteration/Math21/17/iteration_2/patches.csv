bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  *  c[i];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  *  c[i];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  *  c[i];	  int    r    =    index[swap[i]]    +    c[i];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  b[i];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  +  b[i];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  b[i];	  int    r    =    index[swap[i]]    +    c[i];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  int  r  =  index[swap[0]]  /  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[0]]  /  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[0]]  /  1;	  int    r    =    index[swap[0]]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
4	[BUG]  [BUGGY]  int  r  =  matrix[swap[i]].doubleValue()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  matrix[swap[i]].doubleValue()  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  matrix[swap[i]].doubleValue()  +  1;	  int    r    =    matrix[swap[i]].doubleValue();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
5	[BUG]  [BUGGY]  int  r  =  c[i][ii]  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  c[i][ii]  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  c[i][ii]  +  1;	  int    r    =    c[i][ii];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
6	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  size;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  +  size;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  size;	  int    r    =    index[swap[i]]    +    swap[i]];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
7	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  -  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[r]]  -  2;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[r]]  -  2;	  int    r    =    index[swap[r]]    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
8	[BUG]  [BUGGY]  if  (swap[r]  <  b)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if  (swap[r]  <  b)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if  (swap[r]  <  b)  {	  if    (swap[r]    >    b)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	20	None	replace
9	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  c[i]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  -  c[i]  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  c[i]  +  1;	  int    r    =    index[swap[i]]    -    c[i]];    	non-compiled	[CE]  <identifier>  expected	26	None	replace
10	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  swap[i]];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  -  swap[i]];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  swap[i]];	  int    r    =    index[swap[i]]    -    c[i]];    	non-compiled	[CE]  ';'  expected	26	None	replace
11	[BUG]  [BUGGY]  if(swap[r]  ==  0)  {  if(swap[r]  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if(swap[r]  ==  0)  {  if(swap[r]  ==  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]    ==    0)    {    if(swap[r]  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
12	[BUG]  [BUGGY]  if(swap[r]  ==  0)  {  if(swap[r]  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if(swap[r]  ==  0)  {  if(swap[r]  >=  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]    ==    0)    {    if(swap[r]  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
13	[BUG]  [BUGGY]  if(swap[r]  ==  0)  {  if(swap[r]!=  0)  {  [CE]  illegal  start  of  expression  [FE]        NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if(swap[r]  ==  0)  {  if(swap[r]!=  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]    ==    0)    {    if(swap[r]!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
14	[BUG]  [BUGGY]  int  r  =  index[i][ii]  /  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[i][ii]  /  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ii]  /  1;	  int    r    =    index[i][ii]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
15	[BUG]  [BUGGY]  if(swap[r]  >  0)  {  if(swap[r]  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if(swap[r]  >  0)  {  if(swap[r]  >  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]    >    0)    {    if(swap[r]  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
16	[BUG]  [BUGGY]  if(swap[r]  >  0)  {  If(swap[r]  >  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if(swap[r]  >  0)  {  If(swap[r]  >  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]    >    0)    {    If(swap[r]  >  0)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
17	[BUG]  [BUGGY]  if  (swap[r]  <  0)  {  if  (swap[r]  <  0)  {  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if  (swap[r]  <  0)  {  if  (swap[r]  <  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    <    0)    {    if  (swap[r]  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
18	[BUG]  [BUGGY]  if  (swap[r]  <  0)  {  if  (swap[r]  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if  (swap[r]  <  0)  {  if  (swap[r]  >=  0)  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    <    0)    {    if  (swap[r]  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
19	[BUG]  [BUGGY]  int  r  =  index[i][ij]  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[i][ij]  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ij]  +  1;	  int    r    =    index[i][ij];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  int  r  =  index[i][i]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[i][i]  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][i]  +  1;	  int    r    =    index[i][ij];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  int  r  =  index[i][ii]  -  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[i][ii]  -  2;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ii]  -  2;	  int    r    =    index[i][ii]    -    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  2;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  -  2;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  2;	  int    r    =    index[swap[i]]    -    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
23	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  /  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  /  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  /  1;	  int    r    =    index[swap[i]]    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  /  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[r]]  /  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[r]]  /  1;	  int    r    =    index[swap[r]]    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  int  r  =  index[swap[0]]  -  1  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[0]]  -  1  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[0]]  -  1  +  1;	  int    r    =    index[swap[0]]    -    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  if(swap[r]  >  0)  {  int  r]  =  index[swap[r]];  index[swap[r]  =  r;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if(swap[r]  >  0)  {  int  r]  =  index[swap[r]];  index[swap[r]  =  r;  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if(swap[r]    >    0)    {    int  r]  =  index[swap[r]];  index[swap[r]  =  r;	  	non-compiled	[CE]  ';'  expected	22	None	add
27	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  +  ij;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[r]]  +  ij;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[r]]  +  ij;	  int    r    =    index[swap[r]]    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  int  r  =  c[i][ij];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  c[i][ij];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  c[i][ij];	  int    r    =    c[i][ii];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
29	[BUG]  [BUGGY]  int  r  =  index[i][ii]  -  1  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[i][ii]  -  1  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[i][ii]  -  1  +  1;	  int    r    =    index[i][ii]    -    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
30	[BUG]  [BUGGY]  int  r  =  index[swap[r]]  -  1  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[r]]  -  1  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[r]]  -  1  +  1;	  int    r    =    index[swap[r]]    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
31	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  +  swap[i];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  +  swap[i];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  +  swap[i];	  int    r    =    index[swap[i]]    +    c[i];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  if  (swap[r]  <  0)  {  int  r  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  r;  [CE]  illegal  start  of  expression  [FE]    NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if  (swap[r]  <  0)  {  int  r  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  r;  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    <    0)    {    int  r  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  r;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
33	[BUG]  [BUGGY]  if  (swap[r]  <  0)  {  int  r  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]  =  r;  [CE]  ']'  expected  [FE]      NonPositiveDefiniteMatrixException    [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if  (swap[r]  <  0)  {  int  r  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]  =  r;  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if    (swap[r]    <    0)    {    int  r  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]  =  r;	  	non-compiled	[CE]  ']'  expected	6	None	add
34	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  1  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  -  1  +  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  1  +  1;	  int    r    =    index[swap[i]]    -    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  if  (b[swap[r]  >  swap[r])  {  [CE]  ']'  expected  [FE]        AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  if  (b[swap[r]  >  swap[r])  {  [BUGGY]      int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	if  (b[swap[r]  >  swap[r])  {	  if    (swap[r]    >    b)    {    	non-compiled	[CE]  ']'  expected	20	None	replace
36	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  -  c[i];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  -  c[i];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  -  c[i];	  int    r    =    index[swap[i]]    +    c[i];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
37	[BUG]  [BUGGY]  int  r  =  index[swap[i]]  /  c[i];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  index[swap[i]]  /  c[i];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  index[swap[i]]  /  c[i];	  int    r    =    index[swap[i]]    +    c[i];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  int  r  =  c[i][ii]  -  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  c[i][ii]  -  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  c[i][ii]  -  1;	  int    r    =    c[i][ii];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
39	[BUG]  [BUGGY]  int  r  =  c[swap[i]]  -  index[i]];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  c[swap[i]]  -  index[i]];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  c[swap[i]]  -  index[i]];	  int    r    =    index[swap[i]]    -    c[i]];    	non-compiled	[CE]  ';'  expected	26	None	replace
40	[BUG]  [BUGGY]  int  r  =  swap[swap[0]]  -  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  swap[swap[0]]  -  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  swap[swap[0]]  -  1;	  int    r    =    index[swap[0]]    -    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  int  r  =  swap[i][ii]  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  swap[i][ii]  -  1;  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  swap[i][ii]  -  1;	  int    r    =    index[i][ii]    -    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
42	[BUG]  [BUGGY]  int  r  =  size[swap[i]]  +  b[i]];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      for  (int  i  =  r  +  1;  i  <  order;  ++i)  {  int  ii=  index[i];  int  isi  =  index[swap[i]];  if  (c[ii][ii]  >  c[isi][isi])  {  swap[r]  =  i;  }  }        [BUGGY]  int  r  =  size[swap[i]]  +  b[i]];  [BUGGY]      if  (swap[r]  !=  r)  {  int  tmp  =  index[r];  index[r]  =  index[swap[r]];  index[swap[r]]  =  tmp;  }  int  ir  =  index[r];  if  (c[ir][ir]  <  small)  {  if  (r  ==  0)  {  [CLASS]  RectangularCholeskyDecomposition  [METHOD]  <init>  [RETURN_TYPE]  RealMatrix,double)  RealMatrix  matrix  double  small  [VARIABLES]  double[][]  b  c  int[]  index  swap  boolean  loop  RealMatrix  matrix  root  int  i  ii  ij  ir  isi  j  order  r  rank  tmp  double  e  f  inverse  small  sqrt  	projects/Math21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java	0.8164965809277261	90	90	2	replace	int  r  =  size[swap[i]]  +  b[i]];	  int    r    =    index[swap[i]]    +    b[i]];    	non-compiled	[CE]  ';'  expected	13	None	replace
