bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(skipped  >  0)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	if(skipped  >  0)  {  break;  }	break;  	compilable	timeout	1	1	replace
2	[BUG]  [BUGGY]  if(skipped  >  0)  {  break;  }  timeout  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(skipped  >  0)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	if(skipped  >  0)  {  break;  }	break;  	compilable	timeout	1	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	throw  new  IllegalStateException( " ");	break;  	compilable	  [FE]  IllegalStateException  	1	2	replace
4	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	throw  new  IllegalStateException( " ");	break;  	compilable	  [FE]  IllegalStateException  	1	2	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	throw  new  IllegalArgumentException( " ");	break;  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
6	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  [FE]        AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	throw  new  IllegalArgumentException( " ");	break;  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  throw  new  IOException( " ");  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	throw  new  IOException( " ");	break;  	compilable	  [FE]  IOException  	1	2	replace
8	[BUG]  [BUGGY]  throw  new  IOException( " ");  [FE]  IOException  [FE]          AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  throw  new  IOException( " ");  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	throw  new  IOException( " ");	break;  	compilable	  [FE]  IOException  	1	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(available  >  0)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	if(available  >  0)  {  break;  }	break;  	compilable	  [FE]  AssertionError  	1	2	replace
10	[BUG]  [BUGGY]  if(available  >  0)  {  break;  }  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(available  >  0)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	if(available  >  0)  {  break;  }	break;  	compilable	  [FE]  AssertionError  	1	2	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(skipped  >=  0)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	if(skipped  >=  0)  {  break;  }	break;  	compilable	  [FE]  AssertionError  	1	2	replace
12	[BUG]  [BUGGY]  if(skipped  >=  0)  {  break;  }  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(skipped  >=  0)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	if(skipped  >=  0)  {  break;  }	break;  	compilable	  [FE]  AssertionError  	1	2	replace
13	[BUG]  [BUGGY]  timeout  [FE]                AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(skipped  >  available)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	if(skipped  >  available)  {  break;  }	break;  	compilable	timeout	1	1	replace
14	[BUG]  [BUGGY]  if(skipped  >  available)  {  break;  }  timeout  [FE]                AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  if(skipped  >  available)  {  break;  }  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	if(skipped  >  available)  {  break;  }	break;  	compilable	timeout	1	1	replace
15	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]    [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	  	break;  	compilable	timeout	1	1	replace
16	[BUG]  [BUGGY]    timeout  [FE]                  AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]    [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	  	break;  	compilable	timeout	1	1	replace
17	[BUG]  [BUGGY]  skip  =  input.skip(skipped);  [CE]  cannot  find  symbol  skip  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  skip  =  input.skip(skipped);  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	skip  =  input.skip(skipped);	break;  	non-compiled	[CE]  cannot  find  symbol  skip	1	None	replace
18	[BUG]  [BUGGY]  skip  =  input.skip(available);  [CE]  cannot  find  symbol  skip  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  skip  =  input.skip(available);  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	skip  =  input.skip(available);	break;  	non-compiled	[CE]  cannot  find  symbol  skip	1	None	replace
19	[BUG]  [BUGGY]  timeout  [FE]        AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  skipped  =  input.skip(available);  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	skipped  =  input.skip(available);	break;  	compilable	timeout	1	1	replace
20	[BUG]  [BUGGY]  skipped  =  input.skip(available);  timeout  [FE]        AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  skipped  =  input.skip(available);  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	skipped  =  input.skip(available);	break;  	compilable	timeout	1	1	replace
21	[BUG]  [BUGGY]  timeout  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  continue;  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	add	continue;	break;  	compilable	timeout	1	1	replace
22	[BUG]  [BUGGY]  continue;  timeout  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  continue;  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	continue;	break;  	compilable	timeout	1	1	replace
23	[BUG]  [BUGGY]  skip  =  input.skip(available  +  numToSkip);  [CE]  cannot  find  symbol  skip  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  [BUGGY]  skip  =  input.skip(available  +  numToSkip);  [BUGGY]  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	1.0	99	99	2	replace	skip  =  input.skip(available  +  numToSkip);	break;  	non-compiled	[CE]  cannot  find  symbol  skip	1	None	replace
